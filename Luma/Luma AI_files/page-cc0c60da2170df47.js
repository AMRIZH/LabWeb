(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1931],{79247:function(e,t,n){"use strict";n.d(t,{Z:function(){return r}});let r=(0,n(87618).Z)("ArrowRight",[["line",{x1:"5",x2:"19",y1:"12",y2:"12",key:"13b5wn"}],["polyline",{points:"12 5 19 12 12 19",key:"sfr3i6"}]])},85205:function(e,t,n){Promise.resolve().then(n.t.bind(n,79712,23)),Promise.resolve().then(n.bind(n,71030)),Promise.resolve().then(n.bind(n,53612)),Promise.resolve().then(n.bind(n,13240)),Promise.resolve().then(n.bind(n,43119)),Promise.resolve().then(n.bind(n,15199)),Promise.resolve().then(n.bind(n,46051)),Promise.resolve().then(n.bind(n,2366))},43119:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return C}});var r=n(5833),i=n(25802),a=n(53961),o=n(9781),s=n(46177),l=n(57960),c=n(14829),u=n(30125),d=n(9449),h=(n(65383),n(77278)),p=n(24994),f=n(93823),g=n(20512),m=n(83935),v=n(1738);class _ extends o.Mesh{getClipSpaceBounds(e){let t=_._cardCornerPositions,n=1/this.cardAspect;t[0].set(-.5,-(.5*n),0,1),t[1].set(.5,-(.5*n),0,1),t[2].set(.5,.5*n,0,1),t[3].set(-.5,.5*n,0,1);let r=1/0,i=1/0,a=-1/0,o=-1/0;for(let n=0;n<t.length;n++){t[n].applyMatrix4(this.matrixWorld),t[n].applyMatrix4(e.matrixWorldInverse),t[n].applyMatrix4(e.projectionMatrix),t[n].divideScalar(t[n].w);let s=t[n].x,l=t[n].y;r=Math.min(r,s),i=Math.min(i,l),a=Math.max(a,s),o=Math.max(o,l)}return{minX:r,minY:i,maxX:a,maxY:o,isBackFacing:t[0].x>t[1].x||t[0].y>t[3].y}}static getCardGeometry(e){var t;if(null!=this._cardGeometryCache[e])return this._cardGeometryCache[e];let n=new o.Shape,r=1/e;t=-(.5*r),n.moveTo(-.5,t+.1),n.lineTo(-.5,t+r-.1),n.quadraticCurveTo(-.5,t+r,-.4,t+r),n.lineTo(.4,t+r),n.quadraticCurveTo(.5,t+r,.5,t+r-.1),n.lineTo(.5,t+.1),n.quadraticCurveTo(.5,t,.4,t),n.lineTo(-.4,t),n.quadraticCurveTo(-.5,t,-.5,t+.1);let i=new o.ShapeGeometry(n,24);return this._cardGeometryCache[e]=i,i}static renderCardScenes(e,t,n,r){let i,a=this._cardSceneCamera,s=this._renderTargetStore,l=this._cardSceneViewport,c=this._blurPassScene,u=this._blurPassCamera,d=e.getContext(),h=s.getRenderTarget("s",{width:1*d.drawingBufferWidth,height:1*d.drawingBufferHeight,sampling:o.LinearFilter,type:o.UnsignedByteType,depthBuffer:!0,msaaSamples:0,powerOfTwoMode:m.l.None}),p=e.autoClear;e.getViewport(this._savedViewport),e.setRenderTarget(h),e.autoClear=!1,e.clear(!0,!0,!0),t.updateMatrixWorld(),c.children.length=n.length;let g=-1;for(let i=0;i<n.length;i++){let s,u=n[i];u.updateMatrixWorld(),a.copy(t);{let t,n=u.getClipSpaceBounds(a);s=n.isBackFacing;let d=n.minX,p=n.minY,f=n.maxX,m=n.maxY;null!=r&&-1===g&&r.x>=d&&r.x<=f&&r.y>=p&&r.y<=m&&(g=i),l.x=Math.floor((.5*d+.5)*h.width),l.y=Math.floor((.5*p+.5)*h.height),l.z=Math.ceil((.5*f+.5)*h.width)-l.x,l.w=Math.ceil((.5*m+.5)*h.height)-l.y,a.setViewOffset(h.width,h.height,l.x,h.height-(l.y+l.w),l.z,l.w),e.setViewport(l.x,l.y,l.z,l.w),null==c.children[i]?((t=new o.Mesh(this.blurPassQuadGeometry,new o.MeshBasicMaterial({color:65280}))).parent=c,c.children[i]=t,t.frustumCulled=!1,t.castShadow=!1,t.receiveShadow=!1):t=c.children[i],t.position.set((d+f)*.5,(p+m)*.5,0),s?t.scale.set(0,0,1):t.scale.set(f-d,m-p,1)}if(!s){u.scene.position.copy(u.position),u.scene.rotation.copy(u.rotation),u.scene.scale.copy(u.scale);let t=u.scene.background;u.scene.background instanceof o.Color&&(u.scene.background=null,this._backgroundMaterial.uniforms.color.value.copy(t),v.O.shaderPass(e,{viewport:l,restoreGlobalState:!0,target:h,shader:this._backgroundMaterial,clearColor:!1,clearDepth:!1})),e.render(u.scene,a),u.scene.background=t}}{let t=Math.ceil(Math.log2(h.height/256));i=this.downsampleChain(e,h,t)}let _={width:i.width,height:i.height,sampling:o.LinearFilter,type:o.UnsignedByteType,depthBuffer:!1,msaaSamples:0,powerOfTwoMode:m.l.None},y=s.getRenderTarget("bx",_),x=s.getRenderTarget("by",_),b=Math.ceil(.06*i.height),S=f.Z.get(d,b,.5,1,0,i.texture,i.width,i.height);v.O.renderPass(e,{camera:u,clearColor:{rgb:0,alpha:1},clearDepth:!0,clearStencil:!1,scene:c,target:y,overrideMaterial:S,restoreGlobalState:!0});let w=f.Z.get(d,b,.5,0,1,y.texture,y.width,y.height);for(let t of(v.O.renderPass(e,{camera:u,clearColor:{rgb:0,alpha:1},clearDepth:!0,clearStencil:!1,scene:c,target:x,overrideMaterial:w,restoreGlobalState:!0}),n))t.material.uniforms.sceneMap.value=h.texture,t.material.uniforms.blurMap.value=x.texture;return e.autoClear=p,e.setViewport(this._savedViewport.x,this._savedViewport.y,this._savedViewport.z,this._savedViewport.w),g}static downsampleChain(e,t,n){if(n<=0)return t;let r=t,i=this._renderTargetStore;for(let a=0;a<n;a++){let n=Math.ceil(.5*r.width),s=Math.ceil(.5*r.height);if(1===n&&1===s)break;let l=i.getRenderTarget("ds"+a+t.name,{width:n,height:s,sampling:o.LinearFilter,type:o.UnsignedByteType,depthBuffer:!1,msaaSamples:0,powerOfTwoMode:m.l.None});v.O.blit(e,{source:r.texture,target:l,restoreGlobalState:!0}),r=l}return r}constructor(e,t,n,r,i=320/480){var a;let s,l,c,u,d,h,p,f,g,m,v,x,b=new o.Uniform(new o.Vector2(1,1)),S=new y({viewportResolution:b,cardAspect:i});null!=r&&(null!=r.ui&&(null!=r.ui.metalness&&(S.uniforms.uiMetalRoughIridescenceIOR.value.x=r.ui.metalness),null!=r.ui.roughness&&(S.uniforms.uiMetalRoughIridescenceIOR.value.y=r.ui.roughness),null!=r.ui.iridescence&&(S.uniforms.uiMetalRoughIridescenceIOR.value.z=r.ui.iridescence),null!=r.ui.iridescenceIOR&&(S.uniforms.uiMetalRoughIridescenceIOR.value.w=r.ui.iridescenceIOR)),null!=r.surface&&(null!=r.surface.roughness&&(S.roughness=r.surface.roughness),null!=r.surface.metalness&&(S.metalness=r.surface.metalness),null!=r.surface.clearcoat&&(S.clearcoat=r.surface.clearcoat),null!=r.surface.clearcoatRoughness&&(S.clearcoatRoughness=r.surface.clearcoatRoughness),null!=r.surface.iridescence&&(S.iridescence=r.surface.iridescence),null!=r.surface.iridescenceIOR&&(S.iridescenceIOR=r.surface.iridescenceIOR))),super(_.getCardGeometry(i),S),this.scene=new o.Scene,this.uViewportResolution=b,this.cardAspect=i,this.title=e;let w=new o.Vector4;this.onBeforeRender=(e,t,n)=>{e.getCurrentViewport(w),this.uViewportResolution.value.set(w.z,w.w)},(a=1/i*1024,s=71.68,l=153.6,c=new o.Vector2(1024-s,a-s),u=.8*l,d=new o.Vector2(-1,1).normalize().multiplyScalar(.4*l),p=(h=new o.Color(n)).getHexString(),f={h:0,s:0,l:0},h.getHSL(f),g=new o.Color().setHSL(0,0,f.l>.5?0:1).getHexString(),m="Helvetica Neue, Arial, sans-serif",v='<svg xmlns="http://www.w3.org/2000/svg" width="'.concat(1024,'" height="').concat(a,'" viewBox="0 0 ').concat(1024," ").concat(a,'">'),x='\n		<!-- title, centered -->\n		<text\n			x="'.concat(512,'" y="').concat(.13*a,'"\n			dominant-baseline="middle"\n			text-anchor="middle"\n			font-family="').concat(m,'"\n			font-size="').concat(184.32,'"\n			fill="#').concat(p,'"\n		>').concat(e,'</text>\n\n		<!-- subtitle, running along the bottom-right edge -->\n		<text\n			x="').concat(c.x,'" y="').concat(c.y,'"\n			transform="rotate(-90 ').concat(c.x," ").concat(c.y,')"\n			dominant-baseline="auto"\n			text-anchor="start"\n			font-family="').concat(m,'"\n			font-size="').concat(102.4,'"\n			font-style="italic"\n			font-weight="lighter"\n			fill="#').concat(p,'"\n		>\n			').concat(t.slice().reverse().map((e,t)=>'<tspan x="'.concat(972.8,'" dy="').concat(t>0?"-1.2em":"0em",'">').concat(e,"</tspan>")).join(""),'\n		</text>\n\n		<!-- circle button, bottom-left -->\n		<g\n			transform="translate(').concat(s+l," ").concat(a-s-l,')"\n		>\n			<circle\n				cx="0" cy="0"\n				r="').concat(l,'"\n				fill="#').concat(p,'"\n			/>\n			<!-- arrow -->\n			<path\n				d="\n					M ').concat(-(.5*u)," 0\n					L ").concat(.5*u," 0\n					\n					M ").concat(.5*u," 0\n					L ").concat(.5*u+d.x," ").concat(0+d.y,"\n\n					M ").concat(.5*u," 0\n					L ").concat(.5*u+d.x," ").concat(0-d.y,'\n				"\n				stroke="#').concat(g,'"\n				stroke-width="').concat(.07*l,'"\n				stroke-linecap="round"\n				stroke-linejoin="round"\n				fill="none"\n			/>\n		</g>\n	'),new Promise((e,t)=>{let n=new Image;n.onload=()=>{let t=new o.Texture(n);t.generateMipmaps=!0,t.anisotropy=8,t.magFilter=o.LinearFilter,t.minFilter=o.LinearMipMapLinearFilter,t.needsUpdate=!0,e(t)},n.onerror=t,n.src="data:image/svg+xml;base64,"+btoa("".concat(v).concat(x,"</svg>"))})).then(e=>{e.offset.set(.5,.5),e.repeat.set(1,i),S.map=e,S.needsUpdate=!0})}}_._cardGeometryCache={},_._renderTargetStore=new m.Z,_._savedViewport=new o.Vector4,_._cardCornerPositions=[new o.Vector4(0,0,0,1),new o.Vector4(0,0,0,1),new o.Vector4(0,0,0,1),new o.Vector4(0,0,0,1)],_._cardSceneCamera=new o.PerspectiveCamera,_._blurPassScene=new o.Scene,_._blurPassCamera=new o.OrthographicCamera(-1,1,1,-1,0,1),_._cardSceneViewport=new o.Vector4,_._backgroundMaterial=new o.ShaderMaterial({uniforms:{color:new o.Uniform(new o.Color(0))},fragmentShader:"\n			uniform vec3 color;\n			void main() {\n				gl_FragColor = vec4(color, 1.0);\n			}\n		",depthWrite:!1,depthTest:!1}),_.blurPassQuadGeometry=new o.PlaneGeometry(1,1);class y extends g.B{constructor(e){super({uniforms:{viewportResolution:e.viewportResolution,sceneMap:new o.Uniform(e.sceneMap),blurMap:new o.Uniform(e.blurMap),blurEdges:new o.Uniform(new o.Vector2(.4,.65)),uiMetalRoughIridescenceIOR:new o.Uniform(new o.Vector4(1,.15,.9,1.4)),sceneMapGammaDecode:new o.Uniform(!1)},defines:{USE_UV:"",USE_IRIDESCENCE:""},vertexShader:"\n				#define STANDARD\n				varying vec3 vViewPosition;\n				#ifdef USE_TRANSMISSION\n					varying vec3 vWorldPosition;\n				#endif\n				#include <common>\n				#include <uv_pars_vertex>\n				#include <color_pars_vertex>\n				#include <normal_pars_vertex>\n\n				void main() {\n					#include <uv_vertex>\n					#include <color_vertex>\n					#include <beginnormal_vertex>\n					#include <defaultnormal_vertex>\n					#include <normal_vertex>\n					#include <begin_vertex>\n					#include <project_vertex>\n					vViewPosition = - mvPosition.xyz;\n					#include <worldpos_vertex>\n				}\n			",fragmentShader:"\n				#define STANDARD\n				#ifdef PHYSICAL\n					#define IOR\n					#define USE_SPECULAR\n				#endif\n				uniform vec3 diffuse;\n				uniform vec3 emissive;\n				uniform float roughness;\n				uniform float metalness;\n				uniform float opacity;\n				#ifdef IOR\n					uniform float ior;\n				#endif\n				#ifdef USE_SPECULAR\n					uniform float specularIntensity;\n					uniform vec3 specularColor;\n					#ifdef USE_SPECULAR_COLORMAP\n						uniform sampler2D specularColorMap;\n					#endif\n					#ifdef USE_SPECULAR_INTENSITYMAP\n						uniform sampler2D specularIntensityMap;\n					#endif\n				#endif\n				#ifdef USE_CLEARCOAT\n					uniform float clearcoat;\n					uniform float clearcoatRoughness;\n				#endif\n				#ifdef USE_IRIDESCENCE\n					uniform float iridescence;\n					uniform float iridescenceIOR;\n					uniform float iridescenceThicknessMinimum;\n					uniform float iridescenceThicknessMaximum;\n				#endif\n				#ifdef USE_SHEEN\n					uniform vec3 sheenColor;\n					uniform float sheenRoughness;\n					#ifdef USE_SHEEN_COLORMAP\n						uniform sampler2D sheenColorMap;\n					#endif\n					#ifdef USE_SHEEN_ROUGHNESSMAP\n						uniform sampler2D sheenRoughnessMap;\n					#endif\n				#endif\n				#ifdef USE_ANISOTROPY\n					uniform vec2 anisotropyVector;\n					#ifdef USE_ANISOTROPYMAP\n						uniform sampler2D anisotropyMap;\n					#endif\n				#endif\n				varying vec3 vViewPosition;\n				#include <common>\n				#include <packing>\n				#include <dithering_pars_fragment>\n				#include <color_pars_fragment>\n				#include <uv_pars_fragment>\n				#include <map_pars_fragment>\n				#include <lightmap_pars_fragment>\n				#include <emissivemap_pars_fragment>\n				#include <iridescence_fragment>\n				#include <cube_uv_reflection_fragment>\n				#include <envmap_common_pars_fragment>\n				#include <envmap_physical_pars_fragment>\n				#include <lights_pars_begin>\n				#include <normal_pars_fragment>\n				#include <lights_physical_pars_fragment>\n				#include <bumpmap_pars_fragment>\n				#include <normalmap_pars_fragment>\n				#include <clearcoat_pars_fragment>\n				#include <iridescence_pars_fragment>\n				#include <roughnessmap_pars_fragment>\n				#include <metalnessmap_pars_fragment>\n\n				uniform sampler2D sceneMap;\n				uniform sampler2D blurMap;\n				uniform bool sceneMapGammaDecode;\n				uniform vec2 viewportResolution;\n				uniform vec2 blurEdges;\n				uniform vec4 uiMetalRoughIridescenceIOR;\n\n				void main() {\n					vec2 screenUv = gl_FragCoord.xy / viewportResolution;\n\n					vec4 sampledDiffuseColor = texture2D( sceneMap, screenUv );\n					vec4 sampledBlurColor = texture2D( blurMap, screenUv );\n					#if defined( USE_MAP )\n					vec4 sampledUiColor = texture2D( map, vMapUv );\n					#endif\n\n					vec4 diffuseColor = vec4( diffuse, opacity );\n					ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n					vec3 totalEmissiveRadiance = emissive;\n\n					// include <map_fragment> {\n					#ifdef USE_MAP\n					{\n						float vUvRadius = length(vUv);\n						float blurRegionAlpha = smoothstep(blurEdges.x, blurEdges.y, vUvRadius);\n						sampledDiffuseColor.rgb = mix(\n							sampledDiffuseColor.rgb,\n							sampledBlurColor.rgb,\n							blurRegionAlpha\n						) * smoothstep(1.0, 0.4, vUvRadius * 0.9); // vignette\n\n						// convert to linear space\n						if (sceneMapGammaDecode) {\n							sampledDiffuseColor.rgb = pow(sampledDiffuseColor.rgb, vec3(2.2));\n						}\n						\n						// blend in ui layer\n						#if defined( USE_MAP )\n						sampledDiffuseColor.rgb = mix(sampledDiffuseColor.rgb, sampledUiColor.rgb * sampledUiColor.a, sampledUiColor.a);\n						#endif\n\n						diffuseColor *= sampledDiffuseColor;\n					}\n					#endif\n					// }\n\n					// include <color_fragment> {\n					#if defined( USE_COLOR_ALPHA )\n						diffuseColor *= vColor;\n					#elif defined( USE_COLOR )\n						diffuseColor.rgb *= vColor;\n					#endif\n					// }\n\n					// include <roughnessmap_fragment> {\n					float roughnessFactor = roughness;\n					#ifdef USE_ROUGHNESSMAP\n						vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n						// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n						roughnessFactor *= texelRoughness.g;\n					#endif\n					// }\n\n					// include <metalnessmap_fragment> {\n					float metalnessFactor = metalness;\n					#ifdef USE_METALNESSMAP\n						vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n						// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n						metalnessFactor *= texelMetalness.b;\n					#endif\n					// }\n\n					#if defined( USE_MAP )\n					metalnessFactor = mix(metalnessFactor, uiMetalRoughIridescenceIOR.x, sampledUiColor.a);\n					roughnessFactor = mix(roughnessFactor, uiMetalRoughIridescenceIOR.y, sampledUiColor.a);\n					#endif\n\n					#include <normal_fragment_begin>\n					#include <normal_fragment_maps>\n					#include <clearcoat_normal_fragment_begin>\n					#include <clearcoat_normal_fragment_maps>\n					#include <emissivemap_fragment>\n					#include <lights_physical_fragment>\n\n					#if defined( USE_MAP ) && defined( USE_IRIDESCENCE )\n					material.iridescence = mix(material.iridescence, uiMetalRoughIridescenceIOR.z, sampledUiColor.a);\n					material.iridescenceIOR = mix(material.iridescenceIOR, uiMetalRoughIridescenceIOR.w, sampledUiColor.a);\n					material.clearcoat = mix(material.clearcoat, 0.0, sampledUiColor.a);\n					#endif\n\n					#include <lights_fragment_begin>\n					#include <lights_fragment_maps>\n					#include <lights_fragment_end>\n\n					vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n					vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\n					vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\n					#ifdef USE_SHEEN\n						float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n						outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n					#endif\n\n					#ifdef USE_CLEARCOAT\n						float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n						vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n						outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n					#endif\n\n					// include <opaque_fragment> {\n					#ifdef OPAQUE\n						diffuseColor.a = 1.0;\n					#endif\n					gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n					// }\n\n					// blend in ui layer, out of PBR\n					// #if defined( USE_MAP )\n					// gl_FragColor.rgb = mix(gl_FragColor.rgb, sampledUiColor.rgb, sampledUiColor.a);\n					// #endif\n\n					#include <tonemapping_fragment>\n					#include <colorspace_fragment>\n					#include <premultiplied_alpha_fragment>\n					#include <dithering_fragment>\n				}\n			",roughness:.3,metalness:.3,clearcoat:1,clearcoatRoughness:.159,iridescence:.9,iridescenceIOR:1.4,side:o.DoubleSide})}}var x=n(23360),b=n(15835),S=n.n(b),w=n(49327);let P=320/480;function C(e){let{...t}=e,n=(0,a.useRef)(null);return(0,a.useEffect)(()=>{if(null===n.current)return;let e=function(e){var t,n,r;let a,f,g=e.container,m=document.createElement("canvas");m.style.position="absolute",m.style.top="0",m.style.left="0",m.style.width="100%",m.style.height="100%",m.width=Math.floor(g.clientWidth*devicePixelRatio),m.height=Math.floor(g.clientHeight*devicePixelRatio),g.prepend(m);let v=new p.Z(document.body,{autoCapturePointer:!1,disableDefaultBehavior:!1}),y=new d.I,b=new o.WebGLRenderer({antialias:!0,canvas:m});b.setClearColor(0,0),b.toneMapping=o.CineonToneMapping,b.toneMappingExposure=1,"drawingBufferColorSpace"in b.getContext()&&(console.log("Setting drawingBufferColorSpace to display-p3"),b.outputColorSpace=o.DisplayP3ColorSpace),b.debug.onShaderError=h.Q;let S=new o.PerspectiveCamera;S.aspect=m.width/m.height,S.updateProjectionMatrix(),S.position.z=2,S.lookAt(0,0,0);let w=new s.z(S,b.domElement);w.enablePan=!1,w.enableZoom=!1,w.enableRotate=!1;let C=new o.Scene;C.backgroundBlurriness=.5,({_environmentUrl:null,get environmentUrl(){return this._environmentUrl},set environmentUrl(value){this._environmentUrl=value,null==value?C.environment=null:(0,c.m)(b,"https://cdn-luma.com/public/demos/luma-landing-cards/v3/assets/environments/"+value).then(e=>{C.environment=e})}}).environmentUrl="pink_sunrise_1k-0.5x-exposure.hdr";let T=new _("CAPTURE",["Interactive","3D Scenes"],16777215,void 0,P);T.position.x=.6,T.material.uniforms.sceneMapGammaDecode.value=!0,T.scene.background=new o.Color(0),C.add(T);let A=new _("IMAGINE",["Text to 3D"],0,{ui:{metalness:0,roughness:0}},P);A.scene.background=new o.Color(16777215),A.position.x=-.6,C.add(A);let R=[A,T],D=u.A.Exponential(.3),B=u.A.Exponential(.1),M=u.A.Exponential(.08);T.material.uniforms.blurEdges.value.clone();let O=T.material.uniforms.uiMetalRoughIridescenceIOR.value.clone(),E=[{url:"https://lumalabs.ai/capture/08e5c599-0741-4476-bb1b-ade902f01169",rotation:0,z:-1,scale:1},{url:"https://lumalabs.ai/capture/2b2112cd-9aa0-44f3-88b3-fde365066a3b",rotation:.5*Math.PI,z:-1,scale:.5},{url:"https://lumalabs.ai/capture/4da7cf32-865a-4515-8cb9-9dfc574c90c2",rotation:0,z:-2,x:-1,y:0,scale:1},{url:"https://lumalabs.ai/capture/68C0F847-2E03-4512-B64E-885A024F78B9",rotation:Math.PI,z:-1,scale:1}];t=Math.random()*E.length|0,T.scene.clear(),a=E[t],(f=new i.ij({source:a.url,enableThreeShaderIntegration:!1,particleRevealEnabled:!0})).position.z=a.z,f.position.x=null!==(n=a.x)&&void 0!==n?n:0,f.position.y=null!==(r=a.y)&&void 0!==r?r:0,f.rotation.y=a.rotation,f.scale.setScalar(a.scale),T.scene.add(f);let k=["2d198ad20f67_model.glb","cat-mask-decimated.glb","119057787c5c_model.glb","b38fafd23526_model.glb","d696d21d1599_model.glb"],L=5/4,j=async(e,t)=>new Promise((n,r)=>{let i=[],a=[];if(x.g.forAllInstances(A.scene,o.Mesh,e=>{if(e.material instanceof F){let t=e.material.uniforms.animationProgress;i.push(t),y.springTo(t,"value",0,u.A.Exponential(L)),e.material.uniforms.animationDirection.value=-1,a.push(e)}}),0===a.length){n(),t();return}let s=!1,l=y.onAfterStep.addListener(()=>{let r=!0,o=!0;for(let t of i)if(Math.abs(t.value)>e&&(o=!1),Math.abs(t.value)>.01&&(r=!1),!r&&!o)break;if(!s&&o&&(t(),s=!0),r){for(let e of(l.remove(),a)){var c;null===(c=e.parent)||void 0===c||c.remove(e)}n()}})}),V=new l.E,z=(e,t)=>{let n="https://cdn-luma.com/public/demos/luma-landing-cards/v3/assets/models/"+e;console.log("Loading GLB",n),V.load(n,async n=>{await j(.7,()=>{let r;let i=new o.Uniform(0),a=(r=n.scene,x.g.forAllInstances(r,o.Mesh,e=>{if(e.material instanceof o.MeshStandardMaterial||e.material instanceof o.MeshPhysicalMaterial){let t=F.createFromMaterial(e.material);t.uniforms.animationProgress=i,e.material=t,e.onBeforeRender=(e,n,r,a,o,s)=>{t.transparent=i.value<.99}}}),r);a.name=e,a.rotation.y=-(.5*Math.PI),a.position.z=-.75,A.scene.add(a),t?y.springTo(i,"value",1,u.A.Exponential(L)):i.value=1}),setTimeout(()=>{let t=(k.indexOf(e)+1)%k.length;z(k[t],!0)},4e3)})};z("cat-mask-decimated.glb",!1);let I={z:3,set mouseSensitivity(value){this.z=-9.5*value+10},get mouseSensitivity(){return-((this.z-10)/9.5)}};I.mouseSensitivity=.607;let U={known:!1,x:0,y:0,mouseDown:!1},G={x:0,y:0,mouseDown:!1};{let t=e=>{if(e.isPrimary){let t=m.getBoundingClientRect();U.known=!0,U.x=e.clientX,U.y=e.clientY,U.mouseDown=(1&e.buttons)!=0,G={x:(U.x-t.left)/t.width*2-1,y:-((U.y-t.top)/t.height*2)+1,mouseDown:U.mouseDown},"touch"===e.pointerType&&"pointerup"===e.type&&(U.known=!1)}};v.events.pointerMove.addListener(t),v.events.pointerDown.addListener(t),v.events.pointerUp.addListener(t),m.addEventListener("click",t=>{for(let t of R){let{minX:n,minY:r,maxX:i,maxY:a,isBackFacing:o}=t.getClipSpaceBounds(S);if(G.x>=n&&G.x<=i&&G.y>=r&&G.y<=a){t===T&&e.onCaptureClick(),t===A&&e.onImagineClick();break}}}),window.addEventListener("mouseout",e=>{U.known=!1})}return b.setAnimationLoop(()=>{let e=Math.floor(g.clientWidth*devicePixelRatio),t=Math.floor(g.clientHeight*devicePixelRatio);(m.width!==e||m.height!==t)&&(m.width=e,m.height=t,S.aspect=e/t,S.updateProjectionMatrix(),b.setSize(e,t,!1));let n=Math.sqrt(G.x*G.x+G.y*G.y),r=U.known?new o.Vector3(1.5*G.x,G.y,I.z+Math.pow(.7*n,8)):new o.Vector3(0,0,I.z+1e5),i=new o.Quaternion,a=new o.Quaternion;for(let e of R)i.copy(e.quaternion),e.lookAt(r),a.copy(e.quaternion),e.quaternion.copy(i),y.springTo(e,"quaternion",a,D);A.scene.environment=C.environment,y.tick();let s=_.renderCardScenes(b,S,R,G);-1===s?m.style.cursor="default":m.style.cursor="pointer";for(let e=0;e<R.length;e++){let t=R[e];if(e===s){y.springTo(t.material.uniforms.uiMetalRoughIridescenceIOR.value,"x",Math.min(O.x-.25,1),B),y.springTo(t.material.uniforms.uiMetalRoughIridescenceIOR.value,"y",Math.min(O.y+.25,1),B),y.springTo(t.material.uniforms.uiMetalRoughIridescenceIOR.value,"z",Math.min(O.z+.25,1),B);let e=G.mouseDown?1.15:1.05;y.springTo(t,"scale",new o.Vector3(e,e,e),M)}else y.springTo(t.material.uniforms.uiMetalRoughIridescenceIOR,"value",O,B),y.springTo(t,"scale",new o.Vector3(1,1,1),M)}b.setRenderTarget(null),b.render(C,S)}),{dispose:()=>{console.log("%cDisposing Cards","color: orange;"),b.setAnimationLoop(null),b.dispose(),g.removeChild(m),v.removeEventListeners()}}}({container:n.current,onCaptureClick:()=>{window.location.href="/interactive-scenes"},onImagineClick:()=>{window.location.href="/genie"}});return()=>{e.dispose()}},[]),(0,r.jsx)(r.Fragment,{children:(0,r.jsx)(w.Z,{style:{animationDuration:"1.4s"},children:(0,r.jsxs)("div",{ref:n,style:{position:"relative",display:"flex",justifyContent:"center",alignItems:"center",gap:"10px",maxWidth:"100%",pointerEvents:"auto"},...t,children:[(0,r.jsx)(S(),{href:"/genie",target:"_blank",id:"imagine-placeholder",style:{aspectRatio:"".concat(P),width:"240px",display:"block",position:"relative",userSelect:"none"}}),(0,r.jsx)(S(),{href:"/interactive-scenes",target:"_blank",id:"capture-placeholder",style:{aspectRatio:"".concat(P),width:"240px",display:"block",position:"relative",userSelect:"none"}})]})})})}class F extends g.B{static createFromMaterial(e){let t={};return t.alphaHash=e.alphaHash,t.alphaTest=e.alphaTest,t.alphaToCoverage=e.alphaToCoverage,t.blendDst=e.blendDst,t.blendDstAlpha=e.blendDstAlpha,t.blendEquation=e.blendEquation,t.blendEquationAlpha=e.blendEquationAlpha,t.blending=e.blending,t.blendSrc=e.blendSrc,t.blendSrcAlpha=e.blendSrcAlpha,t.clipIntersection=e.clipIntersection,t.clippingPlanes=e.clippingPlanes,t.clipShadows=e.clipShadows,t.colorWrite=e.colorWrite,t.defines=e.defines,t.depthFunc=e.depthFunc,t.depthTest=e.depthTest,t.depthWrite=e.depthWrite,t.name=e.name,t.opacity=e.opacity,t.polygonOffset=e.polygonOffset,t.polygonOffsetFactor=e.polygonOffsetFactor,t.polygonOffsetUnits=e.polygonOffsetUnits,t.precision=e.precision,t.premultipliedAlpha=e.premultipliedAlpha,t.forceSinglePass=e.forceSinglePass,t.dithering=e.dithering,t.side=e.side,t.shadowSide=e.shadowSide,t.toneMapped=e.toneMapped,t.transparent=e.transparent,t.vertexColors=e.vertexColors,t.visible=e.visible,t.stencilWrite=e.stencilWrite,t.stencilFunc=e.stencilFunc,t.stencilRef=e.stencilRef,t.stencilWriteMask=e.stencilWriteMask,t.stencilFuncMask=e.stencilFuncMask,t.stencilFail=e.stencilFail,t.stencilZFail=e.stencilZFail,t.stencilZPass=e.stencilZPass,t.userData=e.userData,e instanceof o.MeshStandardMaterial&&(t.color=e.color,t.roughness=e.roughness,t.metalness=e.metalness,t.map=e.map,t.lightMap=e.lightMap,t.lightMapIntensity=e.lightMapIntensity,t.aoMap=e.aoMap,t.aoMapIntensity=e.aoMapIntensity,t.emissive=e.emissive,t.emissiveIntensity=e.emissiveIntensity,t.emissiveMap=e.emissiveMap,t.bumpMap=e.bumpMap,t.bumpScale=e.bumpScale,t.normalMap=e.normalMap,t.normalMapType=e.normalMapType,t.normalScale=e.normalScale,t.displacementMap=e.displacementMap,t.displacementScale=e.displacementScale,t.displacementBias=e.displacementBias,t.roughnessMap=e.roughnessMap,t.metalnessMap=e.metalnessMap,t.alphaMap=e.alphaMap,t.envMap=e.envMap,t.envMapIntensity=e.envMapIntensity,t.wireframe=e.wireframe,t.wireframeLinewidth=e.wireframeLinewidth,t.fog=e.fog,t.flatShading=e.flatShading),e instanceof o.MeshPhysicalMaterial&&(t.clearcoat=e.clearcoat,t.clearcoatMap=e.clearcoatMap,t.clearcoatRoughness=e.clearcoatRoughness,t.clearcoatRoughnessMap=e.clearcoatRoughnessMap,t.clearcoatNormalScale=e.clearcoatNormalScale,t.clearcoatNormalMap=e.clearcoatNormalMap,t.reflectivity=e.reflectivity,t.ior=e.ior,t.sheen=e.sheen,t.sheenColor=e.sheenColor,t.sheenColorMap=e.sheenColorMap,t.sheenRoughness=e.sheenRoughness,t.sheenRoughnessMap=e.sheenRoughnessMap,t.transmission=e.transmission,t.transmissionMap=e.transmissionMap,t.thickness=e.thickness,t.thicknessMap=e.thicknessMap,t.attenuationDistance=e.attenuationDistance,t.attenuationColor=e.attenuationColor,t.specularIntensity=e.specularIntensity,t.specularColor=e.specularColor,t.specularIntensityMap=e.specularIntensityMap,t.specularColorMap=e.specularColorMap,t.iridescenceMap=e.iridescenceMap,t.iridescenceIOR=e.iridescenceIOR,t.iridescence=e.iridescence,t.iridescenceThicknessRange=e.iridescenceThicknessRange,t.iridescenceThicknessMap=e.iridescenceThicknessMap,t.anisotropy=e.anisotropy,t.anisotropyRotation=e.anisotropyRotation,t.anisotropyMap=e.anisotropyMap),new F(t)}constructor(e){super({...e,premultipliedAlpha:!0,transparent:!1,uniforms:{animationProgress:new o.Uniform(0),animationDirection:new o.Uniform(1)},wireframe:!1,side:o.DoubleSide,vertexShader:"\n				#define STANDARD\n				varying vec3 vViewPosition;\n				#ifdef USE_TRANSMISSION\n					varying vec3 vWorldPosition;\n				#endif\n				#include <common>\n				#include <uv_pars_vertex>\n				#include <color_pars_vertex>\n				#include <normal_pars_vertex>\n\n				uniform float animationProgress;\n				uniform float animationDirection;\n\n				varying float vProgressOffset;\n\n				void main() {\n					// top to bottom fade in animation using position.y\n					const float minY = -1.0;\n					const float maxY =  1.0;\n					// y from 0 - 1\n					float normalizedY = clamp((position.y * animationDirection - minY) / (maxY - minY), 0., 1.);\n					// float normalizedY = clamp(length(position) / maxY, 0., 1.);\n					// normalizedY = pow(normalizedY, .1);\n\n					vProgressOffset = clamp(animationProgress * 2.0 - normalizedY, 0., 1.);\n\n					#include <uv_vertex>\n					#include <color_vertex>\n					#include <beginnormal_vertex>\n					// #include <defaultnormal_vertex> {\n					vec3 transformedNormal = objectNormal;\n					#ifdef USE_INSTANCING\n						// this is in lieu of a per-instance normal-matrix\n						// shear transforms in the instance matrix are not supported\n						mat3 m = mat3( instanceMatrix );\n						transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n						transformedNormal = m * transformedNormal;\n					#endif\n\n					transformedNormal = normalMatrix * transformedNormal;\n\n					#ifdef FLIP_SIDED\n						transformedNormal = - transformedNormal;\n					#endif\n\n					#ifdef USE_TANGENT\n						vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n						#ifdef FLIP_SIDED\n							transformedTangent = - transformedTangent;\n						#endif\n					#endif\n					// }\n					// #include <normal_vertex> {\n					#ifndef FLAT_SHADED // normal is computed with derivatives when FLAT_SHADED\n						vNormal = normalize( transformedNormal );\n						#ifdef USE_TANGENT\n							vTangent = normalize( transformedTangent );\n							vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n						#endif\n					#endif\n					//}\n					// #include <begin_vertex> {\n					float angle = smoothstep(0.4, 0.0, vProgressOffset) * 1.;\n					float cosAngle = cos(angle);\n					float sinAngle = sin(angle);\n\n					vec3 animatedPosition = vec3(\n						position.x * cosAngle - position.z * sinAngle,\n						position.y - smoothstep(0.2, 0.0, vProgressOffset) * 0.1 * animationDirection,\n						// position.y * smoothstep(0.0, 0.1, vProgressOffset)\n						position.x * sinAngle + position.z * cosAngle\n					);\n					vec3 transformed = vec3(\n						animatedPosition\n						+ objectNormal * (1. - smoothstep(0.0, 0.3, vProgressOffset)) * 0.2\n					);\n					#ifdef USE_ALPHAHASH\n						vPosition = vec3( position );\n					#endif\n					//}\n					#include <project_vertex>\n\n					vViewPosition = - mvPosition.xyz;\n					#include <worldpos_vertex>\n				}\n			",fragmentShader:"\n				#define STANDARD\n				#ifdef PHYSICAL\n					#define IOR\n					#define USE_SPECULAR\n				#endif\n				uniform vec3 diffuse;\n				uniform vec3 emissive;\n				uniform float roughness;\n				uniform float metalness;\n				uniform float opacity;\n				#ifdef IOR\n					uniform float ior;\n				#endif\n				#ifdef USE_SPECULAR\n					uniform float specularIntensity;\n					uniform vec3 specularColor;\n					#ifdef USE_SPECULAR_COLORMAP\n						uniform sampler2D specularColorMap;\n					#endif\n					#ifdef USE_SPECULAR_INTENSITYMAP\n						uniform sampler2D specularIntensityMap;\n					#endif\n				#endif\n				#ifdef USE_CLEARCOAT\n					uniform float clearcoat;\n					uniform float clearcoatRoughness;\n				#endif\n				#ifdef USE_IRIDESCENCE\n					uniform float iridescence;\n					uniform float iridescenceIOR;\n					uniform float iridescenceThicknessMinimum;\n					uniform float iridescenceThicknessMaximum;\n				#endif\n				#ifdef USE_SHEEN\n					uniform vec3 sheenColor;\n					uniform float sheenRoughness;\n					#ifdef USE_SHEEN_COLORMAP\n						uniform sampler2D sheenColorMap;\n					#endif\n					#ifdef USE_SHEEN_ROUGHNESSMAP\n						uniform sampler2D sheenRoughnessMap;\n					#endif\n				#endif\n				#ifdef USE_ANISOTROPY\n					uniform vec2 anisotropyVector;\n					#ifdef USE_ANISOTROPYMAP\n						uniform sampler2D anisotropyMap;\n					#endif\n				#endif\n				varying vec3 vViewPosition;\n				#include <common>\n				#include <packing>\n				#include <dithering_pars_fragment>\n				#include <color_pars_fragment>\n				#include <uv_pars_fragment>\n				#include <map_pars_fragment>\n				#include <alphamap_pars_fragment>\n				#include <alphatest_pars_fragment>\n				#include <alphahash_pars_fragment>\n				#include <aomap_pars_fragment>\n				#include <lightmap_pars_fragment>\n				#include <emissivemap_pars_fragment>\n				#include <iridescence_fragment>\n				#include <cube_uv_reflection_fragment>\n				#include <envmap_common_pars_fragment>\n				#include <envmap_physical_pars_fragment>\n				#include <fog_pars_fragment>\n				#include <lights_pars_begin>\n				#include <normal_pars_fragment>\n				#include <lights_physical_pars_fragment>\n				#include <transmission_pars_fragment>\n				#include <shadowmap_pars_fragment>\n				#include <bumpmap_pars_fragment>\n				#include <normalmap_pars_fragment>\n				#include <clearcoat_pars_fragment>\n				#include <iridescence_pars_fragment>\n				#include <roughnessmap_pars_fragment>\n				#include <metalnessmap_pars_fragment>\n				#include <logdepthbuf_pars_fragment>\n				#include <clipping_planes_pars_fragment>\n\n				// varying vec3 vAnimationData;\n				varying float vProgressOffset;\n\n				void main() {\n					#include <clipping_planes_fragment>\n					vec4 diffuseColor = vec4( diffuse, opacity );\n					ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n					vec3 totalEmissiveRadiance = emissive;\n					#include <logdepthbuf_fragment>\n					#include <map_fragment>\n					#include <color_fragment>\n					#include <alphamap_fragment>\n					#include <alphatest_fragment>\n					#include <alphahash_fragment>\n					// include <roughnessmap_fragment> {\n					float roughnessFactor = roughness;\n					#ifdef USE_ROUGHNESSMAP\n						vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n						// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n						roughnessFactor *= texelRoughness.g;\n					#endif\n					// }\n\n					// include <metalnessmap_fragment> {\n					float metalnessFactor = metalness;\n					#ifdef USE_METALNESSMAP\n						vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n						// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture\n						metalnessFactor *= texelMetalness.b;\n					#endif\n					// }\n\n					// animate metalness factor from 1.0 to initial //\n					metalnessFactor = mix(1.0, metalnessFactor, vProgressOffset);\n					roughnessFactor = mix(0.0, roughnessFactor, vProgressOffset);\n					// //\n\n					#include <normal_fragment_begin>\n					#include <normal_fragment_maps>\n					#include <clearcoat_normal_fragment_begin>\n					#include <clearcoat_normal_fragment_maps>\n					#include <emissivemap_fragment>\n					#include <lights_physical_fragment>\n					#include <lights_fragment_begin>\n					#include <lights_fragment_maps>\n					#include <lights_fragment_end>\n					#include <aomap_fragment>\n					vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n					vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n					#include <transmission_fragment>\n					vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n					#ifdef USE_SHEEN\n						float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n						outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n					#endif\n					#ifdef USE_CLEARCOAT\n						float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n						vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n						outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n					#endif\n\n					// include <opaque_fragment> {\n					#ifdef OPAQUE\n						diffuseColor.a = 1.0;\n					#endif\n					gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n					// }\n\n					// animation // \n					if (vProgressOffset < 1.0) {\n						vec3 flatShadedNormal = normalize( cross( dFdx( vViewPosition ), dFdy( vViewPosition ) ) );\n\n						float wipeAlpha = smoothstep(\n							0.25,\n							0.35,\n							vProgressOffset + flatShadedNormal.y  * 0.25\n						);\n\n						gl_FragColor.a *= wipeAlpha * wipeAlpha;\n						if (gl_FragColor.a < 0.01) discard;\n					}\n\n					#include <tonemapping_fragment>\n					#include <colorspace_fragment>\n					#include <fog_fragment>\n					#include <premultiplied_alpha_fragment>\n					#include <dithering_fragment>\n				}\n			"})}}},15199:function(e,t,n){"use strict";n.r(t);var r=n(5833),i=n(91863),a=n.n(i),o=n(53961);let{LumaFluid:s}=n(1801),l="https://cdn-luma.com/public/lumalabs.ai/images/luma-logo-interactive";t.default=()=>{let e=(0,o.useRef)(null);return(0,o.useEffect)(()=>{var t,n;try{let n=new s(l);return/Mobi|Android|iPhone/i.test(navigator.userAgent)||"ontouchstart"in window||navigator.maxTouchPoints>0?n.fluid.updateSettings(JSON.stringify({innerDarkening:.1,gradientBackground:1})):n.fluid.updateSettings(JSON.stringify({innerDarkening:.6,gradientBackground:.3})),null===(t=e.current)||void 0===t||t.appendChild(n.canvas),()=>{console.log("%cDisposing luma logo interactive","color: orange"),n.fluid.releaseGPUMemory(),n.canvas.remove(),n.dispose()}}catch(r){let t=document.createElement("img");return t.src="".concat(l,"/luma-fallback-wide.jpg"),null===(n=e.current)||void 0===n||n.appendChild(t),t.style.width="100%",t.style.height="100%",t.style.objectFit="contain",t.style.pointerEvents="none",()=>{t.remove()}}},[]),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a(),{style:{display:"none"},src:"".concat(l,"/luma-4096x1024-feather8px.png"),alt:"Luma AI Logo",width:4096,height:1024,priority:!0}),(0,r.jsx)(a(),{style:{display:"none"},src:"".concat(l,"/rainbow-texture.jpg"),alt:"Logo Colors",width:4096,height:1024,priority:!0}),(0,r.jsx)("div",{className:"absolute z-0 top-[36px] md:top-[0px] h-[40dvh] md:h-[62dvh] w-full",ref:e})]})}},46051:function(e,t,n){"use strict";n.r(t);var r=n(5833),i=n(79247),a=n(15835),o=n.n(a),s=n(53961),l=n(49327);let c=e=>{let{word:t,index:n}=e,i=(0,s.useRef)(null);return((0,s.useEffect)(()=>{if(i.current){let e=800+100*n;i.current.style.transition="opacity 800ms ease ".concat(e,"ms, filter 800ms ease ").concat(e,"ms"),i.current.style.opacity="1",i.current.style.filter="blur(0px)"}},[i]),"<br />"===t)?(0,r.jsx)("br",{},n):(0,r.jsx)("span",{ref:i,className:"inline text-white opacity-0 filter blur-[3px]",dangerouslySetInnerHTML:{__html:"".concat(t," ")}},n)};t.default=()=>{let[e,t]=(0,s.useState)(!1);return(0,s.useEffect)(()=>{setTimeout(()=>{t(!0)},2e3)},[]),(0,r.jsx)(r.Fragment,{children:(0,r.jsxs)("div",{className:"text-right md:text-left w-[424px] h-[116px] text-[22px] md:text-[32px] font-bold leading-normal md:leading-10",children:["Building multimodal AI to expand human imagination and capabilities".split(" ").map((e,t)=>(0,r.jsx)(c,{word:e,index:t},t)),e&&(0,r.jsx)(o(),{href:"/series-b",target:"_blank",rel:"noopener noreferrer",style:{cursor:"pointer",pointerEvents:"all"},children:(0,r.jsx)(l.Z,{className:"w-full flex items-end justify-end md:justify-start cursor-pointer",children:(0,r.jsxs)("p",{className:"font-normal mt-4 text-sm bg-[rgba(255,255,255,0.16)] w-fit py-1 px-4 rounded-3xl items-center justify-center flex",children:["Announcing Series B"," ",(0,r.jsx)(i.Z,{className:"inline ml-2",size:"16px"})]})})})]})})}},1801:function(e,t){!function(e,t){"use strict";function n(e,t){var n=Object.create(e);for(var r in t)n[r]=t[r];return t.toString!==Object.prototype.toString&&(n.toString=t.toString),n}var r=function(e,t){this.r=new RegExp(e,t.split("u").join(""))};r.__name__=!0,r.prototype={match:function(e){return this.r.global&&(this.r.lastIndex=0),this.r.m=this.r.exec(e),this.r.s=e,null!=this.r.m},matched:function(e){if(null!=this.r.m&&e>=0&&e<this.r.m.length)return this.r.m[e];throw Q.thrown("EReg::matched")},matchedRight:function(){if(null==this.r.m)throw Q.thrown("No string matched");var e=this.r.m.index+this.r.m[0].length;return D.substr(this.r.s,e,this.r.s.length-e)},matchedPos:function(){if(null==this.r.m)throw Q.thrown("No string matched");return{pos:this.r.m.index,len:this.r.m[0].length}},matchSub:function(e,t,n){var r;return null==n&&(n=-1),this.r.global?(this.r.lastIndex=t,this.r.m=this.r.exec(n<0?e:D.substr(e,0,t+n)),(r=null!=this.r.m)&&(this.r.s=e)):(r=this.match(n<0?D.substr(e,t,null):D.substr(e,t,n)))&&(this.r.s=e,this.r.m.index+=t),r},map:function(e,t){var n=0,r="";do{if(n>=e.length)break;if(!this.matchSub(e,n)){r+=j.string(D.substr(e,n,null));break}var i=this.matchedPos();r+=j.string(D.substr(e,n,i.pos-n))+j.string(t(this)),0==i.len?(r+=j.string(D.substr(e,i.pos,1)),n=i.pos+1):n=i.pos+i.len}while(this.r.global);return!this.r.global&&n>0&&n<e.length&&(r+=j.string(D.substr(e,n,null))),r},__class__:r};var i=function(){};i.__name__=!0,i.format=function(e,t){e+="<//>";var n=[],r=[],o=[];return{formatted:i.formatTagPattern.map(e,function(e){if(null!=e.matched(1))return e.matched(0);var s=null==e.matched(2),l=e.matched(3).split(",");if(s||1!=l.length){d=0;for(var c=0;c<l.length;){if(null==(h=a.fromString(l[c++])))return e.matched(0);if(s)n.push(h),r.push(d),++d;else if(-1!=(p=n.indexOf(h))){var u=r[p];n.splice(p-u,u+1),r.splice(p-u,u+1)}}}else if(""==l[0]){if(-1!=(p=n.indexOf(n[n.length-1]))){var d=r[p];n.splice(p-d,d+1),r.splice(p-d,d+1)}}else if("reset"==a.fromString(l[0]))n=[],r=[];else if(null!=(h=a.fromString(l[0]))&&-1!=(p=n.indexOf(h))){var d=r[p];n.splice(p-d,d+1),r.splice(p-d,d+1)}switch(t){case 1:for(var h,p,f=Array(n.length),g=(c=0,n.length);c<g;)f[p=c++]=i.getBrowserFormat(n[p]);for(c=[],g=0;g<f.length;){var m=f[g];++g,null!=m&&c.push(m)}return o.push(c.join(";")),"%c";case 2:return""}}),browserFormatArguments:o}},i.printFormatted=function(e,t){null==t&&(t=0),null==e&&(e="");var n=i.format(e,i.formatMode);if(1!=i.formatMode)i.print(n.formatted,t);else{var r=[n.formatted].concat(n.browserFormatArguments);switch(t){case 1:console.warn.apply(console,r);break;case 2:console.error.apply(console,r);break;case 0:case 3:console.log.apply(console,r)}}},i.print=function(e,t){if(null==t&&(t=0),null==e&&(e=""),null==i.printIntercept||i.printIntercept(e,t))switch(t){case 1:console.warn(e);break;case 2:console.error(e);break;case 0:case 3:console.log(e)}},i.getBrowserFormat=function(e){if("#"==e.charAt(0))return"color: "+e;if("bg#"==D.substr(e,0,3))return"background-color: "+D.substr(e,2,null);if("{"==e.charAt(0))return D.substr(e,1,e.length-2);switch(e){case"bg_black":return"background-color: black";case"bg_blue":return"background-color: blue";case"bg_cyan":return"background-color: cyan";case"bg_green":return"background-color: green";case"bg_light_black":return"background-color: gray";case"bg_light_blue":return"background-color: lightBlue";case"bg_light_cyan":return"background-color: lightCyan";case"bg_light_green":return"background-color: lightGreen";case"bg_light_magenta":return"background-color: lightPink";case"bg_light_red":return"background-color: salmon";case"bg_light_white":return"background-color: white";case"bg_light_yellow":return"background-color: lightYellow";case"bg_magenta":return"background-color: magenta";case"bg_red":return"background-color: red";case"bg_white":return"background-color: whiteSmoke";case"bg_yellow":return"background-color: gold";case"black":return"color: black";case"blink":return"text-decoration: blink";case"blue":return"color: blue";case"bold":return"font-weight: bold";case"cyan":return"color: cyan";case"dim":case"light_black":return"color: gray";case"green":return"color: green";case"hidden":return"visibility: hidden; color: white";case"invert":return"-webkit-filter: invert(100%); filter: invert(100%)";case"italic":return"font-style: italic";case"light_blue":return"color: lightBlue";case"light_cyan":return"color: lightCyan";case"light_green":return"color: lightGreen";case"light_magenta":return"color: lightPink";case"light_red":return"color: salmon";case"light_white":return"color: white";case"light_yellow":return"color: #ffed88";case"magenta":return"color: magenta";case"red":return"color: red";case"reset":default:return"";case"underline":return"text-decoration: underline";case"white":return"color: whiteSmoke";case"yellow":return"color: #f5ba00"}},i.determineConsoleFormatMode=function(){return 1};var a={fromString:function(e){if("#"==(e=e.toLowerCase()).charAt(0)||"bg#"==D.substr(e,0,3)){var t=e.indexOf("#"),n=D.substr(e,t+1,null);if(3==n.length){var i=n.split("");n=[i[0],i[0],i[1],i[1],i[2],i[2]].join("")}return new r("[^0-9a-f]","i").match(n)||n.length<6?"":e.substring(0,t)+"#"+n}switch(e){case"!":return"invert";case"/":return"reset";case"b":return"bold";case"bg_gray":return"bg_light_black";case"gray":return"light_black";case"i":return"italic";case"u":return"underline";default:return e}}},o=function(){};o.__name__=!0,o.__isInterface__=!0,o.prototype={__class__:o};var s=function(e,t,n,r){this.savedSettings=null,this.lumaLogoPromise=null,this.lumaLogoTexture=null,this.settings=new E,this.particleCount=65536,this.showDebugTextures=!1,this.postProcessingEnabled=!1,this.remapFluidColor=!0,this.renderParticlesEnabled=!1,this.pointerDataBuffer=new Float32Array(20),this.pointerPositionsBuffer=new Float32Array(40),this.activePointersLastFrame=new $,this.activePointers=new $,this.screenBuffer=null,this.screenTriangle=null,this.gl=e,this.drawingBufferWidth=t,this.drawingBufferHeight=n,this.assetRoot=r,this.imagePaths=[r+"/rainbow-texture.jpg"],e.getExtension("OES_standard_derivatives"),this.updateLumaLogo(),this.screenBuffer=e.getParameter(36006),null!=this.screenBuffer&&(a=i.logPrefix+"<b,yellow>Screenbuffer at initialization is"+i.argSeparator+j.string(this.screenBuffer),i.printFormatted(a+"\n",0));var a,o=null!=e.getExtension("WEBGL_debug_renderer_info")?{renderer:e.getParameter(37446),vendor:e.getParameter(37445)}:{renderer:e.getParameter(7937),vendor:e.getParameter(7936)};a=i.logPrefix+""+j.string("<b>"+j.string(o.vendor)+"</b> - <b>"+j.string(o.renderer)+"</b>"),i.printFormatted(a+"\n",0),y.get(e).printReport(),e.disable(2929),e.disable(2884),e.disable(3024),this.initializeGPUResources(),this.lastTime=D.now()/1e3};s.__name__=!0,s.__interfaces__=[o],s.prototype={initializeShaders:function(){this.screenTextureShader=new u(this.gl),this.renderParticlesShader=new h(this.gl),this.updateSurfaceShader=new g(this.gl);var e=this.updateSurfaceShader.userVelocityTexture,t=L.getNullTexture(this.gl).native;e.dirty=!0,e.data=t,(e=this.updateSurfaceShader.decayFactor).dirty=!0,e.data=this.settings.surfaceDecayFactor,(e=this.updateSurfaceShader.pointerPositions).dirty=!0,e.data=this.pointerPositionsBuffer,this.updateSurfaceShader.pointerPositions.alwaysDirty=!0,(e=this.updateSurfaceShader.pointerData).dirty=!0,e.data=this.pointerDataBuffer,this.updateSurfaceShader.pointerData.alwaysDirty=!0,(e=this.updateSurfaceShader.backgroundMultiplier).dirty=!0,e.data=this.settings.backgroundMultiplier,this.updateSurfaceShader.set_enableUserVelocity("false"),this.updateForceShader=new v(this.gl),e=this.updateForceShader.userVelocityTexture,t=L.getNullTexture(this.gl).native,e.dirty=!0,e.data=t,(e=this.updateForceShader.dragCoefficient).dirty=!0,e.data=this.settings.dragCoefficient,(e=this.updateForceShader.dragSpeed).dirty=!0,e.data=this.settings.dragSpeed,(e=this.updateForceShader.decayFactor).dirty=!0,e.data=this.settings.motionDecayFactor,(e=this.updateForceShader.pointerPositions).dirty=!0,e.data=this.pointerPositionsBuffer,this.updateForceShader.pointerPositions.alwaysDirty=!0,(e=this.updateForceShader.pointerData).dirty=!0,e.data=this.pointerDataBuffer,this.updateForceShader.pointerData.alwaysDirty=!0;var n=this.updateForceShader.gravity.data;n[0]=0,n[1]=0,this.updateForceShader.set_enableUserVelocity("false"),this.renderFluidShader=new _(this.gl),(e=this.renderFluidShader.invGamma).dirty=!0,e.data=1/this.settings.gamma,(e=this.renderFluidShader.chromaticAberration).dirty=!0,e.data=this.settings.chromaticAberration,(e=this.renderFluidShader.refraction).dirty=!0,e.data=this.settings.refraction,(e=this.renderFluidShader.innerDarkening).dirty=!0,e.data=this.settings.innerDarkening,(e=this.renderFluidShader.gradientBackground).dirty=!0,e.data=this.settings.gradientBackground},initializeGPUResources:function(){var e=this;this.initializeShaders(),this.screenTriangle=L.getScreenTriangle(this.gl),this.fluid=new x(this.gl,this.settings.fluidScale*this.drawingBufferWidth|0,this.settings.fluidScale*this.drawingBufferHeight|0,this.settings.simulationScale,this.settings.fluidPhysicsScale,this.settings.fluidIterations,this.settings.powerOf2Fluid,this.updateForceShader,this.updateSurfaceShader);var t=this.fluid,n=this.settings.periodicBoundary;t.periodicBoundary=n,t.setWrapMode(n?10497:33071),t.updateBaseUniforms(),this.fluid.solverIterations=0,(t=this.updateSurfaceShader.decayFactor).dirty=!0,t.data=1,(t=this.updateForceShader.decayFactor).dirty=!0,t.data=1,this.fluid.step(1),this.fluid.solverIterations=this.settings.fluidIterations,(t=this.updateSurfaceShader.decayFactor).dirty=!0,t.data=this.settings.surfaceDecayFactor,(t=this.updateForceShader.decayFactor).dirty=!0,t.data=this.settings.motionDecayFactor;var r=y.get(this.gl).getWritableFloatColorBufferParameters(6407,5131,9729);this.offscreenTarget=new eo(this.gl,this.fluid.width,this.fluid.height,new V(r.format,r.internalFormat,r.dataType,r.filtering,r.filtering,33071,33071)),this.settings.setChangeCallbacks({onChangeVersion:function(e,t){},onChangePaused:function(e,t){},onChangeTimestepMultiplier:function(e,t){},onChangeFluidPhysicsScale:function(t,n){var r=e.fluid;r.physicsScale=t,r.updateBaseUniforms()},onChangeSurfaceDecayFactor:function(t,n){var r=e.updateSurfaceShader.decayFactor;r.dirty=!0,r.data=t},onChangeMotionDecayFactor:function(t,n){var r=e.updateForceShader.decayFactor;r.dirty=!0,r.data=t},onChangeDragCoefficient:function(t,n){var r=e.updateForceShader.dragCoefficient;r.dirty=!0,r.data=t},onChangeDragSpeed:function(t,n){var r=e.updateForceShader.dragSpeed;r.dirty=!0,r.data=t},onChangePeriodicBoundary:function(t,n){var r=e.fluid;r.periodicBoundary=t,r.setWrapMode(t?10497:33071),r.updateBaseUniforms()},onChangeBackgroundMultiplier:function(t,n){var r=e.updateSurfaceShader.backgroundMultiplier;r.dirty=!0,r.data=t},onChangeFluidIterations:function(t,n){e.fluid.solverIterations=t},onChangeGamma:function(t,n){var r=e.renderFluidShader.invGamma;r.dirty=!0,r.data=1/t},onChangeRefraction:function(t,n){var r=e.renderFluidShader.refraction;r.dirty=!0,r.data=t},onChangeChromaticAberration:function(t,n){var r=e.renderFluidShader.chromaticAberration;r.dirty=!0,r.data=t},onChangeInnerDarkening:function(t,n){var r=e.renderFluidShader.innerDarkening;r.dirty=!0,r.data=t},onChangeBevelCurveRadius:function(t,n){e.updateLumaLogo()},onChangeGradientBackground:function(t,n){var r=e.renderFluidShader.gradientBackground;r.dirty=!0,r.data=t},onChangeFluidScale:function(t,n){e.resize(e.drawingBufferWidth,e.drawingBufferHeight)},onChangeSimulationScale:function(t,n){e.resize(e.drawingBufferWidth,e.drawingBufferHeight)},onChangePowerOf2Fluid:function(t,n){e.resize(e.drawingBufferWidth,e.drawingBufferHeight)}}),this.bloomFilter=new N(this.gl);var i=new Image;i.crossOrigin="anonymous";var a=this.imagePaths;i.src=a[0];var o=new V(6408,null,5121,9729,9729,10497,10497);i.onload=function(){var t=z.createTexture(e.gl,i.width,i.height,o,null,null,!1);e.gl.activeTexture(33984),e.gl.bindTexture(3553,t.native),e.gl.texSubImage2D(3553,0,0,0,o.format,o.dataType,i),e.gl.generateMipmap(3553),e.gl.bindTexture(3553,null),e.gl.deleteTexture(e.updateSurfaceShader.backgroundTexture.data);var n=e.updateSurfaceShader.backgroundTexture;return n.dirty=!0,n.data=t.native}},initializeParticles:function(){this.particles=new C(this.gl,this.particleCount);var e=this.fluid;this.particles.stepParticlesShader.flowScale.data[0]=1/(e.physicsScale*e.aspectRatio),this.particles.stepParticlesShader.flowScale.data[1]=1/this.fluid.physicsScale,(e=this.particles.stepParticlesShader.dragCoefficient).dirty=!0,e.data=1},resize:function(e,t){this.drawingBufferWidth=e,this.drawingBufferHeight=t;var n=this.settings.fluidScale*this.drawingBufferWidth|0,r=this.settings.fluidScale*this.drawingBufferHeight|0,i=this.fluid,a=this.settings.simulationScale,o=this.settings.powerOf2Fluid;null!=n&&(i.width=n),null!=r&&(i.height=r),null!=a&&(i.simulationScale=a),null!=o&&(i.powerOf2Surface=o),i.aspectRatio=i.width/i.height,i.updateTextureSizes(),i=this.offscreenTarget,e=this.fluid.width,t=this.fluid.height;var s=i.createEmptyTexture(e,t);if(i.gl.bindFramebuffer(36160,i.frameBufferObject),i.gl.framebufferTexture2D(36160,36064,3553,s.native,0),null!=i.texture){var l,c,u=L.getResampleShader(i.gl),d=u.texture;if(d.dirty=!0,d.data=i.texture.native,i.gl.bindFramebuffer(36160,i.frameBufferObject),i.gl.viewport(0,0,e,t),i.gl.bindBuffer(34962,L.getScreenTriangle(i.gl)),u._active){for(var h=0,p=u._uniforms;h<p.length;){var f=p[h];++h,(f.dirty||f.alwaysDirty)&&f.apply()}var g=0;for(h=0,p=u._attributes.length;h<p;)-1!=(c=(l=u._attributes[h++]).location)&&(u.gl.enableVertexAttribArray(c),u.gl.vertexAttribPointer(c,l.itemCount,l.type,!1,u._aStride,g)),g+=l.byteSize}else{for(u._ready||u.create(),u.gl.useProgram(u._prog),h=0,p=u._uniforms;h<p.length;)f=p[h],++h,(f.dirty||f.alwaysDirty)&&f.apply();for(g=0,h=0,p=u._attributes.length;h<p;)-1!=(c=(l=u._attributes[h++]).location)&&(u.gl.enableVertexAttribArray(c),u.gl.vertexAttribPointer(c,l.itemCount,l.type,!1,u._aStride,g)),g+=l.byteSize;u._active=!0}i.gl.drawArrays(4,0,3),u.deactivate(),i.gl.deleteTexture(i.texture.native)}else i.gl.bindFramebuffer(36160,i.frameBufferObject),i.gl.viewport(0,0,i.width,i.height),i.gl.clearColor(0,0,0,1),i.gl.clear(16384);i.width=e,i.height=t,i.texture=s,this.updateLumaLogo()},onFrame:function(e){if(!this.settings.paused){var t,n,r=Math.max(Math.min(e-this.lastTime,33.333333333333336)/1e3,.004166666666666667);this.lastTime=e;var i=L.getNullTexture(this.gl);(C=this.updateForceShader.userVelocityTexture).dirty=!0,C.data=i.native,(C=this.updateSurfaceShader.userVelocityTexture).dirty=!0,C.data=i.native,(C=this.updateForceShader.viewportAspectRatio).dirty=!0,C.data=this.drawingBufferWidth/this.drawingBufferHeight;var a=e/1e3;(C=this.updateSurfaceShader.time_s).dirty=!0,C.data=a,(C=this.updateForceShader.time_s).dirty=!0,C.data=a,(C=this.renderFluidShader.time_s).dirty=!0,C.data=a;for(var o=0,s=this.activePointers,c=s.keys();c.hasNext();){var u=c.next(),d=s.get(u);if(o>=10)break;var h=this.activePointersLastFrame.h[u];null==h&&(h=d);var p=4*o;this.pointerPositionsBuffer[p]=(d.x/this.drawingBufferWidth*2-1)*this.fluid.aspectRatio,this.pointerPositionsBuffer[p+1]=(this.drawingBufferHeight-d.y)/this.drawingBufferHeight*2-1,this.pointerPositionsBuffer[p+2]=(h.x/this.drawingBufferWidth*2-1)*this.fluid.aspectRatio,this.pointerPositionsBuffer[p+3]=(this.drawingBufferHeight-h.y)/this.drawingBufferHeight*2-1;var f=2*o;this.pointerDataBuffer[f]=d.radius/this.drawingBufferWidth*this.fluid.aspectRatio,this.pointerDataBuffer[f+1]=.5;var g=this.activePointersLastFrame.h[u];null!=g?(g.type=d.type,g.x=d.x,g.y=d.y,g.buttonState=d.buttonState,g.pressure=d.pressure,g.radius=d.radius,g.angle=d.angle,g.altitudeAngle=d.altitudeAngle,g.azimuthAngle=d.azimuthAngle):this.activePointersLastFrame.h[u]=new l(d.type,d.x,d.y,d.buttonState,d.pressure,d.radius,d.angle,d.altitudeAngle,d.azimuthAngle),++o}if((C=this.updateSurfaceShader.activePointerCount).dirty=!0,C.data=o,(C=this.updateForceShader.activePointerCount).dirty=!0,C.data=o,this.fluid.step(r*this.settings.timestepMultiplier),this.renderParticlesEnabled&&null==this.particles&&this.initializeParticles(),this.renderParticlesEnabled){(C=this.particles.stepParticlesShader.flowVelocityField).dirty=!0,C.data=this.fluid.velocityRenderTarget.readFromTexture.native,(m=(C=this.particles).stepParticlesShader.dt).dirty=!0,m.data=r*this.settings.timestepMultiplier,(m=C.stepParticlesShader.particleData).dirty=!0,m.data=C.particleData.readFromTexture.native;var m,v=C.stepParticlesShader,_=C.particleData;if(C.gl.viewport(0,0,_.width,_.height),C.gl.bindFramebuffer(36160,_.writeFrameBufferObject),C.gl.bindBuffer(34962,C.screenTriangle),v._active){for(var y=0,x=v._uniforms;y<x.length;){var b=x[y];++y,(b.dirty||b.alwaysDirty)&&b.apply()}var S=0;for(y=0,x=v._attributes.length;y<x;)-1!=(n=(t=v._attributes[y++]).location)&&(v.gl.enableVertexAttribArray(n),v.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,v._aStride,S)),S+=t.byteSize}else{for(v._ready||v.create(),v.gl.useProgram(v._prog),y=0,x=v._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=v._attributes.length;y<x;)-1!=(n=(t=v._attributes[y++]).location)&&(v.gl.enableVertexAttribArray(n),v.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,v._aStride,S)),S+=t.byteSize;v._active=!0}C.gl.drawArrays(4,0,3),v.deactivate(),_.tmpFBO=_.writeFrameBufferObject,_.writeFrameBufferObject=_.readFrameBufferObject,_.readFrameBufferObject=_.tmpFBO,_.tmpTex=_.writeToTexture,_.writeToTexture=_.readFromTexture,_.readFromTexture=_.tmpTex}var w=this.postProcessingEnabled?this.offscreenTarget:null;if(null==w?(this.gl.viewport(0,0,this.drawingBufferWidth,this.drawingBufferHeight),this.gl.bindFramebuffer(36160,this.screenBuffer)):(this.gl.viewport(0,0,w.width,w.height),this.gl.bindFramebuffer(36160,w.frameBufferObject)),this.gl.clearColor(0,0,0,1),this.gl.clear(16384),this.remapFluidColor){if(this.gl.bindBuffer(34962,this.screenTriangle),(C=this.renderFluidShader.texture).dirty=!0,C.data=this.fluid.surfaceRenderTarget.readFromTexture.native,(C=this.renderFluidShader.viewportAspectRatio).dirty=!0,C.data=this.drawingBufferWidth/this.drawingBufferHeight,(C=this.renderFluidShader)._active){for(y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize}else{for(C._ready||C.create(),C.gl.useProgram(C._prog),y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize;C._active=!0}this.gl.drawArrays(4,0,3),this.renderFluidShader.deactivate()}else{var P=this.fluid.surfaceRenderTarget.readFromTexture.native;if(this.gl.bindBuffer(34962,this.screenTriangle),(C=this.screenTextureShader.texture).dirty=!0,C.data=P,(C=this.screenTextureShader)._active){for(y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize}else{for(C._ready||C.create(),C.gl.useProgram(C._prog),y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize;C._active=!0}this.gl.drawArrays(4,0,3),this.screenTextureShader.deactivate()}if(this.postProcessingEnabled){var C=this.bloomFilter,F=this.offscreenTarget.texture,T=Math.floor(ei.log2(Math.max(F.width,F.height)/C.downsampleSize));null!=C.downsampleChain&&C.downsampleChain.count!=T&&(C.downsampleChain.releaseGPUMemory(),C.downsampleChain=null),null==C.downsampleChain&&T>0&&(Z.trace("creating downsample chain",{fileName:"src/filter/Bloom.hx",lineNumber:36,className:"filter.Bloom",methodName:"apply",customParams:[T]}),C.downsampleChain=new q(C.gl,T));var A=null!=C.downsampleChain?C.downsampleChain.apply(F):F,R=1<<T,D=C.blurKernelNormalized*F.width/R,B=C.blurKernelNormalized*F.height/R;null==C.blur||C.blur.kernelX==D&&C.blur.kernelY==B||(C.blur.releaseGPUMemory(),C.blur=null),null==C.blur&&(D>1||B>1)&&(C.blur=new H(C.gl,D,B));var M=null!=C.blur?C.blur.apply(A):A;if(this.gl.viewport(0,0,this.drawingBufferWidth,this.drawingBufferHeight),this.gl.bindFramebuffer(36160,this.screenBuffer),this.gl.clearColor(0,0,0,1),this.gl.clear(16384),P=M.native,this.gl.bindBuffer(34962,this.screenTriangle),(C=this.screenTextureShader.texture).dirty=!0,C.data=P,(C=this.screenTextureShader)._active){for(y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize}else{for(C._ready||C.create(),C.gl.useProgram(C._prog),y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize;C._active=!0}this.gl.drawArrays(4,0,3),this.screenTextureShader.deactivate()}if(this.renderParticlesEnabled){if(this.gl.enable(3042),this.gl.blendFunc(774,768),this.gl.blendEquation(32774),this.gl.bindBuffer(34962,this.particles.particleUVs),(C=this.renderParticlesShader.particleData).dirty=!0,C.data=this.particles.particleData.readFromTexture.native,(C=this.renderParticlesShader)._active){for(y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize}else{for(C._ready||C.create(),C.gl.useProgram(C._prog),y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize;C._active=!0}this.gl.drawArrays(0,0,this.particles.count),this.renderParticlesShader.deactivate(),this.gl.disable(3042)}if(this.showDebugTextures){if(null!=this.debugTextureBL){if(this.gl.viewport(0,0,.25*this.drawingBufferWidth|0,.25*this.drawingBufferHeight|0),this.gl.bindFramebuffer(36160,this.screenBuffer),P=this.debugTextureBL.native,this.gl.bindBuffer(34962,this.screenTriangle),(C=this.screenTextureShader.texture).dirty=!0,C.data=P,(C=this.screenTextureShader)._active){for(y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize}else{for(C._ready||C.create(),C.gl.useProgram(C._prog),y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize;C._active=!0}this.gl.drawArrays(4,0,3),this.screenTextureShader.deactivate()}if(null!=this.debugTextureBR){if(this.gl.viewport(this.drawingBufferWidth-.25*this.drawingBufferWidth|0,0,.25*this.drawingBufferWidth|0,.25*this.drawingBufferHeight|0),this.gl.bindFramebuffer(36160,this.screenBuffer),P=this.debugTextureBR.native,this.gl.bindBuffer(34962,this.screenTriangle),(C=this.screenTextureShader.texture).dirty=!0,C.data=P,(C=this.screenTextureShader)._active){for(y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize}else{for(C._ready||C.create(),C.gl.useProgram(C._prog),y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize;C._active=!0}this.gl.drawArrays(4,0,3),this.screenTextureShader.deactivate()}if(null!=this.debugTextureTL){if(this.gl.viewport(0,this.drawingBufferHeight-.25*this.drawingBufferHeight|0,.25*this.drawingBufferWidth|0,.25*this.drawingBufferHeight|0),this.gl.bindFramebuffer(36160,this.screenBuffer),P=this.debugTextureTL.native,this.gl.bindBuffer(34962,this.screenTriangle),(C=this.screenTextureShader.texture).dirty=!0,C.data=P,(C=this.screenTextureShader)._active){for(y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize}else{for(C._ready||C.create(),C.gl.useProgram(C._prog),y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize;C._active=!0}this.gl.drawArrays(4,0,3),this.screenTextureShader.deactivate()}if(null!=this.debugTextureTR){if(this.gl.viewport(this.drawingBufferWidth-.25*this.drawingBufferWidth|0,this.drawingBufferHeight-.25*this.drawingBufferHeight|0,.25*this.drawingBufferWidth|0,.25*this.drawingBufferHeight|0),this.gl.bindFramebuffer(36160,this.screenBuffer),P=this.debugTextureTR.native,this.gl.bindBuffer(34962,this.screenTriangle),(C=this.screenTextureShader.texture).dirty=!0,C.data=P,(C=this.screenTextureShader)._active){for(y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize}else{for(C._ready||C.create(),C.gl.useProgram(C._prog),y=0,x=C._uniforms;y<x.length;)b=x[y],++y,(b.dirty||b.alwaysDirty)&&b.apply();for(S=0,y=0,x=C._attributes.length;y<x;)-1!=(n=(t=C._attributes[y++]).location)&&(C.gl.enableVertexAttribArray(n),C.gl.vertexAttribPointer(n,t.itemCount,t.type,!1,C._aStride,S)),S+=t.byteSize;C._active=!0}this.gl.drawArrays(4,0,3),this.screenTextureShader.deactivate()}}}},reset:function(){var e=16384;if((t=(i=this.fluid).velocityRenderTarget).gl.bindFramebuffer(36160,t.readFrameBufferObject),t.gl.viewport(0,0,t.width,t.height),t.gl.clearColor(0,0,0,1),t.gl.clear(e),t.gl.bindFramebuffer(36160,t.writeFrameBufferObject),t.gl.viewport(0,0,t.width,t.height),t.gl.clearColor(0,0,0,1),t.gl.clear(e),e=16384,(t=i.pressureRenderTarget).gl.bindFramebuffer(36160,t.readFrameBufferObject),t.gl.viewport(0,0,t.width,t.height),t.gl.clearColor(0,0,0,1),t.gl.clear(e),t.gl.bindFramebuffer(36160,t.writeFrameBufferObject),t.gl.viewport(0,0,t.width,t.height),t.gl.clearColor(0,0,0,1),t.gl.clear(e),e=16384,(t=i.surfaceRenderTarget).gl.bindFramebuffer(36160,t.readFrameBufferObject),t.gl.viewport(0,0,t.width,t.height),t.gl.clearColor(0,0,0,1),t.gl.clear(e),t.gl.bindFramebuffer(36160,t.writeFrameBufferObject),t.gl.viewport(0,0,t.width,t.height),t.gl.clearColor(0,0,0,1),t.gl.clear(e),null!=this.particles){var t,n,r,i,a=(i=this.particles).inititalConditionsShader,o=i.particleData;if(i.gl.viewport(0,0,o.width,o.height),i.gl.bindFramebuffer(36160,o.writeFrameBufferObject),i.gl.bindBuffer(34962,i.screenTriangle),a._active){for(var s=0,l=a._uniforms;s<l.length;){var c=l[s];++s,(c.dirty||c.alwaysDirty)&&c.apply()}var u=0;for(s=0,l=a._attributes.length;s<l;)-1!=(r=(n=a._attributes[s++]).location)&&(a.gl.enableVertexAttribArray(r),a.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,a._aStride,u)),u+=n.byteSize}else{for(a._ready||a.create(),a.gl.useProgram(a._prog),s=0,l=a._uniforms;s<l.length;)c=l[s],++s,(c.dirty||c.alwaysDirty)&&c.apply();for(u=0,s=0,l=a._attributes.length;s<l;)-1!=(r=(n=a._attributes[s++]).location)&&(a.gl.enableVertexAttribArray(r),a.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,a._aStride,u)),u+=n.byteSize;a._active=!0}i.gl.drawArrays(4,0,3),a.deactivate(),o.tmpFBO=o.writeFrameBufferObject,o.writeFrameBufferObject=o.readFrameBufferObject,o.readFrameBufferObject=o.tmpFBO,o.tmpTex=o.writeToTexture,o.writeToTexture=o.readFromTexture,o.readFromTexture=o.tmpTex}},updateLumaLogo:function(){var e=this;null==this.lumaLogoPromise&&(this.lumaLogoPromise=new Promise(function(t,n){var r=new Image;r.crossOrigin="anonymous",r.src=e.assetRoot+"/luma-4096x1024-feather8px.png",r.onload=function(){var n=z.createTextureFromImage(e.gl,r,new V(6408,6408,5121,9728,9728,33071,33071),new I(1,!0),!0);t({img:r,texture:n})}}),this.lumaLogoPromise.then(function(t){e.lumaLogoTexture=t.texture;var n=e.renderFluidShader.lumaLogoTexture,r=e.lumaLogoTexture.native;return n.dirty=!0,n.data=r,n=e.updateForceShader.lumaLogoTexture,r=e.lumaLogoTexture.native,n.dirty=!0,n.data=r}))},updateSettings:function(e){try{var t=JSON.parse(e);this.settings.setFromDynamic(t)}catch(e){var n=Q.caught(e).unwrap(),r=i.errorPrefix+""+j.string("Failed to update settings: "+(null==n?"null":j.string(n)));null==r&&(r=""),i.printFormatted(r+"\n",2)}},getSettingsJson:function(e){null==e&&(e=!1);var t=this.settings;return JSON.stringify({version:t.version,paused:t.paused,fluidPhysicsScale:t.fluidPhysicsScale,timestepMultiplier:t.timestepMultiplier,surfaceDecayFactor:t.surfaceDecayFactor,motionDecayFactor:t.motionDecayFactor,dragCoefficient:t.dragCoefficient,dragSpeed:t.dragSpeed,periodicBoundary:t.periodicBoundary,backgroundMultiplier:t.backgroundMultiplier,refraction:t.refraction,chromaticAberration:t.chromaticAberration,innerDarkening:t.innerDarkening,bevelCurveRadius:t.bevelCurveRadius,gradientBackground:t.gradientBackground,gamma:t.gamma,fluidIterations:t.fluidIterations,fluidScale:t.fluidScale,simulationScale:t.simulationScale,powerOf2Fluid:t.powerOf2Fluid},null,e?"	":null)},saveSettings:function(){this.savedSettings=this.getSettingsJson()},restoreSettings:function(){null!=this.savedSettings&&(this.updateSettings(this.savedSettings),this.savedSettings=null)},onPointerDown:function(e,t,n,r,i,a,o,s,c,u,d){this.activePointers.h[e]=new l(t,n,r,i,o,s,c,u,d)},onPointerChange:function(e,t,n,r,i,a,o,s,l,c,u){var d=this.activePointers.h[e];null!=d&&(d.type=t,d.x=n,d.y=r,d.buttonState=i,d.pressure=o,d.radius=s,d.angle=l,d.altitudeAngle=c,d.azimuthAngle=u)},onPointerUp:function(e,t,n,r,i,a,o,s,l,c,u){this.activePointers.remove(e),this.activePointersLastFrame.remove(e)},onKeyUp:function(e){switch(e){case 76:var t,n,r=this.settings,a=this.settings.gamma-.1,o=r.gamma;r.gamma=a,null!=r.onChangeGamma&&o!=a&&(r.onChangeGamma(a,o),null!=r.onAnyFieldChange&&r.onAnyFieldChange("gamma",a,o)),n=i.logPrefix+""+j.string(""+j.string("<b>settings.gamma:</> <i,magenta>"+j.string(this.settings.gamma)+"</>")),i.printFormatted(n+"\n",0),t=!0;break;case 80:r=this.settings,a=this.settings.gamma+.1,o=r.gamma,r.gamma=a,null!=r.onChangeGamma&&o!=a&&(r.onChangeGamma(a,o),null!=r.onAnyFieldChange&&r.onAnyFieldChange("gamma",a,o)),n=i.logPrefix+""+j.string(""+j.string("<b>settings.gamma:</> <i,magenta>"+j.string(this.settings.gamma)+"</>")),i.printFormatted(n+"\n",0),t=!0;break;case 82:this.reset(),t=!0;break;case 86:this.showDebugTextures=!this.showDebugTextures,n=i.logPrefix+""+j.string(""+j.string("<b>showDebugTextures:</> <i,magenta>"+j.string(this.showDebugTextures)+"</>")),i.printFormatted(n+"\n",0),t=!0;break;default:t=!1}return t},setGravity:function(e,t){this.updateForceShader.gravity.data[0]=e,this.updateForceShader.gravity.data[1]=t,this.updateForceShader.gravity.dirty=!0},releaseGPUMemory:function(){if(null!=this.fluid&&this.fluid.releaseGPUMemory(),null!=this.particles&&this.particles.releaseGPUMemory(),null!=this.bloomFilter&&this.bloomFilter.releaseGPUMemory(),null!=this.screenTextureShader&&this.screenTextureShader.destroy(),null!=this.renderParticlesShader&&this.renderParticlesShader.destroy(),null!=this.updateSurfaceShader&&this.updateSurfaceShader.destroy(),null!=this.updateForceShader&&this.updateForceShader.destroy(),null!=this.renderFluidShader&&this.renderFluidShader.destroy(),null!=this.offscreenTarget){var e=this.offscreenTarget;e.gl.deleteFramebuffer(e.frameBufferObject),e.gl.deleteTexture(e.texture.native)}L.releaseGPUMemory(this.gl)},__class__:s};var l=function(e,t,n,r,i,a,o,s,l){this.type=e,this.x=t,this.y=n,this.buttonState=r,this.pressure=i,this.radius=a,this.angle=o,this.altitudeAngle=s,this.azimuthAngle=l};l.__name__=!0,l.prototype={__class__:l};var c=function(e){this._aStride=0,this._textures=[],this._attributes=[],this._uniforms=[],this.gl=e,this._name=(""+j.string(er.getClass(this))).split(".").pop(),this.initSources(),this.createProperties()};c.__name__=!0,c.prototype={initSources:function(){},createProperties:function(){},create:function(){this.compile(this._vertSource,this._fragSource),this._ready=!0},destroy:function(){this.gl.deleteShader(this._vert),this.gl.deleteShader(this._frag),this.gl.deleteProgram(this._prog),this._prog=null,this._vert=null,this._frag=null,this._ready=!1},compile:function(e,t){var n=this.gl.createShader(35633);if(this.gl.shaderSource(n,e),this.gl.compileShader(n),!this.gl.getShaderParameter(n,35713))throw Z.trace("Error compiling vertex shader: "+this.gl.getShaderInfoLog(n),{fileName:"lib/shaderblox/shaderblox/ShaderBase.hx",lineNumber:73,className:"shaderblox.ShaderBase",methodName:"compile"}),Z.trace("\n"+e,{fileName:"lib/shaderblox/shaderblox/ShaderBase.hx",lineNumber:74,className:"shaderblox.ShaderBase",methodName:"compile"}),Q.thrown("Error compiling vertex shader");var r=this.gl.createShader(35632);if(this.gl.shaderSource(r,t),this.gl.compileShader(r),!this.gl.getShaderParameter(r,35713)){Z.trace("Error compiling fragment shader: "+this.gl.getShaderInfoLog(r)+"\n",{fileName:"lib/shaderblox/shaderblox/ShaderBase.hx",lineNumber:83,className:"shaderblox.ShaderBase",methodName:"compile"});for(var i=t.split("\n"),a=0,o=0;o<i.length;)Z.trace(a+++" - "+i[o++],{fileName:"lib/shaderblox/shaderblox/ShaderBase.hx",lineNumber:87,className:"shaderblox.ShaderBase",methodName:"compile"});throw Q.thrown("Error compiling fragment shader")}var s=this.gl.createProgram();if(this.gl.attachShader(s,n),this.gl.attachShader(s,r),this.gl.linkProgram(s),!this.gl.getProgramParameter(s,35714))throw Q.thrown("Unable to initialize the shader program.\n"+this.gl.getProgramInfoLog(s));for(var l=this.gl.getProgramParameter(s,35718),c=Object.create(null);l-- >0;){var u=this.gl.getActiveUniform(s,l),d=this.gl.getUniformLocation(s,u.name);c[u.name]=d}for(var h=this.gl.getProgramParameter(s,35721),p=Object.create(null);h-- >0;){var f=this.gl.getActiveAttrib(s,h);d=this.gl.getAttribLocation(s,f.name),p[f.name]=d}this._vert=n,this._frag=r,this._prog=s;var g=[];this._numTextures=0,this._textures=[],o=0;for(var m=this._uniforms;o<m.length;){var v=m[o];++o,null==(d=c[v.name])&&(d=c[v.name+"[0]"]),v instanceof eS&&(v.samplerIndex=this._numTextures++,this._textures[v.samplerIndex]=v),null!=d?v.location=d:g.push(v)}for(;g.length>0;){var _=g.pop();D.remove(this._uniforms,_)}for(o=0,m=this._attributes;o<m.length;){var y=m[o];++o,d=p[y.name],y.location=null==d?-1:d}},deactivate:function(){this._active&&(this._active=!1,this.disableAttributes())},disableAttributes:function(){for(var e=0,t=this._attributes.length;e<t;){var n=this._attributes[e++].location;-1!=n&&this.gl.disableVertexAttribArray(n)}},toString:function(){return"[Shader("+this._name+", attributes:"+this._attributes.length+", uniforms:"+this._uniforms.length+")]"},__class__:c};var u=function(e){c.call(this,e)};u.__name__=!0,u.__super__=c,u.prototype=n(c.prototype,{createProperties:function(){c.prototype.createProperties.call(this);var e=new eS(this.gl,"texture",null,!1);this.texture=e,this._uniforms.push(e),e=new ec("vertexPosition",0,2),this.vertexPosition=e,this._attributes.push(e),this._aStride+=8},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nattribute vec2 vertexPosition;\nvarying vec2 texelCoord;\n\nvoid main() {\n	texelCoord = vertexPosition;\n	gl_Position = vec4(vertexPosition*2.0 - vec2(1.0, 1.0), 0.0, 1.0 );\n}\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform sampler2D texture;\nvarying vec2 texelCoord;\n\nvoid main(void){\n	gl_FragColor = abs(texture2D(texture, texelCoord));\n}\n"},__class__:u});var d=function(e){c.call(this,e)};d.__name__=!0,d.__super__=c,d.prototype=n(c.prototype,{createProperties:function(){c.prototype.createProperties.call(this);var e=new eS(this.gl,"particleData",null,!1);this.particleData=e,this._uniforms.push(e),e=new ec("particleUV",0,2),this.particleUV=e,this._attributes.push(e),this._aStride+=8},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform sampler2D particleData;\n	attribute vec2 particleUV;\n	varying vec4 color;\n	\n	void main() {\n		vec2 p = texture2D(particleData, particleUV).xy;\n		vec2 v = texture2D(particleData, particleUV).zw;\n		gl_PointSize = 1.0;\n		gl_Position = vec4(p, 0.0, 1.0);\n		color = vec4(1.0, 1.0, 1.0, 1.0);\n	}\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nvarying vec4 color;\n	void main() {\n		gl_FragColor = vec4(color);\n	}\n"},__class__:d});var h=function(e){d.call(this,e)};h.__name__=!0,h.__super__=d,h.prototype=n(d.prototype,{createProperties:function(){d.prototype.createProperties.call(this),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform sampler2D particleData;\n	attribute vec2 particleUV;\n	varying vec4 color;\n	\n\n\nvoid main(){\n		vec2 p = texture2D(particleData, particleUV).xy;\n		vec2 v = texture2D(particleData, particleUV).zw;\n		gl_PointSize = 3.0;\n		gl_Position = vec4(p, 0.0, 1.0);\n		float speed = length(v);\n		float x = clamp(speed * 4.0, 0., 1.);\n		color.rgb = (\n				mix(vec3(40.4, 0.0, 35.0) / 300.0, vec3(0.2, 47.8, 100) / 100.0, x)\n				+ (vec3(63.1, 92.5, 100) / 100.) * x*x*x * .1\n		) + vec3(0.5);\n		color.a = 1.0;\n	}\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nvarying vec4 color;\n	void main() {\n		gl_FragColor = vec4(color);\n	}\n\n\n"},__class__:h});var p=function(e){c.call(this,e)};p.__name__=!0,p.__super__=c,p.prototype=n(c.prototype,{createProperties:function(){c.prototype.createProperties.call(this);var e=new eP(this.gl,"invResolution",null);this.invResolution=e,this._uniforms.push(e),e=new e_(this.gl,"invAspectRatio",null),this.invAspectRatio=e,this._uniforms.push(e),e=new em(this.gl,"velocityBoundaryEnabled",null),this.velocityBoundaryEnabled=e,this._uniforms.push(e),e=new ec("vertexPosition",0,2),this.vertexPosition=e,this._attributes.push(e),this._aStride+=8},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\n \r\nattribute vec2 vertexPosition;\r\n\r\nuniform vec2 invResolution;\r\nuniform float invAspectRatio;\r\n\r\nvarying vec2 texelCoord;\r\n\r\n\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\n\r\nvarying vec2 p;\r\n\r\nvoid main() {\r\n	texelCoord = vertexPosition;\r\n	\r\n	vL = texelCoord - vec2(invResolution.x,0);\r\n	vR = texelCoord + vec2(invResolution.x,0);\r\n	vB = texelCoord - vec2(0,invResolution.y);\r\n	vT = texelCoord + vec2(0,invResolution.y);\r\n	\r\n	vec2 clipSpace = 2.0*texelCoord - 1.0;	\n	\r\n	p = vec2(clipSpace.x / invAspectRatio, clipSpace.y);\r\n\r\n	gl_Position = vec4(clipSpace, 0.0, 1.0 );	\r\n}\r\n\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform float invAspectRatio;\nuniform bool velocityBoundaryEnabled;\n\nvec2 clipToSimSpace(vec2 clipSpace){\n    return vec2(clipSpace.x / invAspectRatio, clipSpace.y);\n}\n\nvec2 simToTexelSpace(vec2 simSpace){\n    return vec2(simSpace.x * invAspectRatio + 1.0 , simSpace.y + 1.0)*.5;\n}\n\n\n\n\n\n\n\n\n\n\n\n#define samplePressure(texture, coord) ( texture2D(pressure, coord).x )\n#define outOfBoundsVelocityMultiplier(coord) (velocityBoundaryEnabled ? (step(vec2(0.), coord) * step(coord, vec2(1.)) * 2. - 1. ) : vec2(1.0))\n\n#define sampleVelocity(texture, coord) ( outOfBoundsVelocityMultiplier(coord) * texture2D(velocity, coord).xy )\n"},__class__:p});var f=function(e){p.call(this,e)};f.__name__=!0,f.__super__=p,f.prototype=n(p.prototype,{createProperties:function(){p.prototype.createProperties.call(this);var e=new eS(this.gl,"surface",null,!1);this.surface=e,this._uniforms.push(e),e=new e_(this.gl,"dt",null),this.dt=e,this._uniforms.push(e),e=new e_(this.gl,"dx",null),this.dx=e,this._uniforms.push(e),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\n \r\nattribute vec2 vertexPosition;\r\n\r\nuniform vec2 invResolution;\r\nuniform float invAspectRatio;\r\n\r\nvarying vec2 texelCoord;\r\n\r\n\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\n\r\nvarying vec2 p;\r\n\r\nvoid main() {\r\n	texelCoord = vertexPosition;\r\n	\r\n	vL = texelCoord - vec2(invResolution.x,0);\r\n	vR = texelCoord + vec2(invResolution.x,0);\r\n	vB = texelCoord - vec2(0,invResolution.y);\r\n	vT = texelCoord + vec2(0,invResolution.y);\r\n	\r\n	vec2 clipSpace = 2.0*texelCoord - 1.0;	\n	\r\n	p = vec2(clipSpace.x / invAspectRatio, clipSpace.y);\r\n\r\n	gl_Position = vec4(clipSpace, 0.0, 1.0 );	\r\n}\r\n\n\n\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform float invAspectRatio;\nuniform bool velocityBoundaryEnabled;\n\nvec2 clipToSimSpace(vec2 clipSpace){\n    return vec2(clipSpace.x / invAspectRatio, clipSpace.y);\n}\n\nvec2 simToTexelSpace(vec2 simSpace){\n    return vec2(simSpace.x * invAspectRatio + 1.0 , simSpace.y + 1.0)*.5;\n}\n\n\n\n\n\n\n\n\n\n\n\n#define samplePressure(texture, coord) ( texture2D(pressure, coord).x )\n#define outOfBoundsVelocityMultiplier(coord) (velocityBoundaryEnabled ? (step(vec2(0.), coord) * step(coord, vec2(1.)) * 2. - 1. ) : vec2(1.0))\n\n#define sampleVelocity(texture, coord) ( outOfBoundsVelocityMultiplier(coord) * texture2D(velocity, coord).xy )\n\nuniform sampler2D surface;\n	uniform float dt;\n	uniform float dx;\n	varying vec2 texelCoord;\n	varying vec2 p;\n"},__class__:f});var g=function(e){f.call(this,e)};g.__name__=!0,g.__super__=f,g.prototype=n(f.prototype,{set_enableUserVelocity:function(e){return this.enableUserVelocity=e,this._fragSource=eu.injectConstValue(this._fragSource,"enableUserVelocity",e),this._ready&&this.destroy(),e},createProperties:function(){f.prototype.createProperties.call(this);var e=new e_(this.gl,"decayFactor",null);this.decayFactor=e,this._uniforms.push(e),e=new e_(this.gl,"time_s",null),this.time_s=e,this._uniforms.push(e),e=new eS(this.gl,"userVelocityTexture",null,!1),this.userVelocityTexture=e,this._uniforms.push(e),e=new eS(this.gl,"backgroundTexture",null,!1),this.backgroundTexture=e,this._uniforms.push(e),e=new eT(this.gl,"pointerPositions",null,10),this.pointerPositions=e,this._uniforms.push(e),e=new eF(this.gl,"pointerData",null,10),this.pointerData=e,this._uniforms.push(e),e=new ex(this.gl,"activePointerCount",null),this.activePointerCount=e,this._uniforms.push(e),e=new e_(this.gl,"backgroundMultiplier",null),this.backgroundMultiplier=e,this._uniforms.push(e),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\n \r\nattribute vec2 vertexPosition;\r\n\r\nuniform vec2 invResolution;\r\nuniform float invAspectRatio;\r\n\r\nvarying vec2 texelCoord;\r\n\r\n\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\n\r\nvarying vec2 p;\r\n\r\nvoid main() {\r\n	texelCoord = vertexPosition;\r\n	\r\n	vL = texelCoord - vec2(invResolution.x,0);\r\n	vR = texelCoord + vec2(invResolution.x,0);\r\n	vB = texelCoord - vec2(0,invResolution.y);\r\n	vT = texelCoord + vec2(0,invResolution.y);\r\n	\r\n	vec2 clipSpace = 2.0*texelCoord - 1.0;	\n	\r\n	p = vec2(clipSpace.x / invAspectRatio, clipSpace.y);\r\n\r\n	gl_Position = vec4(clipSpace, 0.0, 1.0 );	\r\n}\r\n\n\n\n\n\n";var e=[];e.push("\n		if (activePointerCount > 0) {\n			vec2 pointer = pointerPositions[0].xy;\n			vec2 lastFramePointer = pointerPositions[0].zw;\n			float pressure = pointerData[0].y;\n			float radius = pointerData[0].x;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float R = radius + pressure * pressure * 0.1;\n\n			float x = clamp(1.0 - dist * dist / R, 0., 1.);\n\n			// @! single color samples\n			// vec4 backgroundSampleBrush = texture2D(\n			// 	backgroundTexture,\n			// 	pointer\n			// );\n\n			vec3 hsv = rgb2hsv(backgroundSample.rgb);\n\n			// curve up saturation\n			hsv.y = pow(hsv.y, 0.35);\n\n			vec3 rgb = hsv2rgb(hsv);\n\n			color.rgb += min(\n				brightnessContrast(\n					rgb,\n					0., // brightness\n					1.0 // contrast\n				)\n				* x * 8. * (speed * 1. + 2.) * dt,\n				// max\n				vec3(1.)\n			);\n\n			// x = smoothstep(0., 1.0, x);\n			// float normSpeed = pow(speed, 0.25) * 0.5;\n			// gl_FragColor = vec4(vec3(normSpeed), 1.);\n			// return;\n\n			// #if 1\n\n			// color.rgb += vec3(\n			// 	x,\n			// 	x * pressure,\n			// 	x * x * speed * speed * speed * 0.01\n			// ) * dt * 60.;\n\n			// #else\n\n			// color.a += x * pressure * dt * 15.;\n\n			// #endif\n		}"),e.push("\n		if (activePointerCount > 1) {\n			vec2 pointer = pointerPositions[1].xy;\n			vec2 lastFramePointer = pointerPositions[1].zw;\n			float pressure = pointerData[1].y;\n			float radius = pointerData[1].x;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float R = radius + pressure * pressure * 0.1;\n\n			float x = clamp(1.0 - dist * dist / R, 0., 1.);\n\n			// @! single color samples\n			// vec4 backgroundSampleBrush = texture2D(\n			// 	backgroundTexture,\n			// 	pointer\n			// );\n\n			vec3 hsv = rgb2hsv(backgroundSample.rgb);\n\n			// curve up saturation\n			hsv.y = pow(hsv.y, 0.35);\n\n			vec3 rgb = hsv2rgb(hsv);\n\n			color.rgb += min(\n				brightnessContrast(\n					rgb,\n					0., // brightness\n					1.0 // contrast\n				)\n				* x * 8. * (speed * 1. + 2.) * dt,\n				// max\n				vec3(1.)\n			);\n\n			// x = smoothstep(0., 1.0, x);\n			// float normSpeed = pow(speed, 0.25) * 0.5;\n			// gl_FragColor = vec4(vec3(normSpeed), 1.);\n			// return;\n\n			// #if 1\n\n			// color.rgb += vec3(\n			// 	x,\n			// 	x * pressure,\n			// 	x * x * speed * speed * speed * 0.01\n			// ) * dt * 60.;\n\n			// #else\n\n			// color.a += x * pressure * dt * 15.;\n\n			// #endif\n		}"),e.push("\n		if (activePointerCount > 2) {\n			vec2 pointer = pointerPositions[2].xy;\n			vec2 lastFramePointer = pointerPositions[2].zw;\n			float pressure = pointerData[2].y;\n			float radius = pointerData[2].x;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float R = radius + pressure * pressure * 0.1;\n\n			float x = clamp(1.0 - dist * dist / R, 0., 1.);\n\n			// @! single color samples\n			// vec4 backgroundSampleBrush = texture2D(\n			// 	backgroundTexture,\n			// 	pointer\n			// );\n\n			vec3 hsv = rgb2hsv(backgroundSample.rgb);\n\n			// curve up saturation\n			hsv.y = pow(hsv.y, 0.35);\n\n			vec3 rgb = hsv2rgb(hsv);\n\n			color.rgb += min(\n				brightnessContrast(\n					rgb,\n					0., // brightness\n					1.0 // contrast\n				)\n				* x * 8. * (speed * 1. + 2.) * dt,\n				// max\n				vec3(1.)\n			);\n\n			// x = smoothstep(0., 1.0, x);\n			// float normSpeed = pow(speed, 0.25) * 0.5;\n			// gl_FragColor = vec4(vec3(normSpeed), 1.);\n			// return;\n\n			// #if 1\n\n			// color.rgb += vec3(\n			// 	x,\n			// 	x * pressure,\n			// 	x * x * speed * speed * speed * 0.01\n			// ) * dt * 60.;\n\n			// #else\n\n			// color.a += x * pressure * dt * 15.;\n\n			// #endif\n		}"),e.push("\n		if (activePointerCount > 3) {\n			vec2 pointer = pointerPositions[3].xy;\n			vec2 lastFramePointer = pointerPositions[3].zw;\n			float pressure = pointerData[3].y;\n			float radius = pointerData[3].x;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float R = radius + pressure * pressure * 0.1;\n\n			float x = clamp(1.0 - dist * dist / R, 0., 1.);\n\n			// @! single color samples\n			// vec4 backgroundSampleBrush = texture2D(\n			// 	backgroundTexture,\n			// 	pointer\n			// );\n\n			vec3 hsv = rgb2hsv(backgroundSample.rgb);\n\n			// curve up saturation\n			hsv.y = pow(hsv.y, 0.35);\n\n			vec3 rgb = hsv2rgb(hsv);\n\n			color.rgb += min(\n				brightnessContrast(\n					rgb,\n					0., // brightness\n					1.0 // contrast\n				)\n				* x * 8. * (speed * 1. + 2.) * dt,\n				// max\n				vec3(1.)\n			);\n\n			// x = smoothstep(0., 1.0, x);\n			// float normSpeed = pow(speed, 0.25) * 0.5;\n			// gl_FragColor = vec4(vec3(normSpeed), 1.);\n			// return;\n\n			// #if 1\n\n			// color.rgb += vec3(\n			// 	x,\n			// 	x * pressure,\n			// 	x * x * speed * speed * speed * 0.01\n			// ) * dt * 60.;\n\n			// #else\n\n			// color.a += x * pressure * dt * 15.;\n\n			// #endif\n		}"),e.push("\n		if (activePointerCount > 4) {\n			vec2 pointer = pointerPositions[4].xy;\n			vec2 lastFramePointer = pointerPositions[4].zw;\n			float pressure = pointerData[4].y;\n			float radius = pointerData[4].x;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float R = radius + pressure * pressure * 0.1;\n\n			float x = clamp(1.0 - dist * dist / R, 0., 1.);\n\n			// @! single color samples\n			// vec4 backgroundSampleBrush = texture2D(\n			// 	backgroundTexture,\n			// 	pointer\n			// );\n\n			vec3 hsv = rgb2hsv(backgroundSample.rgb);\n\n			// curve up saturation\n			hsv.y = pow(hsv.y, 0.35);\n\n			vec3 rgb = hsv2rgb(hsv);\n\n			color.rgb += min(\n				brightnessContrast(\n					rgb,\n					0., // brightness\n					1.0 // contrast\n				)\n				* x * 8. * (speed * 1. + 2.) * dt,\n				// max\n				vec3(1.)\n			);\n\n			// x = smoothstep(0., 1.0, x);\n			// float normSpeed = pow(speed, 0.25) * 0.5;\n			// gl_FragColor = vec4(vec3(normSpeed), 1.);\n			// return;\n\n			// #if 1\n\n			// color.rgb += vec3(\n			// 	x,\n			// 	x * pressure,\n			// 	x * x * speed * speed * speed * 0.01\n			// ) * dt * 60.;\n\n			// #else\n\n			// color.a += x * pressure * dt * 15.;\n\n			// #endif\n		}"),e.push("\n		if (activePointerCount > 5) {\n			vec2 pointer = pointerPositions[5].xy;\n			vec2 lastFramePointer = pointerPositions[5].zw;\n			float pressure = pointerData[5].y;\n			float radius = pointerData[5].x;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float R = radius + pressure * pressure * 0.1;\n\n			float x = clamp(1.0 - dist * dist / R, 0., 1.);\n\n			// @! single color samples\n			// vec4 backgroundSampleBrush = texture2D(\n			// 	backgroundTexture,\n			// 	pointer\n			// );\n\n			vec3 hsv = rgb2hsv(backgroundSample.rgb);\n\n			// curve up saturation\n			hsv.y = pow(hsv.y, 0.35);\n\n			vec3 rgb = hsv2rgb(hsv);\n\n			color.rgb += min(\n				brightnessContrast(\n					rgb,\n					0., // brightness\n					1.0 // contrast\n				)\n				* x * 8. * (speed * 1. + 2.) * dt,\n				// max\n				vec3(1.)\n			);\n\n			// x = smoothstep(0., 1.0, x);\n			// float normSpeed = pow(speed, 0.25) * 0.5;\n			// gl_FragColor = vec4(vec3(normSpeed), 1.);\n			// return;\n\n			// #if 1\n\n			// color.rgb += vec3(\n			// 	x,\n			// 	x * pressure,\n			// 	x * x * speed * speed * speed * 0.01\n			// ) * dt * 60.;\n\n			// #else\n\n			// color.a += x * pressure * dt * 15.;\n\n			// #endif\n		}"),e.push("\n		if (activePointerCount > 6) {\n			vec2 pointer = pointerPositions[6].xy;\n			vec2 lastFramePointer = pointerPositions[6].zw;\n			float pressure = pointerData[6].y;\n			float radius = pointerData[6].x;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float R = radius + pressure * pressure * 0.1;\n\n			float x = clamp(1.0 - dist * dist / R, 0., 1.);\n\n			// @! single color samples\n			// vec4 backgroundSampleBrush = texture2D(\n			// 	backgroundTexture,\n			// 	pointer\n			// );\n\n			vec3 hsv = rgb2hsv(backgroundSample.rgb);\n\n			// curve up saturation\n			hsv.y = pow(hsv.y, 0.35);\n\n			vec3 rgb = hsv2rgb(hsv);\n\n			color.rgb += min(\n				brightnessContrast(\n					rgb,\n					0., // brightness\n					1.0 // contrast\n				)\n				* x * 8. * (speed * 1. + 2.) * dt,\n				// max\n				vec3(1.)\n			);\n\n			// x = smoothstep(0., 1.0, x);\n			// float normSpeed = pow(speed, 0.25) * 0.5;\n			// gl_FragColor = vec4(vec3(normSpeed), 1.);\n			// return;\n\n			// #if 1\n\n			// color.rgb += vec3(\n			// 	x,\n			// 	x * pressure,\n			// 	x * x * speed * speed * speed * 0.01\n			// ) * dt * 60.;\n\n			// #else\n\n			// color.a += x * pressure * dt * 15.;\n\n			// #endif\n		}"),e.push("\n		if (activePointerCount > 7) {\n			vec2 pointer = pointerPositions[7].xy;\n			vec2 lastFramePointer = pointerPositions[7].zw;\n			float pressure = pointerData[7].y;\n			float radius = pointerData[7].x;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float R = radius + pressure * pressure * 0.1;\n\n			float x = clamp(1.0 - dist * dist / R, 0., 1.);\n\n			// @! single color samples\n			// vec4 backgroundSampleBrush = texture2D(\n			// 	backgroundTexture,\n			// 	pointer\n			// );\n\n			vec3 hsv = rgb2hsv(backgroundSample.rgb);\n\n			// curve up saturation\n			hsv.y = pow(hsv.y, 0.35);\n\n			vec3 rgb = hsv2rgb(hsv);\n\n			color.rgb += min(\n				brightnessContrast(\n					rgb,\n					0., // brightness\n					1.0 // contrast\n				)\n				* x * 8. * (speed * 1. + 2.) * dt,\n				// max\n				vec3(1.)\n			);\n\n			// x = smoothstep(0., 1.0, x);\n			// float normSpeed = pow(speed, 0.25) * 0.5;\n			// gl_FragColor = vec4(vec3(normSpeed), 1.);\n			// return;\n\n			// #if 1\n\n			// color.rgb += vec3(\n			// 	x,\n			// 	x * pressure,\n			// 	x * x * speed * speed * speed * 0.01\n			// ) * dt * 60.;\n\n			// #else\n\n			// color.a += x * pressure * dt * 15.;\n\n			// #endif\n		}"),e.push("\n		if (activePointerCount > 8) {\n			vec2 pointer = pointerPositions[8].xy;\n			vec2 lastFramePointer = pointerPositions[8].zw;\n			float pressure = pointerData[8].y;\n			float radius = pointerData[8].x;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float R = radius + pressure * pressure * 0.1;\n\n			float x = clamp(1.0 - dist * dist / R, 0., 1.);\n\n			// @! single color samples\n			// vec4 backgroundSampleBrush = texture2D(\n			// 	backgroundTexture,\n			// 	pointer\n			// );\n\n			vec3 hsv = rgb2hsv(backgroundSample.rgb);\n\n			// curve up saturation\n			hsv.y = pow(hsv.y, 0.35);\n\n			vec3 rgb = hsv2rgb(hsv);\n\n			color.rgb += min(\n				brightnessContrast(\n					rgb,\n					0., // brightness\n					1.0 // contrast\n				)\n				* x * 8. * (speed * 1. + 2.) * dt,\n				// max\n				vec3(1.)\n			);\n\n			// x = smoothstep(0., 1.0, x);\n			// float normSpeed = pow(speed, 0.25) * 0.5;\n			// gl_FragColor = vec4(vec3(normSpeed), 1.);\n			// return;\n\n			// #if 1\n\n			// color.rgb += vec3(\n			// 	x,\n			// 	x * pressure,\n			// 	x * x * speed * speed * speed * 0.01\n			// ) * dt * 60.;\n\n			// #else\n\n			// color.a += x * pressure * dt * 15.;\n\n			// #endif\n		}"),e.push("\n		if (activePointerCount > 9) {\n			vec2 pointer = pointerPositions[9].xy;\n			vec2 lastFramePointer = pointerPositions[9].zw;\n			float pressure = pointerData[9].y;\n			float radius = pointerData[9].x;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float R = radius + pressure * pressure * 0.1;\n\n			float x = clamp(1.0 - dist * dist / R, 0., 1.);\n\n			// @! single color samples\n			// vec4 backgroundSampleBrush = texture2D(\n			// 	backgroundTexture,\n			// 	pointer\n			// );\n\n			vec3 hsv = rgb2hsv(backgroundSample.rgb);\n\n			// curve up saturation\n			hsv.y = pow(hsv.y, 0.35);\n\n			vec3 rgb = hsv2rgb(hsv);\n\n			color.rgb += min(\n				brightnessContrast(\n					rgb,\n					0., // brightness\n					1.0 // contrast\n				)\n				* x * 8. * (speed * 1. + 2.) * dt,\n				// max\n				vec3(1.)\n			);\n\n			// x = smoothstep(0., 1.0, x);\n			// float normSpeed = pow(speed, 0.25) * 0.5;\n			// gl_FragColor = vec4(vec3(normSpeed), 1.);\n			// return;\n\n			// #if 1\n\n			// color.rgb += vec3(\n			// 	x,\n			// 	x * pressure,\n			// 	x * x * speed * speed * speed * 0.01\n			// ) * dt * 60.;\n\n			// #else\n\n			// color.a += x * pressure * dt * 15.;\n\n			// #endif\n		}"),this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform float invAspectRatio;\nuniform bool velocityBoundaryEnabled;\n\nvec2 clipToSimSpace(vec2 clipSpace){\n    return vec2(clipSpace.x / invAspectRatio, clipSpace.y);\n}\n\nvec2 simToTexelSpace(vec2 simSpace){\n    return vec2(simSpace.x * invAspectRatio + 1.0 , simSpace.y + 1.0)*.5;\n}\n\n\n\n\n\n\n\n\n\n\n\n#define samplePressure(texture, coord) ( texture2D(pressure, coord).x )\n#define outOfBoundsVelocityMultiplier(coord) (velocityBoundaryEnabled ? (step(vec2(0.), coord) * step(coord, vec2(1.)) * 2. - 1. ) : vec2(1.0))\n\n#define sampleVelocity(texture, coord) ( outOfBoundsVelocityMultiplier(coord) * texture2D(velocity, coord).xy )\n\nuniform sampler2D surface;\n	uniform float dt;\n	uniform float dx;\n	varying vec2 texelCoord;\n	varying vec2 p;\n\n\nfloat distanceToSegment(vec2 a, vec2 b, vec2 p, out float fp){\n	vec2 d = p - a;\n	vec2 x = b - a;\n\n	fp = 0.0; \n	float lx = length(x);\n	\n	if(lx <= 0.0001) return length(d);\n\n	float projection = dot(d, x / lx); \n\n	fp = projection / lx;\n\n	if(projection < 0.0)            return length(d);\n	else if(projection > length(x)) return length(p - b);\n	return sqrt(abs(dot(d,d) - projection*projection));\n}\n\nfloat distanceToSegment(vec2 a, vec2 b, vec2 p){\n	float fp;\n	return distanceToSegment(a, b, p, fp);\n}\nvec3 brightnessContrast(vec3 value, float brightness, float contrast) {\n    return (value - 0.5) * contrast + 0.5 + brightness;\n}\n	uniform float decayFactor;\n	uniform float time_s;\n	uniform sampler2D userVelocityTexture;\n	uniform sampler2D backgroundTexture;\n	\n	uniform vec4 pointerPositions[10];\n	\n	uniform vec2 pointerData[10];\n	uniform int activePointerCount;\n	uniform float backgroundMultiplier;\n	\n	const bool enableUserVelocity = false;\n	\n	vec3 rgb2hsv(vec3 c) {\n		vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n		vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n		vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n		float d = q.x - min(q.w, q.y);\n		float e = 1.0e-10;\n		return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n	}\n	\n	vec3 hsv2rgb(vec3 c) {\n		vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n		vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n		return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n	}\n	void main(){\n		\n		vec4 color = texture2D(surface, texelCoord);\n		vec4 backgroundSample = texture2D(\n			backgroundTexture,\n			texelCoord + vec2(\n				0.5 * sin(time_s * 0.1),\n				0.5 * cos(time_s * 0.1)\n			)\n		);\n		\n		vec4 dColor = backgroundSample * backgroundMultiplier - color;\n		color += dColor * clamp(decayFactor * dt, 0., 1.0);\n		if (enableUserVelocity) {\n			vec2 userVelocity = texture2D(userVelocityTexture, texelCoord).xy;\n			float v = length(userVelocity);\n			float vdt = v * dt;\n			\n			color.rgb +=\n				vec3(vdt) * 0.1\n				\n			;\n		}\n		\n		"+e.join("\n")+"\n		gl_FragColor = color;\n	}\n"},__class__:g});var m=function(e){p.call(this,e)};m.__name__=!0,m.__super__=p,m.prototype=n(p.prototype,{createProperties:function(){p.prototype.createProperties.call(this);var e=new eS(this.gl,"velocity",null,!1);this.velocity=e,this._uniforms.push(e),e=new e_(this.gl,"dt",null),this.dt=e,this._uniforms.push(e),e=new e_(this.gl,"dx",null),this.dx=e,this._uniforms.push(e),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\n \r\nattribute vec2 vertexPosition;\r\n\r\nuniform vec2 invResolution;\r\nuniform float invAspectRatio;\r\n\r\nvarying vec2 texelCoord;\r\n\r\n\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\n\r\nvarying vec2 p;\r\n\r\nvoid main() {\r\n	texelCoord = vertexPosition;\r\n	\r\n	vL = texelCoord - vec2(invResolution.x,0);\r\n	vR = texelCoord + vec2(invResolution.x,0);\r\n	vB = texelCoord - vec2(0,invResolution.y);\r\n	vT = texelCoord + vec2(0,invResolution.y);\r\n	\r\n	vec2 clipSpace = 2.0*texelCoord - 1.0;	\n	\r\n	p = vec2(clipSpace.x / invAspectRatio, clipSpace.y);\r\n\r\n	gl_Position = vec4(clipSpace, 0.0, 1.0 );	\r\n}\r\n\n\n\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform float invAspectRatio;\nuniform bool velocityBoundaryEnabled;\n\nvec2 clipToSimSpace(vec2 clipSpace){\n    return vec2(clipSpace.x / invAspectRatio, clipSpace.y);\n}\n\nvec2 simToTexelSpace(vec2 simSpace){\n    return vec2(simSpace.x * invAspectRatio + 1.0 , simSpace.y + 1.0)*.5;\n}\n\n\n\n\n\n\n\n\n\n\n\n#define samplePressure(texture, coord) ( texture2D(pressure, coord).x )\n#define outOfBoundsVelocityMultiplier(coord) (velocityBoundaryEnabled ? (step(vec2(0.), coord) * step(coord, vec2(1.)) * 2. - 1. ) : vec2(1.0))\n\n#define sampleVelocity(texture, coord) ( outOfBoundsVelocityMultiplier(coord) * texture2D(velocity, coord).xy )\n\nuniform sampler2D velocity;\n	uniform float dt;\n	uniform float dx;\n	varying vec2 texelCoord;\n	varying vec2 p;\n"},__class__:m});var v=function(e){m.call(this,e)};v.__name__=!0,v.__super__=m,v.prototype=n(m.prototype,{set_enableUserVelocity:function(e){return this.enableUserVelocity=e,this._fragSource=eu.injectConstValue(this._fragSource,"enableUserVelocity",e),this._ready&&this.destroy(),e},createProperties:function(){m.prototype.createProperties.call(this);var e=new e_(this.gl,"time_s",null);this.time_s=e,this._uniforms.push(e),e=new eS(this.gl,"userVelocityTexture",null,!1),this.userVelocityTexture=e,this._uniforms.push(e),e=new eS(this.gl,"lumaLogoTexture",null,!1),this.lumaLogoTexture=e,this._uniforms.push(e),e=new e_(this.gl,"decayFactor",null),this.decayFactor=e,this._uniforms.push(e),e=new e_(this.gl,"dragCoefficient",null),this.dragCoefficient=e,this._uniforms.push(e),e=new e_(this.gl,"dragSpeed",null),this.dragSpeed=e,this._uniforms.push(e),e=new eT(this.gl,"pointerPositions",null,10),this.pointerPositions=e,this._uniforms.push(e),e=new eF(this.gl,"pointerData",null,10),this.pointerData=e,this._uniforms.push(e),e=new ex(this.gl,"activePointerCount",null),this.activePointerCount=e,this._uniforms.push(e),e=new e_(this.gl,"opticalFlowExponent",null),this.opticalFlowExponent=e,this._uniforms.push(e),e=new eP(this.gl,"gravity",null),this.gravity=e,this._uniforms.push(e),e=new e_(this.gl,"viewportAspectRatio",null),this.viewportAspectRatio=e,this._uniforms.push(e),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\n \r\nattribute vec2 vertexPosition;\r\n\r\nuniform vec2 invResolution;\r\nuniform float invAspectRatio;\r\n\r\nvarying vec2 texelCoord;\r\n\r\n\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\n\r\nvarying vec2 p;\r\n\r\nvoid main() {\r\n	texelCoord = vertexPosition;\r\n	\r\n	vL = texelCoord - vec2(invResolution.x,0);\r\n	vR = texelCoord + vec2(invResolution.x,0);\r\n	vB = texelCoord - vec2(0,invResolution.y);\r\n	vT = texelCoord + vec2(0,invResolution.y);\r\n	\r\n	vec2 clipSpace = 2.0*texelCoord - 1.0;	\n	\r\n	p = vec2(clipSpace.x / invAspectRatio, clipSpace.y);\r\n\r\n	gl_Position = vec4(clipSpace, 0.0, 1.0 );	\r\n}\r\n\n\n\n\n\n";var e=[];e.push("\n		if (activePointerCount > 0) {\n			vec2 pointer = pointerPositions[0].xy;\n			vec2 lastFramePointer = pointerPositions[0].zw;\n			float radius = pointerData[0].x;\n			float pressure = pointerData[0].y;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float taperFactor = 0.6;// 1 => 0 at lastMouse, 0 => no tapering\n			float projectedFraction = 1.0 - clamp(fp, 0.0, 1.0)*taperFactor;\n\n			float R = radius * 0.5 + pressure * pressure * pressure * 0.1;\n\n			float m = exp(-dist/R) * dragCoefficient; // drag coefficient\n			m *= projectedFraction * projectedFraction;\n\n			vec2 targetVelocity = velocity * dx * dragSpeed * dt * 60.;\n			v += (targetVelocity - v) * m;\n		}"),e.push("\n		if (activePointerCount > 1) {\n			vec2 pointer = pointerPositions[1].xy;\n			vec2 lastFramePointer = pointerPositions[1].zw;\n			float radius = pointerData[1].x;\n			float pressure = pointerData[1].y;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float taperFactor = 0.6;// 1 => 0 at lastMouse, 0 => no tapering\n			float projectedFraction = 1.0 - clamp(fp, 0.0, 1.0)*taperFactor;\n\n			float R = radius * 0.5 + pressure * pressure * pressure * 0.1;\n\n			float m = exp(-dist/R) * dragCoefficient; // drag coefficient\n			m *= projectedFraction * projectedFraction;\n\n			vec2 targetVelocity = velocity * dx * dragSpeed * dt * 60.;\n			v += (targetVelocity - v) * m;\n		}"),e.push("\n		if (activePointerCount > 2) {\n			vec2 pointer = pointerPositions[2].xy;\n			vec2 lastFramePointer = pointerPositions[2].zw;\n			float radius = pointerData[2].x;\n			float pressure = pointerData[2].y;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float taperFactor = 0.6;// 1 => 0 at lastMouse, 0 => no tapering\n			float projectedFraction = 1.0 - clamp(fp, 0.0, 1.0)*taperFactor;\n\n			float R = radius * 0.5 + pressure * pressure * pressure * 0.1;\n\n			float m = exp(-dist/R) * dragCoefficient; // drag coefficient\n			m *= projectedFraction * projectedFraction;\n\n			vec2 targetVelocity = velocity * dx * dragSpeed * dt * 60.;\n			v += (targetVelocity - v) * m;\n		}"),e.push("\n		if (activePointerCount > 3) {\n			vec2 pointer = pointerPositions[3].xy;\n			vec2 lastFramePointer = pointerPositions[3].zw;\n			float radius = pointerData[3].x;\n			float pressure = pointerData[3].y;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float taperFactor = 0.6;// 1 => 0 at lastMouse, 0 => no tapering\n			float projectedFraction = 1.0 - clamp(fp, 0.0, 1.0)*taperFactor;\n\n			float R = radius * 0.5 + pressure * pressure * pressure * 0.1;\n\n			float m = exp(-dist/R) * dragCoefficient; // drag coefficient\n			m *= projectedFraction * projectedFraction;\n\n			vec2 targetVelocity = velocity * dx * dragSpeed * dt * 60.;\n			v += (targetVelocity - v) * m;\n		}"),e.push("\n		if (activePointerCount > 4) {\n			vec2 pointer = pointerPositions[4].xy;\n			vec2 lastFramePointer = pointerPositions[4].zw;\n			float radius = pointerData[4].x;\n			float pressure = pointerData[4].y;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float taperFactor = 0.6;// 1 => 0 at lastMouse, 0 => no tapering\n			float projectedFraction = 1.0 - clamp(fp, 0.0, 1.0)*taperFactor;\n\n			float R = radius * 0.5 + pressure * pressure * pressure * 0.1;\n\n			float m = exp(-dist/R) * dragCoefficient; // drag coefficient\n			m *= projectedFraction * projectedFraction;\n\n			vec2 targetVelocity = velocity * dx * dragSpeed * dt * 60.;\n			v += (targetVelocity - v) * m;\n		}"),e.push("\n		if (activePointerCount > 5) {\n			vec2 pointer = pointerPositions[5].xy;\n			vec2 lastFramePointer = pointerPositions[5].zw;\n			float radius = pointerData[5].x;\n			float pressure = pointerData[5].y;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float taperFactor = 0.6;// 1 => 0 at lastMouse, 0 => no tapering\n			float projectedFraction = 1.0 - clamp(fp, 0.0, 1.0)*taperFactor;\n\n			float R = radius * 0.5 + pressure * pressure * pressure * 0.1;\n\n			float m = exp(-dist/R) * dragCoefficient; // drag coefficient\n			m *= projectedFraction * projectedFraction;\n\n			vec2 targetVelocity = velocity * dx * dragSpeed * dt * 60.;\n			v += (targetVelocity - v) * m;\n		}"),e.push("\n		if (activePointerCount > 6) {\n			vec2 pointer = pointerPositions[6].xy;\n			vec2 lastFramePointer = pointerPositions[6].zw;\n			float radius = pointerData[6].x;\n			float pressure = pointerData[6].y;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float taperFactor = 0.6;// 1 => 0 at lastMouse, 0 => no tapering\n			float projectedFraction = 1.0 - clamp(fp, 0.0, 1.0)*taperFactor;\n\n			float R = radius * 0.5 + pressure * pressure * pressure * 0.1;\n\n			float m = exp(-dist/R) * dragCoefficient; // drag coefficient\n			m *= projectedFraction * projectedFraction;\n\n			vec2 targetVelocity = velocity * dx * dragSpeed * dt * 60.;\n			v += (targetVelocity - v) * m;\n		}"),e.push("\n		if (activePointerCount > 7) {\n			vec2 pointer = pointerPositions[7].xy;\n			vec2 lastFramePointer = pointerPositions[7].zw;\n			float radius = pointerData[7].x;\n			float pressure = pointerData[7].y;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float taperFactor = 0.6;// 1 => 0 at lastMouse, 0 => no tapering\n			float projectedFraction = 1.0 - clamp(fp, 0.0, 1.0)*taperFactor;\n\n			float R = radius * 0.5 + pressure * pressure * pressure * 0.1;\n\n			float m = exp(-dist/R) * dragCoefficient; // drag coefficient\n			m *= projectedFraction * projectedFraction;\n\n			vec2 targetVelocity = velocity * dx * dragSpeed * dt * 60.;\n			v += (targetVelocity - v) * m;\n		}"),e.push("\n		if (activePointerCount > 8) {\n			vec2 pointer = pointerPositions[8].xy;\n			vec2 lastFramePointer = pointerPositions[8].zw;\n			float radius = pointerData[8].x;\n			float pressure = pointerData[8].y;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float taperFactor = 0.6;// 1 => 0 at lastMouse, 0 => no tapering\n			float projectedFraction = 1.0 - clamp(fp, 0.0, 1.0)*taperFactor;\n\n			float R = radius * 0.5 + pressure * pressure * pressure * 0.1;\n\n			float m = exp(-dist/R) * dragCoefficient; // drag coefficient\n			m *= projectedFraction * projectedFraction;\n\n			vec2 targetVelocity = velocity * dx * dragSpeed * dt * 60.;\n			v += (targetVelocity - v) * m;\n		}"),e.push("\n		if (activePointerCount > 9) {\n			vec2 pointer = pointerPositions[9].xy;\n			vec2 lastFramePointer = pointerPositions[9].zw;\n			float radius = pointerData[9].x;\n			float pressure = pointerData[9].y;\n\n			vec2 velocity = (pointer - lastFramePointer) / dt;\n			float speed = length(velocity);\n\n			float fp; // fractional projection\n			float dist = distanceToSegment(pointer, lastFramePointer, p, fp);\n\n			float taperFactor = 0.6;// 1 => 0 at lastMouse, 0 => no tapering\n			float projectedFraction = 1.0 - clamp(fp, 0.0, 1.0)*taperFactor;\n\n			float R = radius * 0.5 + pressure * pressure * pressure * 0.1;\n\n			float m = exp(-dist/R) * dragCoefficient; // drag coefficient\n			m *= projectedFraction * projectedFraction;\n\n			vec2 targetVelocity = velocity * dx * dragSpeed * dt * 60.;\n			v += (targetVelocity - v) * m;\n		}"),this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform float invAspectRatio;\nuniform bool velocityBoundaryEnabled;\n\nvec2 clipToSimSpace(vec2 clipSpace){\n    return vec2(clipSpace.x / invAspectRatio, clipSpace.y);\n}\n\nvec2 simToTexelSpace(vec2 simSpace){\n    return vec2(simSpace.x * invAspectRatio + 1.0 , simSpace.y + 1.0)*.5;\n}\n\n\n\n\n\n\n\n\n\n\n\n#define samplePressure(texture, coord) ( texture2D(pressure, coord).x )\n#define outOfBoundsVelocityMultiplier(coord) (velocityBoundaryEnabled ? (step(vec2(0.), coord) * step(coord, vec2(1.)) * 2. - 1. ) : vec2(1.0))\n\n#define sampleVelocity(texture, coord) ( outOfBoundsVelocityMultiplier(coord) * texture2D(velocity, coord).xy )\n\nuniform sampler2D velocity;\n	uniform float dt;\n	uniform float dx;\n	varying vec2 texelCoord;\n	varying vec2 p;\n\n\nfloat distanceToSegment(vec2 a, vec2 b, vec2 p, out float fp){\n	vec2 d = p - a;\n	vec2 x = b - a;\n\n	fp = 0.0; \n	float lx = length(x);\n	\n	if(lx <= 0.0001) return length(d);\n\n	float projection = dot(d, x / lx); \n\n	fp = projection / lx;\n\n	if(projection < 0.0)            return length(d);\n	else if(projection > length(x)) return length(p - b);\n	return sqrt(abs(dot(d,d) - projection*projection));\n}\n\nfloat distanceToSegment(vec2 a, vec2 b, vec2 p){\n	float fp;\n	return distanceToSegment(a, b, p, fp);\n}\nvec3 mod289(vec3 x) {\n    return x-floor(x*(1./289.))*289.;\n}\n\nvec4 mod289(vec4 x) {\n    return x-floor(x*(1./289.))*289.;\n}\n\nvec4 permute(vec4 x) {\n    return mod289(((x*34.)+1.)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r) {\n    return 1.79284291400159-.85373472095314*r;\n}\n\nfloat snoise(vec3 v) {\n    const vec2 C=vec2(1./6.,1./3.);\n    const vec4 D=vec4(0.,.5,1.,2.);\n    \n    \n    vec3 i=floor(v+dot(v,C.yyy));\n    vec3 x0=v-i+dot(i,C.xxx);\n    \n    \n    vec3 g=step(x0.yzx,x0.xyz);\n    vec3 l=1.-g;\n    vec3 i1=min(g.xyz,l.zxy);\n    vec3 i2=max(g.xyz,l.zxy);\n    \n    \n    \n    \n    \n    vec3 x1=x0-i1+C.xxx;\n    vec3 x2=x0-i2+C.yyy;\n    vec3 x3=x0-D.yyy;\n    \n    \n    i=mod289(i);\n    vec4 p=permute(permute(permute(\n        i.z+vec4(0.,i1.z,i2.z,1.))\n        +i.y+vec4(0.,i1.y,i2.y,1.))\n        +i.x+vec4(0.,i1.x,i2.x,1.));\n        \n    \n    \n    float n_=.142857142857;\n    vec3 ns=n_*D.wyz-D.xzx;\n    \n    vec4 j=p-49.*floor(p*ns.z*ns.z);\n    \n    vec4 x_=floor(j*ns.z);\n    vec4 y_=floor(j-7.*x_);\n    \n    vec4 x=x_*ns.x+ns.yyyy;\n    vec4 y=y_*ns.x+ns.yyyy;\n    vec4 h=1.-abs(x)-abs(y);\n    \n    vec4 b0=vec4(x.xy,y.xy);\n    vec4 b1=vec4(x.zw,y.zw);\n    \n    \n    \n    vec4 s0=floor(b0)*2.+1.;\n    vec4 s1=floor(b1)*2.+1.;\n    vec4 sh=-step(h,vec4(0.));\n    \n    vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;\n    vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;\n    \n    vec3 p0=vec3(a0.xy,h.x);\n    vec3 p1=vec3(a0.zw,h.y);\n    vec3 p2=vec3(a1.xy,h.z);\n    vec3 p3=vec3(a1.zw,h.w);\n    \n    \n    vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));\n    p0*=norm.x;\n    p1*=norm.y;\n    p2*=norm.z;\n    p3*=norm.w;\n    \n    \n    vec4 m=max(.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.);\n    m=m*m;\n    return 42.*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),\n    dot(p2,x2),dot(p3,x3)));\n}\n\nvec3 snoiseVec3(vec3 x){\n    float s=snoise(vec3(x));\n    float s1=snoise(vec3(x.y-19.1,x.z+33.4,x.x+47.2));\n    float s2=snoise(vec3(x.z+74.2,x.x-124.5,x.y+99.4));\n    vec3 c=vec3(s,s1,s2);\n    return c;\n}\n\nvec3 curlNoise(vec3 p){\n    const float e=.1;\n    vec3 dx=vec3(e,0.,0.);\n    vec3 dy=vec3(0.,e,0.);\n    vec3 dz=vec3(0.,0.,e);\n    \n    vec3 p_x0=snoiseVec3(p-dx);\n    vec3 p_x1=snoiseVec3(p+dx);\n    vec3 p_y0=snoiseVec3(p-dy);\n    vec3 p_y1=snoiseVec3(p+dy);\n    vec3 p_z0=snoiseVec3(p-dz);\n    vec3 p_z1=snoiseVec3(p+dz);\n    \n    float x=p_y1.z-p_y0.z-p_z1.y+p_z0.y;\n    float y=p_z1.x-p_z0.x-p_x1.z+p_x0.z;\n    float z=p_x1.y-p_x0.y-p_y1.x+p_y0.x;\n    \n    return normalize(vec3(x,y,.5));\n}\n	uniform float time_s;\n	uniform sampler2D userVelocityTexture;\n	uniform sampler2D lumaLogoTexture;\n	uniform float decayFactor;\n	uniform float dragCoefficient;\n	uniform float dragSpeed;\n	\n	uniform vec4 pointerPositions[10];\n	\n	uniform vec2 pointerData[10];\n	uniform int activePointerCount;\n	uniform float opticalFlowExponent;\n	uniform vec2 gravity;\n	uniform float viewportAspectRatio;\n	const bool enableUserVelocity = false;\n	"+eV+"\n	void main(){\n		vec2 v = texture2D(velocity, texelCoord).xy;\n		\n		\n		\n		vec2 targetVelocity = gravity;\n		\n		{\n			vec2 dv = targetVelocity - v;\n			v += dv * clamp(decayFactor * dt, 0., 1.0);\n		}\n		\n		#if 1\n		{\n			vec4 lumaLogoSample = sampleLumaLogoTexture(texelCoord);\n			float sign = -(lumaLogoSample.b * 2.0 - 1.0);\n			float gradientX = lumaLogoSample.r * sign;\n			float gradientY = lumaLogoSample.g * sign;\n			float centerHeight = 1. - clamp(lumaLogoSample.r + lumaLogoSample.g, 0., 1.);\n			\n			vec2 logoTargetVelocity = mix(-v, v, centerHeight * lumaLogoSample.a);\n			vec2 dv = logoTargetVelocity - v;\n			v += dv * clamp(5. * dt, 0., 1.0);\n		}\n		#endif\n		\n		if (enableUserVelocity) {\n			vec2 userVelocity = texture2D(userVelocityTexture, texelCoord).xy;\n			float l = length(userVelocity + 0.000001);\n			float lE = pow(abs(l), opticalFlowExponent);\n			v += userVelocity * (lE/l);\n		}\n		v += curlNoise(vec3(texelCoord, time_s * 0.1)).xy * 0.01;\n		v += curlNoise(vec3(texelCoord * 2., (time_s - 20.0) * 0.1)).xy * 0.02;\n		"+e.join("\n")+"\n		gl_FragColor = vec4(v, 0, 1.);\n	}\n"},__class__:v});var _=function(e){c.call(this,e)};_.__name__=!0,_.__super__=c,_.prototype=n(c.prototype,{createProperties:function(){c.prototype.createProperties.call(this);var e=new eS(this.gl,"texture",null,!1);this.texture=e,this._uniforms.push(e),e=new eS(this.gl,"lumaLogoTexture",null,!1),this.lumaLogoTexture=e,this._uniforms.push(e),e=new e_(this.gl,"invGamma",null),this.invGamma=e,this._uniforms.push(e),e=new e_(this.gl,"time_s",null),this.time_s=e,this._uniforms.push(e),e=new e_(this.gl,"refraction",null),this.refraction=e,this._uniforms.push(e),e=new e_(this.gl,"chromaticAberration",null),this.chromaticAberration=e,this._uniforms.push(e),e=new e_(this.gl,"innerDarkening",null),this.innerDarkening=e,this._uniforms.push(e),e=new e_(this.gl,"gradientBackground",null),this.gradientBackground=e,this._uniforms.push(e),e=new e_(this.gl,"viewportAspectRatio",null),this.viewportAspectRatio=e,this._uniforms.push(e),e=new ec("vertexPosition",0,2),this.vertexPosition=e,this._attributes.push(e),this._aStride+=8},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nattribute vec2 vertexPosition;\nvarying vec2 texelCoord;\n\nvoid main() {\n	texelCoord = vertexPosition;\n	gl_Position = vec4(vertexPosition*2.0 - vec2(1.0, 1.0), 0.0, 1.0 );\n}\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nconst float gamma = 2.1;\n\nvec3 toLinear(vec3 v){\n    return pow(v,vec3(gamma));\n}\n\nvec4 toLinear(vec4 v){\n    return vec4(toLinear(v.rgb),v.a);\n}\n\nvec3 toGamma(vec3 v){\n    return pow(v,vec3(1./gamma));\n}\n\nvec4 toGamma(vec4 v){\n    return vec4(toGamma(v.rgb),v.a);\n}\n\nvec3 brightnessContrast(vec3 value, float brightness, float contrast) {\n    return (value - 0.5) * contrast + 0.5 + brightness;\n}\nuniform sampler2D texture;\nuniform sampler2D lumaLogoTexture;\nuniform float invGamma;\nuniform float time_s;\nuniform float refraction;\nuniform float chromaticAberration;\nuniform float innerDarkening;\nuniform float gradientBackground;\nuniform float viewportAspectRatio;\nvarying vec2 texelCoord;\n\n\n\n"+eV+"\nvoid main(void){\n	\n	\n	vec4 lumaLogoSample = sampleLumaLogoTexture(texelCoord);\n	\n	\n	#if 0\n	float centerHeight = lumaLogoSample.r;\n	\n	float gradientX = dFdx(centerHeight);\n	float gradientY = dFdy(centerHeight);\n	\n	#elif 0\n	float centerHeight = lumaLogoSample.r;\n	\n	\n	float leftHeight = texture2D(lumaLogoTexture, texelCoord - vec2(invResolution.x, 0.0)).r;\n	float rightHeight = texture2D(lumaLogoTexture, texelCoord + vec2(invResolution.x, 0.0)).r;\n	float downHeight = texture2D(lumaLogoTexture, texelCoord - vec2(0.0, invResolution.y)).r;\n	float upHeight = texture2D(lumaLogoTexture, texelCoord + vec2(0.0, invResolution.y)).r;\n	float gradientX = ((rightHeight - centerHeight) + (centerHeight - leftHeight)) * 0.5;\n	float gradientY = ((upHeight - centerHeight) + (centerHeight - downHeight)) * 0.5;\n	\n	#elif 1\n	float sign = -(lumaLogoSample.b * 2.0 - 1.0);\n	float gradientX = lumaLogoSample.r * sign;\n	float gradientY = lumaLogoSample.g * sign;\n	float centerHeight = 1. - clamp(lumaLogoSample.r + lumaLogoSample.g, 0., 1.);\n	#endif\n	\n	\n	\n	\n	vec3 surfaceNormal = vec3(gradientX, gradientY, 1.0);\n	\n	vec2 refractionOffset = surfaceNormal.xy * refraction;\n	vec2 texelCoordRefracted = texelCoord + refractionOffset;\n	vec4 sample = vec4(\n		texture2D(texture, texelCoordRefracted + refractionOffset * chromaticAberration).r,\n		texture2D(texture, texelCoordRefracted).g,\n		texture2D(texture, texelCoordRefracted - refractionOffset * chromaticAberration).b,\n		1.0\n	);\n	float innerDarkeningFactor = mix(smoothstep(1.0, 0.5, centerHeight), 1.0, 1.0 - innerDarkening);\n	\n	\n	\n	\n	\n	\n	vec2 gradientDirection = vec2(0.5, 0.5);\n	float g = sin(dot(gradientDirection, texelCoord + refractionOffset) * 8. + time_s * 0.5) * 0.5 + 0.5;\n	g *= gradientBackground * (1. - centerHeight * 0.9);\n	gl_FragColor = vec4(\n		(\n			(sample.rgb * (g * 2. + 1.))\n			* innerDarkeningFactor\n			+ g * 0.25\n		)\n		* pow(centerHeight, 0.05) \n		* lumaLogoSample.a \n		, \n		1.0\n	);\n}\n"},__class__:_});var y=function(e){this._contextVersion=null,this.gl=e};y.__name__=!0,y.get=function(e){for(var t=0,n=y.capsCache;t<n.length;){var r=n[t];if(++t,e==r.gl)return r}return new y(e)},y.prototype={printReport:function(){var e=this.getContextVersion(),t=i.logPrefix+""+j.string("<b>GPU Capabilities</b>\n	"+["contextVersion: <b>"+(e.es?"ES ":"")+e.major+"."+e.minor+"</b>"].join("\n	"));null==t&&(t=""),i.printFormatted(t+"\n",0)},testWritableColorBuffer:function(e){for(;0!=this.gl.getError(););for(var t=0,n=z.createTexture(this.gl,2,2,e);0!=this.gl.getError();)++t;if(t>0)return!1;var r=this.gl.createFramebuffer();for(this.gl.bindFramebuffer(36160,r),this.gl.framebufferTexture2D(36160,36064,3553,n.native,0);0!=this.gl.getError();)++t;if(t>0)return!1;var i=36053==this.gl.checkFramebufferStatus(36160);return this.gl.deleteTexture(n.native),this.gl.deleteFramebuffer(r),this.gl.bindTexture(3553,null),this.gl.bindFramebuffer(36160,null),i},getWritableFloatColorBufferParameters:function(e,t,n){var r=this.getContextVersion(),i=[6403,33319,6407,6408],a=[5131,5126],o=i.indexOf(e),s=a.indexOf(t);if(9729==n&&(this.gl.getExtension("OES_texture_float_linear"),this.gl.getExtension("OES_texture_half_float_linear")),r.es&&r.major<=2){for(this.gl.getExtension("OES_texture_float"),this.gl.getExtension("OES_texture_half_float"),this.gl.getExtension("EXT_color_buffer_half_float"),e=i[0|Math.max(o,2)];s<a.length;)if(5131==(t=a[s++])&&(t=36193),this.testWritableColorBuffer(new V(e,e,t,n,n,33071,33071)))return{format:e,internalFormat:e,dataType:t,filtering:n}}else{this.gl.getExtension("EXT_color_buffer_float");for(var l,c={6403:33325,33319:33327,6407:34843,6408:34842},u={6403:33326,33319:33328,6407:34837,6408:34836};s<a.length;)for(t=a[s++];o<i.length;){switch(e=i[o++],t){case 5126:default:l=u[e];break;case 5131:l=c[e]}if(this.testWritableColorBuffer(new V(e,l,t,n,n,33071,33071)))return{format:e,internalFormat:l,dataType:t,filtering:n}}}return null},getContextVersion:function(){if(null==this._contextVersion){var e=this.gl.getParameter(7938),t=new r("((OpenGL ES|WebGL)\\s*)?(\\d+)\\.(\\d+)","ig");if(t.match(e)){var n=t.matched(2),i="webgl"==n.toLowerCase();this._contextVersion={es:null!=n,major:j.parseInt(t.matched(3))+(i?1:0),minor:j.parseInt(t.matched(4))}}else this._contextVersion={es:!1,major:-1,minor:-1}}return this._contextVersion},__class__:y};var x=function(e,t,n,r,i,a,o,s,l){this.periodicBoundary=!1,this.advectShader=new b(e),this.divergenceShader=new S(e),this.pressureSolveShader=new w(e),this.pressureGradientSubstractShader=new P(e),this.applyForcesShader=s,this.updateSurfaceShader=l,this.gl=e,this.width=t,this.height=n,this.powerOf2Surface=o,this.simulationScale=r,this.solverIterations=a,this.aspectRatio=this.width/this.height,this.physicsScale=i,this.updateBaseUniforms(),this.updateTextureSizes();var c=y.get(e),u=c.getWritableFloatColorBufferParameters(6408,5131,9729),d=c.getWritableFloatColorBufferParameters(33319,5131,9729),h=c.getWritableFloatColorBufferParameters(6403,5131,9728);if(null==u)throw Q.thrown("The fluid simulation requires renderable floating point textures but these are not available on this device");var p=this.periodicBoundary?10497:33071;this.screenTriangle=L.getScreenTriangle(e),this.surfaceRenderTarget=new es(e,this.surfaceWidth,this.surfaceHeight,new V(u.format,u.internalFormat,u.dataType,9729,9729,p,p)),this.velocityRenderTarget=new es(e,this.simulationWidth,this.simulationHeight,new V(d.format,d.internalFormat,d.dataType,9729,9729,p,p)),this.pressureRenderTarget=new es(e,this.simulationWidth,this.simulationHeight,new V(h.format,h.internalFormat,h.dataType,9728,9728,p,p)),this.divergenceRenderTarget=new eo(e,this.simulationWidth,this.simulationHeight,new V(h.format,h.internalFormat,h.dataType,9728,9728,p,p)),this.updateBaseUniforms(),this.printParameters()};x.__name__=!0,x.prototype={releaseGPUMemory:function(){var e;null!=this.velocityRenderTarget&&((e=this.velocityRenderTarget).gl.deleteFramebuffer(e.writeFrameBufferObject),e.gl.deleteFramebuffer(e.readFrameBufferObject),e.gl.deleteTexture(e.writeToTexture.native),e.gl.deleteTexture(e.readFromTexture.native)),null!=this.pressureRenderTarget&&((e=this.pressureRenderTarget).gl.deleteFramebuffer(e.writeFrameBufferObject),e.gl.deleteFramebuffer(e.readFrameBufferObject),e.gl.deleteTexture(e.writeToTexture.native),e.gl.deleteTexture(e.readFromTexture.native)),null!=this.divergenceRenderTarget&&((e=this.divergenceRenderTarget).gl.deleteFramebuffer(e.frameBufferObject),e.gl.deleteTexture(e.texture.native)),null!=this.surfaceRenderTarget&&((e=this.surfaceRenderTarget).gl.deleteFramebuffer(e.writeFrameBufferObject),e.gl.deleteFramebuffer(e.readFrameBufferObject),e.gl.deleteTexture(e.writeToTexture.native),e.gl.deleteTexture(e.readFromTexture.native)),null!=this.advectShader&&this.advectShader.destroy(),null!=this.divergenceShader&&this.divergenceShader.destroy(),null!=this.pressureSolveShader&&this.pressureSolveShader.destroy(),null!=this.pressureGradientSubstractShader&&this.pressureGradientSubstractShader.destroy()},step:function(e){this.gl.viewport(0,0,this.simulationWidth,this.simulationHeight),this.gl.bindBuffer(34962,this.screenTriangle);var t,n,r,i=this.velocityRenderTarget;if((t=this.advectShader.dt).dirty=!0,t.data=e,(t=this.advectShader.target).dirty=!0,t.data=i.readFromTexture.native,(t=this.advectShader.velocity).dirty=!0,t.data=this.velocityRenderTarget.readFromTexture.native,(c=this.advectShader)._active){for(var a=0,o=c._uniforms;a<o.length;){var s=o[a];++a,(s.dirty||s.alwaysDirty)&&s.apply()}var l=0;for(a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize}else{for(c._ready||c.create(),c.gl.useProgram(c._prog),a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize;c._active=!0}if(i.gl.bindFramebuffer(36160,i.writeFrameBufferObject),this.gl.drawArrays(4,0,3),c.deactivate(),i.tmpFBO=i.writeFrameBufferObject,i.writeFrameBufferObject=i.readFrameBufferObject,i.readFrameBufferObject=i.tmpFBO,i.tmpTex=i.writeToTexture,i.writeToTexture=i.readFromTexture,i.readFromTexture=i.tmpTex,null!=this.applyForcesShader){(t=this.applyForcesShader.dt).dirty=!0,t.data=e,(t=this.applyForcesShader.velocity).dirty=!0,t.data=this.velocityRenderTarget.readFromTexture.native;var c=this.applyForcesShader;if(i=this.velocityRenderTarget,c._active){for(a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize}else{for(c._ready||c.create(),c.gl.useProgram(c._prog),a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize;c._active=!0}i.activate(),this.gl.drawArrays(4,0,3),c.deactivate(),(t=this.velocityRenderTarget).tmpFBO=t.writeFrameBufferObject,t.writeFrameBufferObject=t.readFrameBufferObject,t.readFrameBufferObject=t.tmpFBO,t.tmpTex=t.writeToTexture,t.writeToTexture=t.readFromTexture,t.readFromTexture=t.tmpTex}if((t=this.divergenceShader.velocity).dirty=!0,t.data=this.velocityRenderTarget.readFromTexture.native,c=this.divergenceShader,i=this.divergenceRenderTarget,c._active){for(a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize}else{for(c._ready||c.create(),c.gl.useProgram(c._prog),a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize;c._active=!0}if(i.activate(),this.gl.drawArrays(4,0,3),c.deactivate(),(t=this.pressureSolveShader.divergence).dirty=!0,t.data=this.divergenceRenderTarget.texture.native,(t=this.pressureSolveShader.pressure).dirty=!0,t.data=this.pressureRenderTarget.readFromTexture.native,(t=this.pressureSolveShader)._active){for(a=0,o=t._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=t._attributes.length;a<o;)-1!=(r=(n=t._attributes[a++]).location)&&(t.gl.enableVertexAttribArray(r),t.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,t._aStride,l)),l+=n.byteSize}else{for(t._ready||t.create(),t.gl.useProgram(t._prog),a=0,o=t._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=t._attributes.length;a<o;)-1!=(r=(n=t._attributes[a++]).location)&&(t.gl.enableVertexAttribArray(r),t.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,t._aStride,l)),l+=n.byteSize;t._active=!0}for(a=0,o=this.solverIterations;a<o;){++a,(t=this.pressureSolveShader.pressure).dirty=!0,t.data=this.pressureRenderTarget.readFromTexture.native;for(var u=0,d=this.pressureSolveShader._uniforms;u<d.length;)s=d[u],++u,(s.dirty||s.alwaysDirty)&&s.apply();var h=this.pressureRenderTarget;h.gl.bindFramebuffer(36160,h.writeFrameBufferObject),this.gl.drawArrays(4,0,3);var p=this.pressureRenderTarget;p.tmpFBO=p.writeFrameBufferObject,p.writeFrameBufferObject=p.readFrameBufferObject,p.readFrameBufferObject=p.tmpFBO,p.tmpTex=p.writeToTexture,p.writeToTexture=p.readFromTexture,p.readFromTexture=p.tmpTex}if(this.pressureSolveShader.deactivate(),(t=this.pressureGradientSubstractShader.pressure).dirty=!0,t.data=this.pressureRenderTarget.readFromTexture.native,(t=this.pressureGradientSubstractShader.velocity).dirty=!0,t.data=this.velocityRenderTarget.readFromTexture.native,c=this.pressureGradientSubstractShader,i=this.velocityRenderTarget,c._active){for(a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize}else{for(c._ready||c.create(),c.gl.useProgram(c._prog),a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize;c._active=!0}if(i.activate(),this.gl.drawArrays(4,0,3),c.deactivate(),(t=this.velocityRenderTarget).tmpFBO=t.writeFrameBufferObject,t.writeFrameBufferObject=t.readFrameBufferObject,t.readFrameBufferObject=t.tmpFBO,t.tmpTex=t.writeToTexture,t.writeToTexture=t.readFromTexture,t.readFromTexture=t.tmpTex,this.gl.viewport(0,0,this.surfaceWidth,this.surfaceHeight),null!=this.updateSurfaceShader){if((t=this.updateSurfaceShader.dt).dirty=!0,t.data=e,(t=this.updateSurfaceShader.surface).dirty=!0,t.data=this.surfaceRenderTarget.readFromTexture.native,c=this.updateSurfaceShader,i=this.surfaceRenderTarget,c._active){for(a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize}else{for(c._ready||c.create(),c.gl.useProgram(c._prog),a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize;c._active=!0}i.activate(),this.gl.drawArrays(4,0,3),c.deactivate(),(t=this.surfaceRenderTarget).tmpFBO=t.writeFrameBufferObject,t.writeFrameBufferObject=t.readFrameBufferObject,t.readFrameBufferObject=t.tmpFBO,t.tmpTex=t.writeToTexture,t.writeToTexture=t.readFromTexture,t.readFromTexture=t.tmpTex}if(i=this.surfaceRenderTarget,(t=this.advectShader.dt).dirty=!0,t.data=e,(t=this.advectShader.target).dirty=!0,t.data=i.readFromTexture.native,(t=this.advectShader.velocity).dirty=!0,t.data=this.velocityRenderTarget.readFromTexture.native,(c=this.advectShader)._active){for(a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize}else{for(c._ready||c.create(),c.gl.useProgram(c._prog),a=0,o=c._uniforms;a<o.length;)s=o[a],++a,(s.dirty||s.alwaysDirty)&&s.apply();for(l=0,a=0,o=c._attributes.length;a<o;)-1!=(r=(n=c._attributes[a++]).location)&&(c.gl.enableVertexAttribArray(r),c.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,c._aStride,l)),l+=n.byteSize;c._active=!0}i.gl.bindFramebuffer(36160,i.writeFrameBufferObject),this.gl.drawArrays(4,0,3),c.deactivate(),i.tmpFBO=i.writeFrameBufferObject,i.writeFrameBufferObject=i.readFrameBufferObject,i.readFrameBufferObject=i.tmpFBO,i.tmpTex=i.writeToTexture,i.writeToTexture=i.readFromTexture,i.readFromTexture=i.tmpTex},updateTextureSizes:function(){var e=this.powerOf2Surface?ei.floorPowerOf2(this.width):this.width,t=this.powerOf2Surface?ei.floorPowerOf2(this.height):this.height,n=ei.floorPowerOf2(e*this.simulationScale),r=ei.floorPowerOf2(t*this.simulationScale),i=e!=this.surfaceWidth||t!=this.surfaceHeight,a=n!=this.simulationWidth||r!=this.simulationHeight;if(this.surfaceWidth=e,this.surfaceHeight=t,this.simulationWidth=n,this.simulationHeight=r,i&&null!=this.surfaceRenderTarget&&this.surfaceRenderTarget.resize(this.surfaceWidth,this.surfaceHeight),a&&null!=this.velocityRenderTarget&&this.velocityRenderTarget.resize(this.simulationWidth,this.simulationHeight),a&&null!=this.pressureRenderTarget&&this.pressureRenderTarget.resize(this.simulationWidth,this.simulationHeight),a&&null!=this.divergenceRenderTarget){var o=this.divergenceRenderTarget,s=this.simulationWidth,l=this.simulationHeight,c=o.createEmptyTexture(s,l);if(o.gl.bindFramebuffer(36160,o.frameBufferObject),o.gl.framebufferTexture2D(36160,36064,3553,c.native,0),null!=o.texture){var u,d,h=L.getResampleShader(o.gl),p=h.texture;if(p.dirty=!0,p.data=o.texture.native,o.gl.bindFramebuffer(36160,o.frameBufferObject),o.gl.viewport(0,0,s,l),o.gl.bindBuffer(34962,L.getScreenTriangle(o.gl)),h._active){for(var f=0,g=h._uniforms;f<g.length;){var m=g[f];++f,(m.dirty||m.alwaysDirty)&&m.apply()}var v=0;for(f=0,g=h._attributes.length;f<g;)-1!=(d=(u=h._attributes[f++]).location)&&(h.gl.enableVertexAttribArray(d),h.gl.vertexAttribPointer(d,u.itemCount,u.type,!1,h._aStride,v)),v+=u.byteSize}else{for(h._ready||h.create(),h.gl.useProgram(h._prog),f=0,g=h._uniforms;f<g.length;)m=g[f],++f,(m.dirty||m.alwaysDirty)&&m.apply();for(v=0,f=0,g=h._attributes.length;f<g;)-1!=(d=(u=h._attributes[f++]).location)&&(h.gl.enableVertexAttribArray(d),h.gl.vertexAttribPointer(d,u.itemCount,u.type,!1,h._aStride,v)),v+=u.byteSize;h._active=!0}o.gl.drawArrays(4,0,3),h.deactivate(),o.gl.deleteTexture(o.texture.native)}else o.gl.bindFramebuffer(36160,o.frameBufferObject),o.gl.viewport(0,0,o.width,o.height),o.gl.clearColor(0,0,0,1),o.gl.clear(16384);o.width=s,o.height=l,o.texture=c}this.updateBaseUniforms()},forEachShader:function(e){e(this.applyForcesShader),e(this.updateSurfaceShader),e(this.advectShader),e(this.divergenceShader),e(this.pressureSolveShader),e(this.pressureGradientSubstractShader)},setWrapMode:function(e){this.velocityRenderTarget.updateTextureParameters(new U(null,null,e,e)),this.pressureRenderTarget.updateTextureParameters(new U(null,null,e,e)),this.divergenceRenderTarget.updateTextureParameters(new U(null,null,e,e)),this.surfaceRenderTarget.updateTextureParameters(new U(null,null,e,e))},updateBaseUniforms:function(){var e,t=this;this.forEachShader(function(e){var n=e.invAspectRatio,r=1/t.aspectRatio;n.dirty=!0,n.data=r,e.invResolution.data[0]=1/t.simulationWidth,e.invResolution.data[1]=1/t.simulationHeight,e.invResolution.dirty=!0,n=e.velocityBoundaryEnabled,r=!t.periodicBoundary,n.dirty=!0,n.data=r}),(e=this.advectShader.rdx).dirty=!0,e.data=1/this.physicsScale,(e=this.divergenceShader.halfrdx).dirty=!0,e.data=1/this.physicsScale*.5,(e=this.pressureGradientSubstractShader.halfrdx).dirty=!0,e.data=1/this.physicsScale*.5,(e=this.pressureSolveShader.alpha).dirty=!0,e.data=-this.physicsScale*this.physicsScale,(e=this.applyForcesShader.dx).dirty=!0,e.data=this.physicsScale,(e=this.updateSurfaceShader.dx).dirty=!0,e.data=this.physicsScale},printParameters:function(){},__class__:x};var b=function(e){p.call(this,e)};b.__name__=!0,b.__super__=p,b.prototype=n(p.prototype,{createProperties:function(){p.prototype.createProperties.call(this);var e=new eS(this.gl,"velocity",null,!1);this.velocity=e,this._uniforms.push(e),e=new eS(this.gl,"target",null,!1),this.target=e,this._uniforms.push(e),e=new e_(this.gl,"dt",null),this.dt=e,this._uniforms.push(e),e=new e_(this.gl,"rdx",null),this.rdx=e,this._uniforms.push(e),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\n \r\nattribute vec2 vertexPosition;\r\n\r\nuniform vec2 invResolution;\r\nuniform float invAspectRatio;\r\n\r\nvarying vec2 texelCoord;\r\n\r\n\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\n\r\nvarying vec2 p;\r\n\r\nvoid main() {\r\n	texelCoord = vertexPosition;\r\n	\r\n	vL = texelCoord - vec2(invResolution.x,0);\r\n	vR = texelCoord + vec2(invResolution.x,0);\r\n	vB = texelCoord - vec2(0,invResolution.y);\r\n	vT = texelCoord + vec2(0,invResolution.y);\r\n	\r\n	vec2 clipSpace = 2.0*texelCoord - 1.0;	\n	\r\n	p = vec2(clipSpace.x / invAspectRatio, clipSpace.y);\r\n\r\n	gl_Position = vec4(clipSpace, 0.0, 1.0 );	\r\n}\r\n\n\n\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform float invAspectRatio;\nuniform bool velocityBoundaryEnabled;\n\nvec2 clipToSimSpace(vec2 clipSpace){\n    return vec2(clipSpace.x / invAspectRatio, clipSpace.y);\n}\n\nvec2 simToTexelSpace(vec2 simSpace){\n    return vec2(simSpace.x * invAspectRatio + 1.0 , simSpace.y + 1.0)*.5;\n}\n\n\n\n\n\n\n\n\n\n\n\n#define samplePressure(texture, coord) ( texture2D(pressure, coord).x )\n#define outOfBoundsVelocityMultiplier(coord) (velocityBoundaryEnabled ? (step(vec2(0.), coord) * step(coord, vec2(1.)) * 2. - 1. ) : vec2(1.0))\n\n#define sampleVelocity(texture, coord) ( outOfBoundsVelocityMultiplier(coord) * texture2D(velocity, coord).xy )\n\nuniform sampler2D velocity;\nuniform sampler2D target;\nuniform float dt;\nuniform float rdx; \n\nvarying vec2 texelCoord;\nvarying vec2 p;\n\nvoid main(void){\n  \n  vec2 tracedPos = p - dt * rdx * texture2D(velocity, texelCoord).xy;\n\n  gl_FragColor = texture2D(target, simToTexelSpace(tracedPos));\n}\n"},__class__:b});var S=function(e){p.call(this,e)};S.__name__=!0,S.__super__=p,S.prototype=n(p.prototype,{createProperties:function(){p.prototype.createProperties.call(this);var e=new eS(this.gl,"velocity",null,!1);this.velocity=e,this._uniforms.push(e),e=new e_(this.gl,"halfrdx",null),this.halfrdx=e,this._uniforms.push(e),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\n \r\nattribute vec2 vertexPosition;\r\n\r\nuniform vec2 invResolution;\r\nuniform float invAspectRatio;\r\n\r\nvarying vec2 texelCoord;\r\n\r\n\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\n\r\nvarying vec2 p;\r\n\r\nvoid main() {\r\n	texelCoord = vertexPosition;\r\n	\r\n	vL = texelCoord - vec2(invResolution.x,0);\r\n	vR = texelCoord + vec2(invResolution.x,0);\r\n	vB = texelCoord - vec2(0,invResolution.y);\r\n	vT = texelCoord + vec2(0,invResolution.y);\r\n	\r\n	vec2 clipSpace = 2.0*texelCoord - 1.0;	\n	\r\n	p = vec2(clipSpace.x / invAspectRatio, clipSpace.y);\r\n\r\n	gl_Position = vec4(clipSpace, 0.0, 1.0 );	\r\n}\r\n\n\n\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform float invAspectRatio;\nuniform bool velocityBoundaryEnabled;\n\nvec2 clipToSimSpace(vec2 clipSpace){\n    return vec2(clipSpace.x / invAspectRatio, clipSpace.y);\n}\n\nvec2 simToTexelSpace(vec2 simSpace){\n    return vec2(simSpace.x * invAspectRatio + 1.0 , simSpace.y + 1.0)*.5;\n}\n\n\n\n\n\n\n\n\n\n\n\n#define samplePressure(texture, coord) ( texture2D(pressure, coord).x )\n#define outOfBoundsVelocityMultiplier(coord) (velocityBoundaryEnabled ? (step(vec2(0.), coord) * step(coord, vec2(1.)) * 2. - 1. ) : vec2(1.0))\n\n#define sampleVelocity(texture, coord) ( outOfBoundsVelocityMultiplier(coord) * texture2D(velocity, coord).xy )\n\nuniform sampler2D velocity;	\nuniform float halfrdx;	\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\nvoid main(void){\r\n	\n 	\n	vec2 L = sampleVelocity(velocity, vL);\r\n	vec2 R = sampleVelocity(velocity, vR);\r\n	vec2 B = sampleVelocity(velocity, vB);\r\n	vec2 T = sampleVelocity(velocity, vT);\r\n\r\n	gl_FragColor = vec4( halfrdx * ((R.x - L.x) + (T.y - B.y)), 0, 0, 1);\r\n}\r\n\n"},__class__:S});var w=function(e){p.call(this,e)};w.__name__=!0,w.__super__=p,w.prototype=n(p.prototype,{createProperties:function(){p.prototype.createProperties.call(this);var e=new eS(this.gl,"pressure",null,!1);this.pressure=e,this._uniforms.push(e),e=new eS(this.gl,"divergence",null,!1),this.divergence=e,this._uniforms.push(e),e=new e_(this.gl,"alpha",null),this.alpha=e,this._uniforms.push(e),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\n \r\nattribute vec2 vertexPosition;\r\n\r\nuniform vec2 invResolution;\r\nuniform float invAspectRatio;\r\n\r\nvarying vec2 texelCoord;\r\n\r\n\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\n\r\nvarying vec2 p;\r\n\r\nvoid main() {\r\n	texelCoord = vertexPosition;\r\n	\r\n	vL = texelCoord - vec2(invResolution.x,0);\r\n	vR = texelCoord + vec2(invResolution.x,0);\r\n	vB = texelCoord - vec2(0,invResolution.y);\r\n	vT = texelCoord + vec2(0,invResolution.y);\r\n	\r\n	vec2 clipSpace = 2.0*texelCoord - 1.0;	\n	\r\n	p = vec2(clipSpace.x / invAspectRatio, clipSpace.y);\r\n\r\n	gl_Position = vec4(clipSpace, 0.0, 1.0 );	\r\n}\r\n\n\n\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform float invAspectRatio;\nuniform bool velocityBoundaryEnabled;\n\nvec2 clipToSimSpace(vec2 clipSpace){\n    return vec2(clipSpace.x / invAspectRatio, clipSpace.y);\n}\n\nvec2 simToTexelSpace(vec2 simSpace){\n    return vec2(simSpace.x * invAspectRatio + 1.0 , simSpace.y + 1.0)*.5;\n}\n\n\n\n\n\n\n\n\n\n\n\n#define samplePressure(texture, coord) ( texture2D(pressure, coord).x )\n#define outOfBoundsVelocityMultiplier(coord) (velocityBoundaryEnabled ? (step(vec2(0.), coord) * step(coord, vec2(1.)) * 2. - 1. ) : vec2(1.0))\n\n#define sampleVelocity(texture, coord) ( outOfBoundsVelocityMultiplier(coord) * texture2D(velocity, coord).xy )\n\nuniform sampler2D pressure;\nuniform sampler2D divergence;\nuniform float alpha;\n\nvarying vec2 texelCoord;\n\nvarying vec2 vL;\nvarying vec2 vR;\nvarying vec2 vB;\nvarying vec2 vT;\n\nvoid main(void){\n  \n  \n  float L = samplePressure(pressure, vL);\n  float R = samplePressure(pressure, vR);\n  float B = samplePressure(pressure, vB);\n  float T = samplePressure(pressure, vT);\n\n  float bC = texture2D(divergence, texelCoord).x;\n\n  gl_FragColor = vec4( (L + R + B + T + alpha * bC) * .25, 0, 0, 1 ); \n}\n"},__class__:w});var P=function(e){p.call(this,e)};P.__name__=!0,P.__super__=p,P.prototype=n(p.prototype,{createProperties:function(){p.prototype.createProperties.call(this);var e=new eS(this.gl,"pressure",null,!1);this.pressure=e,this._uniforms.push(e),e=new eS(this.gl,"velocity",null,!1),this.velocity=e,this._uniforms.push(e),e=new e_(this.gl,"halfrdx",null),this.halfrdx=e,this._uniforms.push(e),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\n \r\nattribute vec2 vertexPosition;\r\n\r\nuniform vec2 invResolution;\r\nuniform float invAspectRatio;\r\n\r\nvarying vec2 texelCoord;\r\n\r\n\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\n\r\nvarying vec2 p;\r\n\r\nvoid main() {\r\n	texelCoord = vertexPosition;\r\n	\r\n	vL = texelCoord - vec2(invResolution.x,0);\r\n	vR = texelCoord + vec2(invResolution.x,0);\r\n	vB = texelCoord - vec2(0,invResolution.y);\r\n	vT = texelCoord + vec2(0,invResolution.y);\r\n	\r\n	vec2 clipSpace = 2.0*texelCoord - 1.0;	\n	\r\n	p = vec2(clipSpace.x / invAspectRatio, clipSpace.y);\r\n\r\n	gl_Position = vec4(clipSpace, 0.0, 1.0 );	\r\n}\r\n\n\n\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform float invAspectRatio;\nuniform bool velocityBoundaryEnabled;\n\nvec2 clipToSimSpace(vec2 clipSpace){\n    return vec2(clipSpace.x / invAspectRatio, clipSpace.y);\n}\n\nvec2 simToTexelSpace(vec2 simSpace){\n    return vec2(simSpace.x * invAspectRatio + 1.0 , simSpace.y + 1.0)*.5;\n}\n\n\n\n\n\n\n\n\n\n\n\n#define samplePressure(texture, coord) ( texture2D(pressure, coord).x )\n#define outOfBoundsVelocityMultiplier(coord) (velocityBoundaryEnabled ? (step(vec2(0.), coord) * step(coord, vec2(1.)) * 2. - 1. ) : vec2(1.0))\n\n#define sampleVelocity(texture, coord) ( outOfBoundsVelocityMultiplier(coord) * texture2D(velocity, coord).xy )\n\nuniform sampler2D pressure;\r\nuniform sampler2D velocity;\r\nuniform float halfrdx;\r\n\r\nvarying vec2 texelCoord;\r\n\r\nvarying vec2 vL;\r\nvarying vec2 vR;\r\nvarying vec2 vB;\r\nvarying vec2 vT;\r\n\r\nvoid main(void){\r\n  float L = samplePressure(pressure, vL);\r\n  float R = samplePressure(pressure, vR);\r\n  float B = samplePressure(pressure, vB);\r\n  float T = samplePressure(pressure, vT);\r\n\r\n  vec2 v = texture2D(velocity, texelCoord).xy;\r\n\r\n  gl_FragColor = vec4(v - halfrdx*vec2(R-L, T-B), 0, 1);\r\n}\r\n\r\n\n"},__class__:P});var C=function(e,t){null==t&&(t=524288),this.gl=e,e.getExtension("OES_texture_float"),this.screenTriangle=L.getScreenTriangle(e),this.inititalConditionsShader=new T(e),this.stepParticlesShader=new R(e);var n,r,i=this.stepParticlesShader.dragCoefficient;i.dirty=!0,i.data=1,this.stepParticlesShader.flowScale.data[0]=1,this.stepParticlesShader.flowScale.data[1]=1,this.setCount(t);var a=this.inititalConditionsShader,o=this.particleData;if(this.gl.viewport(0,0,o.width,o.height),this.gl.bindFramebuffer(36160,o.writeFrameBufferObject),this.gl.bindBuffer(34962,this.screenTriangle),a._active){for(var s=0,l=a._uniforms;s<l.length;){var c=l[s];++s,(c.dirty||c.alwaysDirty)&&c.apply()}var u=0;for(s=0,l=a._attributes.length;s<l;)-1!=(r=(n=a._attributes[s++]).location)&&(a.gl.enableVertexAttribArray(r),a.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,a._aStride,u)),u+=n.byteSize}else{for(a._ready||a.create(),a.gl.useProgram(a._prog),s=0,l=a._uniforms;s<l.length;)c=l[s],++s,(c.dirty||c.alwaysDirty)&&c.apply();for(u=0,s=0,l=a._attributes.length;s<l;)-1!=(r=(n=a._attributes[s++]).location)&&(a.gl.enableVertexAttribArray(r),a.gl.vertexAttribPointer(r,n.itemCount,n.type,!1,a._aStride,u)),u+=n.byteSize;a._active=!0}this.gl.drawArrays(4,0,3),a.deactivate(),o.tmpFBO=o.writeFrameBufferObject,o.writeFrameBufferObject=o.readFrameBufferObject,o.readFrameBufferObject=o.tmpFBO,o.tmpTex=o.writeToTexture,o.writeToTexture=o.readFromTexture,o.readFromTexture=o.tmpTex,this.printParameters()};C.__name__=!0,C.prototype={releaseGPUMemory:function(){if(null!=this.particleData){var e=this.particleData;e.gl.deleteFramebuffer(e.writeFrameBufferObject),e.gl.deleteFramebuffer(e.readFrameBufferObject),e.gl.deleteTexture(e.writeToTexture.native),e.gl.deleteTexture(e.readFromTexture.native)}null!=this.particleUVs&&this.gl.deleteBuffer(this.particleUVs),null!=this.inititalConditionsShader&&this.inititalConditionsShader.destroy(),null!=this.stepParticlesShader&&this.stepParticlesShader.destroy()},setCount:function(e){var t=Math.ceil(Math.sqrt(e)),n=y.get(this.gl).getWritableFloatColorBufferParameters(6408,5131,9728);if(null==n)throw Q.thrown("Particles require renderable floating point textures");null!=this.particleData?this.particleData.resize(t,t):this.particleData=new es(this.gl,t,t,new V(n.format,n.internalFormat,n.dataType,9728,9728,33071,33071)),null!=this.particleUVs&&this.gl.deleteBuffer(this.particleUVs),this.particleUVs=this.gl.createBuffer();for(var r=[],i=0;i<t;)for(var a=i++,o=0;o<t;)r.push(a/t),r.push(o++/t);return this.gl.bindBuffer(34962,this.particleUVs),this.gl.bufferData(34962,new Float32Array(r),35044),this.gl.bindBuffer(34962,null),this.count=e},printParameters:function(){var e=i.logPrefix+""+j.string("<b>GPUParticles Parameters</>\n	"+["dragCoefficient: <b>"+this.stepParticlesShader.dragCoefficient.data+"</b>","flowScaleX: <b>"+this.stepParticlesShader.flowScale.data[0]+"</b>","flowScaleY: <b>"+this.stepParticlesShader.flowScale.data[1]+"</b>","texture size: <b>"+this.particleData.width+"x"+this.particleData.height+"</b>"].join("\n	"));null==e&&(e=""),i.printFormatted(e+"\n",0)},__class__:C};var F=function(e){c.call(this,e)};F.__name__=!0,F.__super__=c,F.prototype=n(c.prototype,{createProperties:function(){c.prototype.createProperties.call(this);var e=new ec("vertexPosition",0,2);this.vertexPosition=e,this._attributes.push(e),this._aStride+=8},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nattribute vec2 vertexPosition;\n	varying vec2 texelCoord;\n	void main() {\n		texelCoord = vertexPosition;\n		gl_Position = vec4(vertexPosition*2.0 - vec2(1.0, 1.0), 0.0, 1.0 );\n	}\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nvarying vec2 texelCoord;\n"},__class__:F});var T=function(e){F.call(this,e)};T.__name__=!0,T.__super__=F,T.prototype=n(F.prototype,{createProperties:function(){F.prototype.createProperties.call(this),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nattribute vec2 vertexPosition;\n	varying vec2 texelCoord;\n	void main() {\n		texelCoord = vertexPosition;\n		gl_Position = vec4(vertexPosition*2.0 - vec2(1.0, 1.0), 0.0, 1.0 );\n	}\n\n\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nvarying vec2 texelCoord;\n\nvoid main() {\n		vec2 ip = vec2((texelCoord.x), (texelCoord.y)) * 2.0 - 1.0;\n		vec2 iv = vec2(0,0);\n		gl_FragColor = vec4(ip, iv);\n	}\n"},__class__:T});var A=function(e){F.call(this,e)};A.__name__=!0,A.__super__=F,A.prototype=n(F.prototype,{createProperties:function(){F.prototype.createProperties.call(this);var e=new e_(this.gl,"dt",null);this.dt=e,this._uniforms.push(e),e=new eS(this.gl,"particleData",null,!1),this.particleData=e,this._uniforms.push(e),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nattribute vec2 vertexPosition;\n	varying vec2 texelCoord;\n	void main() {\n		texelCoord = vertexPosition;\n		gl_Position = vec4(vertexPosition*2.0 - vec2(1.0, 1.0), 0.0, 1.0 );\n	}\n\n\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nvarying vec2 texelCoord;\n\nuniform float dt;\n	uniform sampler2D particleData;\n"},__class__:A});var R=function(e){A.call(this,e)};R.__name__=!0,R.__super__=A,R.prototype=n(A.prototype,{createProperties:function(){A.prototype.createProperties.call(this);var e=new e_(this.gl,"dragCoefficient",null);this.dragCoefficient=e,this._uniforms.push(e),e=new eP(this.gl,"flowScale",null),this.flowScale=e,this._uniforms.push(e),e=new eS(this.gl,"flowVelocityField",null,!1),this.flowVelocityField=e,this._uniforms.push(e),this._aStride+=0},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nattribute vec2 vertexPosition;\n	varying vec2 texelCoord;\n	void main() {\n		texelCoord = vertexPosition;\n		gl_Position = vec4(vertexPosition*2.0 - vec2(1.0, 1.0), 0.0, 1.0 );\n	}\n\n\n\n\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nvarying vec2 texelCoord;\n\nuniform float dt;\n	uniform sampler2D particleData;\n\nuniform float dragCoefficient;\n	uniform vec2 flowScale;\n	uniform sampler2D flowVelocityField;\n	void main() {\n		vec2 p = texture2D(particleData, texelCoord).xy;\n		vec2 v = texture2D(particleData, texelCoord).zw;\n		vec2 vf = texture2D(flowVelocityField, (p+1.)*.5).xy * flowScale;\n		v += (vf - v) * dragCoefficient;\n		p+=dt*v;\n		gl_FragColor = vec4(p, v);\n	}\n"},__class__:R});var D=function(){};D.__name__=!0,D.substr=function(e,t,n){if(null==n)n=e.length;else if(n<0){if(0!=t)return"";n=e.length+n}return e.substr(t,n)},D.remove=function(e,t){var n=e.indexOf(t);return -1!=n&&(e.splice(n,1),!0)},D.now=function(){return Date.now()};var B=function(){};B.__name__=!0,B.fold=function(e,t,n){for(var r=e instanceof Array?new en(e):e.iterator();r.hasNext();)n=t(r.next(),n);return n};var M=e.LumaFluid=function(e){this.eventHandlers=new ee;var n=this,r=window.devicePixelRatio;this.canvas=window.document.createElement("canvas");var i=window.innerWidth*r|0;this.canvas.width=i,i=window.innerHeight*r|0,this.canvas.height=i,this.canvas.style.width="100%",this.canvas.style.height="100%",this.canvas.addEventListener("webglcontextlost",function(e){window.location.reload()}),this.canvas.addEventListener("webglcontextrestored",function(e){t.console.log("webglcontextrestored")}),this.canvas.setAttribute("touch-action","none");var a=null!=new URL(window.location.href).searchParams.get("webgl1"),o=this.canvas.getContext(a?"webgl":"webgl2",{antialias:!1,stencil:!1,depth:!1,alpha:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,powerPreference:"high-performance"});if(o.clearColor(0,0,0,1),o.clear(o.COLOR_BUFFER_BIT),o.canvas.addEventListener("webglcontextlost",function(e){}),o.canvas.addEventListener("webglcontextrestored",function(e){}),null==o)throw Q.thrown("WebGL not supported");this.fluid=new s(o,o.drawingBufferWidth,o.drawingBufferHeight,e);var l=null;(l=function(e){if(null!=n.canvas.parentElement){var t=n.canvas.parentElement.clientWidth*r|0,i=n.canvas.parentElement.clientHeight*r|0;n.canvas.width==t&&n.canvas.height==i||(n.canvas.width=t,n.canvas.height=i,n.fluid.resize(t,i))}var a=window.performance.now();n.fluid.onFrame(a),n.frameLoopHandle=window.requestAnimationFrame(l)})(0),this.canvas.addEventListener("gesturestart",function(e){e.preventDefault(),e.stopPropagation()},!1),this.canvas.addEventListener("gesturechange",function(e){e.preventDefault(),e.stopPropagation()},!1),this.canvas.addEventListener("scroll",function(e){e.preventDefault(),e.stopPropagation()}),window.addEventListener("keyup",function(e){return n.fluid.onKeyUp(e.keyCode)});var c=function(e,t){var i=e.force,a=null!=i?i:e.webkitForce,s=n.canvas.getBoundingClientRect(),l=(e.clientX-s.left)/s.width,c=(e.clientY-s.top)/s.height;t(-1,0,l*o.drawingBufferWidth,c*o.drawingBufferHeight,e.buttons,e.button,null!=a?Math.max(a-1,0):.5,50*r,0,0,0)},u=function(e,t,i){1==i&&e.preventDefault();for(var a=n.canvas.getBoundingClientRect(),s=0,l=e.changedTouches.length;s<l;){var c=e.changedTouches[s++],u=(c.clientX-a.left)/a.width,d=(c.clientY-a.top)/a.height,h=u*o.drawingBufferWidth,p=d*o.drawingBufferHeight;t(c.identifier,1,h,p,1,0,c.force,c.radiusX*r,c.rotationAngle,c.altitudeAngle,c.azimuthAngle)}},d=function(e){c(e,eD(eA=n.fluid,eA.onPointerChange))},h=function(e,t,r,i){Object.prototype.hasOwnProperty.call(n.eventHandlers.h,t)?n.eventHandlers.h[t].push({handler:r,options:i}):n.eventHandlers.h[t]=[{handler:r,options:i}],e.addEventListener(t,r,i)};h(this.canvas,"mousedown",function(e){c(e,eD(eA=n.fluid,eA.onPointerDown))}),h(window,"mousemove",d),h(window,"webkitmouseforcechanged",d),h(this.canvas,"touchstart",function(e){u(e,eD(eA=n.fluid,eA.onPointerDown),!0)},{capture:!0,passive:!1}),h(window,"touchmove",function(e){u(e,eD(eA=n.fluid,eA.onPointerChange),!0)},{capture:!0,passive:!1}),h(window,"touchforcechange",function(e){u(e,eD(eA=n.fluid,eA.onPointerChange),!1)},{capture:!0,passive:!0}),h(window,"touchend",function(e){u(e,eD(eA=n.fluid,eA.onPointerUp),!1)},{capture:!0,passive:!0}),h(window,"touchcancel",function(e){u(e,eD(eA=n.fluid,eA.onPointerUp),!1)},{capture:!0,passive:!0});var p=null;p=function(e){window.removeEventListener("mousemove",p),c(e,eD(eA=n.fluid,eA.onPointerDown))},window.addEventListener("mousemove",p)};M.__name__=!0,M.prototype={dispose:function(){window.cancelAnimationFrame(this.frameLoopHandle);for(var e=this.eventHandlers.h,t=Object.keys(e),n=t.length,r=0;r<n;)for(var i=t[r++],a=e[i],o=0;o<a.length;){var s=a[o];++o,this.canvas.removeEventListener(i,s.handler,s.options),window.removeEventListener(i,s.handler,s.options)}},__class__:M},Math.__name__=!0;var O=function(){};O.__name__=!0,O.field=function(e,t){try{return e[t]}catch(e){return null}};var E=function(){this.powerOf2Fluid=!0,this.simulationScale=.25,this.fluidScale=1.5,this.fluidIterations=8,this.gamma=2.1,this.gradientBackground=.1,this.bevelCurveRadius=5,this.innerDarkening=.7,this.chromaticAberration=.15,this.refraction=.21,this.backgroundMultiplier=1,this.periodicBoundary=!0,this.dragSpeed=3,this.dragCoefficient=.8,this.motionDecayFactor=0,this.surfaceDecayFactor=2,this.timestepMultiplier=1,this.fluidPhysicsScale=20,this.paused=!1,this.version=1};E.__name__=!0,E.prototype={setChangeCallbacks:function(e){this.onChangeVersion=e.onChangeVersion,this.onChangePaused=e.onChangePaused,this.onChangeFluidPhysicsScale=e.onChangeFluidPhysicsScale,this.onChangeTimestepMultiplier=e.onChangeTimestepMultiplier,this.onChangeSurfaceDecayFactor=e.onChangeSurfaceDecayFactor,this.onChangeMotionDecayFactor=e.onChangeMotionDecayFactor,this.onChangeDragCoefficient=e.onChangeDragCoefficient,this.onChangeDragSpeed=e.onChangeDragSpeed,this.onChangePeriodicBoundary=e.onChangePeriodicBoundary,this.onChangeBackgroundMultiplier=e.onChangeBackgroundMultiplier,this.onChangeRefraction=e.onChangeRefraction,this.onChangeChromaticAberration=e.onChangeChromaticAberration,this.onChangeInnerDarkening=e.onChangeInnerDarkening,this.onChangeBevelCurveRadius=e.onChangeBevelCurveRadius,this.onChangeGradientBackground=e.onChangeGradientBackground,this.onChangeGamma=e.onChangeGamma,this.onChangeFluidIterations=e.onChangeFluidIterations,this.onChangeFluidScale=e.onChangeFluidScale,this.onChangeSimulationScale=e.onChangeSimulationScale,this.onChangePowerOf2Fluid=e.onChangePowerOf2Fluid},setFromDynamic:function(e){if(Object.prototype.hasOwnProperty.call(e,"version")){var t=O.field(e,"version"),n=this.version;this.version=t,null!=this.onChangeVersion&&n!=t&&(this.onChangeVersion(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("version",t,n))}Object.prototype.hasOwnProperty.call(e,"paused")&&(t=O.field(e,"paused"),n=this.paused,this.paused=t,null!=this.onChangePaused&&n!=t&&(this.onChangePaused(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("paused",t,n))),Object.prototype.hasOwnProperty.call(e,"fluidPhysicsScale")&&(t=O.field(e,"fluidPhysicsScale"),n=this.fluidPhysicsScale,this.fluidPhysicsScale=t,null!=this.onChangeFluidPhysicsScale&&n!=t&&(this.onChangeFluidPhysicsScale(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("fluidPhysicsScale",t,n))),Object.prototype.hasOwnProperty.call(e,"timestepMultiplier")&&(t=O.field(e,"timestepMultiplier"),n=this.timestepMultiplier,this.timestepMultiplier=t,null!=this.onChangeTimestepMultiplier&&n!=t&&(this.onChangeTimestepMultiplier(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("timestepMultiplier",t,n))),Object.prototype.hasOwnProperty.call(e,"surfaceDecayFactor")&&(t=O.field(e,"surfaceDecayFactor"),n=this.surfaceDecayFactor,this.surfaceDecayFactor=t,null!=this.onChangeSurfaceDecayFactor&&n!=t&&(this.onChangeSurfaceDecayFactor(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("surfaceDecayFactor",t,n))),Object.prototype.hasOwnProperty.call(e,"motionDecayFactor")&&(t=O.field(e,"motionDecayFactor"),n=this.motionDecayFactor,this.motionDecayFactor=t,null!=this.onChangeMotionDecayFactor&&n!=t&&(this.onChangeMotionDecayFactor(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("motionDecayFactor",t,n))),Object.prototype.hasOwnProperty.call(e,"dragCoefficient")&&(t=O.field(e,"dragCoefficient"),n=this.dragCoefficient,this.dragCoefficient=t,null!=this.onChangeDragCoefficient&&n!=t&&(this.onChangeDragCoefficient(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("dragCoefficient",t,n))),Object.prototype.hasOwnProperty.call(e,"dragSpeed")&&(t=O.field(e,"dragSpeed"),n=this.dragSpeed,this.dragSpeed=t,null!=this.onChangeDragSpeed&&n!=t&&(this.onChangeDragSpeed(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("dragSpeed",t,n))),Object.prototype.hasOwnProperty.call(e,"periodicBoundary")&&(t=O.field(e,"periodicBoundary"),n=this.periodicBoundary,this.periodicBoundary=t,null!=this.onChangePeriodicBoundary&&n!=t&&(this.onChangePeriodicBoundary(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("periodicBoundary",t,n))),Object.prototype.hasOwnProperty.call(e,"backgroundMultiplier")&&(t=O.field(e,"backgroundMultiplier"),n=this.backgroundMultiplier,this.backgroundMultiplier=t,null!=this.onChangeBackgroundMultiplier&&n!=t&&(this.onChangeBackgroundMultiplier(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("backgroundMultiplier",t,n))),Object.prototype.hasOwnProperty.call(e,"refraction")&&(t=O.field(e,"refraction"),n=this.refraction,this.refraction=t,null!=this.onChangeRefraction&&n!=t&&(this.onChangeRefraction(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("refraction",t,n))),Object.prototype.hasOwnProperty.call(e,"chromaticAberration")&&(t=O.field(e,"chromaticAberration"),n=this.chromaticAberration,this.chromaticAberration=t,null!=this.onChangeChromaticAberration&&n!=t&&(this.onChangeChromaticAberration(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("chromaticAberration",t,n))),Object.prototype.hasOwnProperty.call(e,"innerDarkening")&&(t=O.field(e,"innerDarkening"),n=this.innerDarkening,this.innerDarkening=t,null!=this.onChangeInnerDarkening&&n!=t&&(this.onChangeInnerDarkening(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("innerDarkening",t,n))),Object.prototype.hasOwnProperty.call(e,"bevelCurveRadius")&&(t=O.field(e,"bevelCurveRadius"),n=this.bevelCurveRadius,this.bevelCurveRadius=t,null!=this.onChangeBevelCurveRadius&&n!=t&&(this.onChangeBevelCurveRadius(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("bevelCurveRadius",t,n))),Object.prototype.hasOwnProperty.call(e,"gradientBackground")&&(t=O.field(e,"gradientBackground"),n=this.gradientBackground,this.gradientBackground=t,null!=this.onChangeGradientBackground&&n!=t&&(this.onChangeGradientBackground(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("gradientBackground",t,n))),Object.prototype.hasOwnProperty.call(e,"gamma")&&(t=O.field(e,"gamma"),n=this.gamma,this.gamma=t,null!=this.onChangeGamma&&n!=t&&(this.onChangeGamma(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("gamma",t,n))),Object.prototype.hasOwnProperty.call(e,"fluidIterations")&&(t=O.field(e,"fluidIterations"),n=this.fluidIterations,this.fluidIterations=t,null!=this.onChangeFluidIterations&&n!=t&&(this.onChangeFluidIterations(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("fluidIterations",t,n))),Object.prototype.hasOwnProperty.call(e,"fluidScale")&&(t=O.field(e,"fluidScale"),n=this.fluidScale,this.fluidScale=t,null!=this.onChangeFluidScale&&n!=t&&(this.onChangeFluidScale(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("fluidScale",t,n))),Object.prototype.hasOwnProperty.call(e,"simulationScale")&&(t=O.field(e,"simulationScale"),n=this.simulationScale,this.simulationScale=t,null!=this.onChangeSimulationScale&&n!=t&&(this.onChangeSimulationScale(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("simulationScale",t,n))),Object.prototype.hasOwnProperty.call(e,"powerOf2Fluid")&&(t=O.field(e,"powerOf2Fluid"),n=this.powerOf2Fluid,this.powerOf2Fluid=t,null!=this.onChangePowerOf2Fluid&&n!=t&&(this.onChangePowerOf2Fluid(t,n),null!=this.onAnyFieldChange&&this.onAnyFieldChange("powerOf2Fluid",t,n)))},__class__:E};var k=function(e,t,n,r,i,a){this.shaderMap=new ee,this.nullTexture=null,this.resample=null,this.screenTriangle=null,this.unitQuad=null,this.gl=null,null!=e&&(this.gl=e),null!=t&&(this.unitQuad=t),null!=n&&(this.screenTriangle=n),null!=r&&(this.resample=r),null!=i&&(this.nullTexture=i),null!=a&&(this.shaderMap=a)};k.__name__=!0,k.prototype={__class__:k};var L=function(){};L.__name__=!0,L.getScreenTriangle=function(e){var t=L.resources;if(null==t.screenTriangle){var n=new Float32Array([0,0,2,0,0,2]);t.screenTriangle=e.createBuffer(),e.bindBuffer(34962,t.screenTriangle),e.bufferData(34962,n,35044),e.bindBuffer(34962,null)}return t.screenTriangle},L.getResampleShader=function(e){var t=L.resources;return null==t.resample&&(t.resample=new eR(e)),t.resample},L.getNullTexture=function(e){var t=L.resources;return null==t.nullTexture&&(t.nullTexture=z.createTexture(e,1,1,new V(null,null,null,null,null,null,null),new Uint8Array([0,0,0,0]),null,!1)),t.nullTexture},L.getShaderWithKey=function(e,t,n){var r=L.resources.shaderMap,i=r.h[t];return null==i&&(i=n(e,t),r.h[t]=i),i},L.releaseGPUMemory=function(e){var t=L.resources;null!=t.unitQuad&&(e.deleteBuffer(t.unitQuad),t.unitQuad=null),null!=t.screenTriangle&&(e.deleteBuffer(t.screenTriangle),t.screenTriangle=null),null!=t.resample&&(t.resample.destroy(),t.resample=null);for(var n=t.shaderMap.h,r=Object.keys(n),i=r.length,a=0;a<i;)n[r[a++]].destroy()};var j=function(){};j.__name__=!0,j.string=function(e){return er.__string_rec(e,"")},j.parseInt=function(e){var t=parseInt(e);return isNaN(t)?null:t};var V=function(e,t,n,r,i,a,o){this.wrapT=33071,this.wrapS=33071,this.minFilter=9728,this.magFilter=9728,this.dataType=5121,this.internalFormat=null,this.format=6408,null!=e&&(this.format=e),null!=t&&(this.internalFormat=t),null!=n&&(this.dataType=n),null!=r&&(this.magFilter=r),null!=i&&(this.minFilter=i),null!=a&&(this.wrapS=a),null!=o&&(this.wrapT=o)};V.__name__=!0,V.prototype={match:function(e){return this.format==e.format&&this.internalFormat==e.internalFormat&&this.dataType==e.dataType&&this.magFilter==e.magFilter&&this.minFilter==e.minFilter&&this.wrapS==e.wrapS&&this.wrapT==e.wrapT},__class__:V};var z=function(e,t,n,r,i,a,o,s,l,c,u){V.call(this,i,a,o,s,l,c,u),this.gl=e,this.width=t,this.height=n,this.native=r};z.__name__=!0,z.createTextureFromImage=function(e,t,n,r,i){if(null==n&&(n=new V(null,null,null,null,null,null,null)),null==r&&(r=new I(null,null)),null==i)switch(n.minFilter){case 9984:case 9985:case 9986:case 9987:i=!0;break;default:i=!1}var a=e.createTexture();return e.activeTexture(33984),e.bindTexture(3553,a),e.texParameteri(3553,10241,n.minFilter),e.texParameteri(3553,10240,n.magFilter),e.texParameteri(3553,10242,n.wrapS),e.texParameteri(3553,10243,n.wrapT),e.pixelStorei(3317,r.unpackAlignment),e.pixelStorei(37440,r.webGLFlipY),e.texImage2D(3553,0,null==n.internalFormat?n.format:n.internalFormat,n.format,n.dataType,t),i&&e.generateMipmap(3553),e.bindTexture(3553,null),new z(e,t.width,t.height,a,n.format,n.internalFormat,n.dataType,n.magFilter,n.minFilter,n.wrapS,n.wrapT)},z.createTexture=function(e,t,n,r,i,a,o){if(null==r&&(r=new V(null,null,null,null,null,null,null)),null==a&&(a=new I(null,null)),null==o)switch(r.minFilter){case 9984:case 9985:case 9986:case 9987:o=!0;break;default:o=!1}null==i&&(i=null);var s=e.createTexture();return e.activeTexture(33984),e.bindTexture(3553,s),e.texParameteri(3553,10241,r.minFilter),e.texParameteri(3553,10240,r.magFilter),e.texParameteri(3553,10242,r.wrapS),e.texParameteri(3553,10243,r.wrapT),e.pixelStorei(3317,a.unpackAlignment),e.pixelStorei(37440,a.webGLFlipY),e.texImage2D(3553,0,null==r.internalFormat?r.format:r.internalFormat,t,n,0,r.format,r.dataType,i),o&&e.generateMipmap(3553),e.bindTexture(3553,null),new z(e,t,n,s,r.format,r.internalFormat,r.dataType,r.magFilter,r.minFilter,r.wrapS,r.wrapT)},z.updateGLTextureParameters=function(e,t,n){e.activeTexture(33984),e.bindTexture(3553,t),null!=n.magFilter&&e.texParameteri(3553,10241,n.minFilter),null!=n.minFilter&&e.texParameteri(3553,10240,n.magFilter),null!=n.wrapS&&e.texParameteri(3553,10242,n.wrapS),null!=n.wrapT&&e.texParameteri(3553,10243,n.wrapT),e.bindTexture(3553,null)},z.__super__=V,z.prototype=n(V.prototype,{__class__:z});var I=function(e,t){this.webGLFlipY=!0,this.unpackAlignment=4,null!=e&&(this.unpackAlignment=e),null!=t&&(this.webGLFlipY=t)};I.__name__=!0,I.prototype={__class__:I};var U=function(e,t,n,r){this.wrapT=null,this.wrapS=null,this.minFilter=null,this.magFilter=null,null!=e&&(this.magFilter=e),null!=t&&(this.minFilter=t),null!=n&&(this.wrapS=n),null!=r&&(this.wrapT=r)};U.__name__=!0,U.prototype={__class__:U};var G=function(){};G.__name__=!0,G.__isInterface__=!0;var N=function(e,t,n){null==n&&(n=128),null==t&&(t=.08),this.gl=e,this.blurKernelNormalized=t,this.downsampleSize=n,this.screenTriangle=L.getScreenTriangle(e)};N.__name__=!0,N.__interfaces__=[G],N.prototype={releaseGPUMemory:function(){null!=this.downsampleChain&&this.downsampleChain.releaseGPUMemory(),null!=this.blur&&this.blur.releaseGPUMemory()},__class__:N};var H=function(e,t,n){this.blurIntermediateXY=new X,this.blurIntermediateX=new X,this.gl=e,this.kernelX=t,this.kernelY=n,this.blurShaderX=L.getShaderWithKey(e,"blurX(k"+t+")",function(e,n){return new W(e,new Float32Array([1,0]),t)}),this.blurShaderY=L.getShaderWithKey(e,"blurY(k"+n+")",function(e,t){return new W(e,new Float32Array([0,1]),n)}),this.screenTriangle=L.getScreenTriangle(e)};H.__name__=!0,H.__interfaces__=[G],H.prototype={apply:function(e,t,n){null==n&&(n=e);var r,i,a,o=e.width,s=e.height,l=this.blurIntermediateX.get(this.gl,o,s,n),c=this.blurIntermediateXY.get(this.gl,o,s,n);if(this.gl.viewport(0,0,l.width,l.height),l.gl.bindFramebuffer(36160,l.frameBufferObject),this.gl.bindBuffer(34962,this.screenTriangle),(a=this.blurShaderX.texture).dirty=!0,a.data=e.native,this.blurShaderX.invResolution.data[0]=1/e.width,this.blurShaderX.invResolution.data[1]=1/e.height,this.blurShaderX.invResolution.dirty=!0,(a=this.blurShaderX)._active){for(var u=0,d=a._uniforms;u<d.length;){var h=d[u];++u,(h.dirty||h.alwaysDirty)&&h.apply()}var p=0;for(u=0,d=a._attributes.length;u<d;)-1!=(i=(r=a._attributes[u++]).location)&&(a.gl.enableVertexAttribArray(i),a.gl.vertexAttribPointer(i,r.itemCount,r.type,!1,a._aStride,p)),p+=r.byteSize}else{for(a._ready||a.create(),a.gl.useProgram(a._prog),u=0,d=a._uniforms;u<d.length;)h=d[u],++u,(h.dirty||h.alwaysDirty)&&h.apply();for(p=0,u=0,d=a._attributes.length;u<d;)-1!=(i=(r=a._attributes[u++]).location)&&(a.gl.enableVertexAttribArray(i),a.gl.vertexAttribPointer(i,r.itemCount,r.type,!1,a._aStride,p)),p+=r.byteSize;a._active=!0}if(this.gl.drawArrays(4,0,3),this.blurShaderX.deactivate(),c.gl.bindFramebuffer(36160,c.frameBufferObject),this.gl.bindBuffer(34962,this.screenTriangle),(a=this.blurShaderY.texture).dirty=!0,a.data=l.texture.native,this.blurShaderY.invResolution.data[0]=1/e.width,this.blurShaderY.invResolution.data[1]=1/e.height,this.blurShaderY.invResolution.dirty=!0,(a=this.blurShaderY)._active){for(u=0,d=a._uniforms;u<d.length;)h=d[u],++u,(h.dirty||h.alwaysDirty)&&h.apply();for(p=0,u=0,d=a._attributes.length;u<d;)-1!=(i=(r=a._attributes[u++]).location)&&(a.gl.enableVertexAttribArray(i),a.gl.vertexAttribPointer(i,r.itemCount,r.type,!1,a._aStride,p)),p+=r.byteSize}else{for(a._ready||a.create(),a.gl.useProgram(a._prog),u=0,d=a._uniforms;u<d.length;)h=d[u],++u,(h.dirty||h.alwaysDirty)&&h.apply();for(p=0,u=0,d=a._attributes.length;u<d;)-1!=(i=(r=a._attributes[u++]).location)&&(a.gl.enableVertexAttribArray(i),a.gl.vertexAttribPointer(i,r.itemCount,r.type,!1,a._aStride,p)),p+=r.byteSize;a._active=!0}return this.gl.drawArrays(4,0,3),this.blurShaderY.deactivate(),c.texture},releaseGPUMemory:function(){null!=this.blurIntermediateX&&this.blurIntermediateX.destroy(),null!=this.blurIntermediateXY&&this.blurIntermediateXY.destroy()},__class__:H};var W=function(e,t,n){this.gl=e,this.kernel=n,this.direction=t,this.shaderParts=this.generateShaderParts(),c.call(this,e)};W.__name__=!0,W.__super__=c,W.prototype=n(c.prototype,{generateShaderParts:function(){for(var e=this.nearestBestKernel(this.kernel),t=(e-1)/2,n=[],r=[],i=0,a=0;a<e;){var o=a++,s=this.gaussianWeight(o/(e-1)*2-1);n[o]=o-t,r[o]=s,i+=s}a=0;for(var l=r.length;a<l;)r[a++]/=i;var c=[],u=[],d=[];for(o=0;o<=t;){var h=0|Math.min(o+1,Math.floor(t));if(o==h)d.push({o:n[o],w:r[o]});else{var p=r[o]+r[h]*(h==t?.5:1),f=n[o]+1/(1+r[o]/r[h]);0==f?(d.push({o:n[o],w:r[o]}),d.push({o:n[o+1],w:r[o+1]})):(d.push({o:f,w:p}),d.push({o:-f,w:p}))}o+=2}for(a=0,l=d.length;a<l;)u[o=a++]=d[o].o,c[o]=d[o].w;var g=u.length;for(a=[],l=0;l<g;)a.push("varying vec2 sampleCoord"+l+++";");l=[];for(var m=0;m<g;)o=m++,l.push("sampleCoord"+o+" = texelCoord + vec2("+this.glslFloat(u[o]*this.direction[0])+", "+this.glslFloat(u[o]*this.direction[1])+") * invResolution;");m=[];for(var v=0;v<g;)o=v++,m.push("blend += texture2D(texture, sampleCoord"+o+") * "+this.glslFloat(c[o])+";");return{varyingDeclarations:a,varyingValues:l,textureSamples:m}},nearestBestKernel:function(e){var t,n=Math.round(e);return n%2!=0&&Math.floor(n/2)%2==0&&n>0?0|Math.max(n,3):(t=n-1)%2!=0&&Math.floor(t/2)%2==0&&t>0||(t=n+1)%2!=0&&Math.floor(t/2)%2==0&&t>0||(t=n-2)%2!=0&&Math.floor(t/2)%2==0&&t>0||(t=n+2)%2!=0&&Math.floor(t/2)%2==0&&t>0?0|Math.max(t,3):0|Math.max(n,3)},gaussianWeight:function(e){return 1/(.3333333333333333*Math.sqrt(2*Math.PI))*Math.exp(-e*e/.2222222222222222)},glslFloat:function(e){var t=null==e?"null":""+e;return -1==t.indexOf(".")&&(t+="."),t},createProperties:function(){c.prototype.createProperties.call(this);var e=new eP(this.gl,"invResolution",null);this.invResolution=e,this._uniforms.push(e),e=new eS(this.gl,"texture",null,!1),this.texture=e,this._uniforms.push(e),e=new ec("vertexPosition",0,2),this.vertexPosition=e,this._attributes.push(e),this._aStride+=8},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nattribute vec2 vertexPosition;\n    uniform vec2 invResolution;\n    \n"+this.shaderParts.varyingDeclarations.join("\n")+"\n    void main() {\n        vec2 texelCoord = vertexPosition;\n        \n"+this.shaderParts.varyingValues.join("\n")+"\n        vec2 clipSpace = 2.0*texelCoord - 1.0;	\n        gl_Position = vec4(clipSpace, 0.0, 1.);\n    }\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform sampler2D texture;\n    \n"+this.shaderParts.varyingDeclarations.join("\n")+"\n    void main() {\n        vec4 blend = vec4(0.0);\n        \n"+this.shaderParts.textureSamples.join("\n")+";\n        gl_FragColor = blend;\n    }\n"},__class__:W});var Y=function(e){this.intermediate=new X,this.gl=e,this.resampleShader=L.getResampleShader(e),this.screenTriangle=L.getScreenTriangle(e)};Y.__name__=!0,Y.__interfaces__=[G],Y.prototype={apply:function(e,t,n){null==n&&(n=e);var r,i,a,o=this.intermediate.get(this.gl,.5*e.width|0,.5*e.height|0,n);if(o.gl.bindFramebuffer(36160,o.frameBufferObject),this.gl.viewport(0,0,o.width,o.height),this.gl.bindBuffer(34962,this.screenTriangle),(a=this.resampleShader.texture).dirty=!0,a.data=e.native,(a=this.resampleShader)._active){for(var s=0,l=a._uniforms;s<l.length;){var c=l[s];++s,(c.dirty||c.alwaysDirty)&&c.apply()}var u=0;for(s=0,l=a._attributes.length;s<l;)-1!=(i=(r=a._attributes[s++]).location)&&(a.gl.enableVertexAttribArray(i),a.gl.vertexAttribPointer(i,r.itemCount,r.type,!1,a._aStride,u)),u+=r.byteSize}else{for(a._ready||a.create(),a.gl.useProgram(a._prog),s=0,l=a._uniforms;s<l.length;)c=l[s],++s,(c.dirty||c.alwaysDirty)&&c.apply();for(u=0,s=0,l=a._attributes.length;s<l;)-1!=(i=(r=a._attributes[s++]).location)&&(a.gl.enableVertexAttribArray(i),a.gl.vertexAttribPointer(i,r.itemCount,r.type,!1,a._aStride,u)),u+=r.byteSize;a._active=!0}return this.gl.drawArrays(4,0,3),this.resampleShader.deactivate(),o.texture},releaseGPUMemory:function(){null!=this.intermediate&&this.intermediate.destroy()},__class__:Y};var q=function(e,t){this.gl=e,this.count=t;for(var n=[],r=0;r<t;)++r,n.push(new Y(e));this.downsampleFilters=n};q.__name__=!0,q.prototype={apply:function(e){for(var t=e,n=0,r=this.count;n<r;)t=this.downsampleFilters[n++].apply(t);return t},releaseGPUMemory:function(){for(var e=0,t=this.downsampleFilters;e<t.length;)t[e++].releaseGPUMemory()},__class__:q};var X=function(){};X.__name__=!0,X.prototype={get:function(e,t,n,r){if(null!=this._currentTarget&&(t!=this._currentTarget.width||n!=this._currentTarget.height||!r.match(this._currentTarget.textureParameters))){var i=this._currentTarget;i.gl.deleteFramebuffer(i.frameBufferObject),i.gl.deleteTexture(i.texture.native),this._currentTarget=null}return null==this._currentTarget&&(this._currentTarget=new eo(e,t,n,r)),this._currentTarget},destroy:function(){if(null!=this._currentTarget){var e=this._currentTarget;e.gl.deleteFramebuffer(e.frameBufferObject),e.gl.deleteTexture(e.texture.native)}},__class__:X};var K=function(){};K.__name__=!0,K.__isInterface__=!0,K.prototype={__class__:K};var Q=function(e,t,n){Error.call(this,e),this.message=e,this.__previousException=t,this.__nativeException=null!=n?n:this};Q.__name__=!0,Q.caught=function(e){return e instanceof Q?e:e instanceof Error?new Q(e.message,null,e):new J(e,null,e)},Q.thrown=function(e){return e instanceof Q?e.get_native():e instanceof Error?e:new J(e)},Q.__super__=Error,Q.prototype=n(Error.prototype,{unwrap:function(){return this.__nativeException},get_native:function(){return this.__nativeException},__class__:Q});var Z=function(){};Z.__name__=!0,Z.formatOutput=function(e,t){var n=j.string(e);if(null==t)return n;var r=t.fileName+":"+t.lineNumber;if(null!=t.customParams)for(var i=0,a=t.customParams;i<a.length;)n+=", "+j.string(a[i++]);return r+": "+n},Z.trace=function(e,t){var n=Z.formatOutput(e,t);"undefined"!=typeof console&&null!=console.log&&console.log(n)};var J=function(e,t,n){Q.call(this,String(e),t,n),this.value=e};J.__name__=!0,J.__super__=Q,J.prototype=n(Q.prototype,{unwrap:function(){return this.value},__class__:J});var $=function(){this.h={}};$.__name__=!0,$.__interfaces__=[K],$.prototype={get:function(e){return this.h[e]},remove:function(e){return!!this.h.hasOwnProperty(e)&&(delete this.h[e],!0)},keys:function(){var e=[];for(var t in this.h)this.h.hasOwnProperty(t)&&e.push(+t);return new en(e)},__class__:$};var ee=function(){this.h=Object.create(null)};ee.__name__=!0,ee.__interfaces__=[K],ee.prototype={get:function(e){return this.h[e]},keys:function(){return new et(this.h)},__class__:ee};var et=function(e){this.h=e,this.keys=Object.keys(e),this.length=this.keys.length,this.current=0};et.__name__=!0,et.prototype={hasNext:function(){return this.current<this.length},next:function(){return this.keys[this.current++]},__class__:et};var en=function(e){this.current=0,this.array=e};en.__name__=!0,en.prototype={hasNext:function(){return this.current<this.array.length},next:function(){return this.array[this.current++]},__class__:en};var er=function(){};er.__name__=!0,er.getClass=function(e){if(null==e)return null;if(e instanceof Array)return Array;var t=e.__class__;if(null!=t)return t;var n=er.__nativeClassName(e);return null!=n?er.__resolveNativeClass(n):null},er.__string_rec=function(e,t){if(null==e)return"null";if(t.length>=5)return"<...>";var n=typeof e;switch("function"==n&&(e.__name__||e.__ename__)&&(n="object"),n){case"function":return"<function>";case"object":if(e instanceof Array){var r,i="[";t+="	";for(var a=0,o=e.length;a<o;){var s=a++;i+=(s>0?",":"")+er.__string_rec(e[s],t)}return i+"]"}try{r=e.toString}catch(e){return"???"}if(null!=r&&r!=Object.toString&&"function"==typeof r){var l=e.toString();if("[object Object]"!=l)return l}i="{\n",t+="	";var c=null!=e.hasOwnProperty,u=null;for(u in e)c&&!e.hasOwnProperty(u)||"prototype"!=u&&"__class__"!=u&&"__super__"!=u&&"__interfaces__"!=u&&"__properties__"!=u&&(2!=i.length&&(i+=", \n"),i+=t+u+" : "+er.__string_rec(e[u],t));return i+"\n"+(t=t.substring(1))+"}";case"string":return e;default:return String(e)}},er.__interfLoop=function(e,t){for(;;){if(null==e)return!1;if(e==t)return!0;var n=e.__interfaces__;if(null!=n)for(var r=0,i=n.length;r<i;){var a=n[r++];if(a==t||er.__interfLoop(a,t))return!0}e=e.__super__}},er.__instanceof=function(e,t){if(null==t)return!1;switch(t){case Array:return e instanceof Array;case eE:return"boolean"==typeof e;case eM:return null!=e;case eO:return"number"==typeof e;case eB:return"number"==typeof e&&(0|e)===e;case String:return"string"==typeof e;default:if(null==e)return!1;if("function"==typeof t){if(er.__downcastCheck(e,t))return!0}else if("object"==typeof t&&er.__isNativeObj(t)&&e instanceof t)return!0;return t==ek&&null!=e.__name__||t==eL&&null!=e.__ename__}},er.__downcastCheck=function(e,t){return e instanceof t||!!t.__isInterface__&&er.__interfLoop(er.getClass(e),t)},er.__cast=function(e,t){if(null==e||er.__instanceof(e,t))return e;throw Q.thrown("Cannot cast "+j.string(e)+" to "+j.string(t))},er.__nativeClassName=function(e){var t=er.__toStr.call(e).slice(8,-1);return"Object"==t||"Function"==t||"Math"==t||"JSON"==t?null:t},er.__isNativeObj=function(e){return null!=er.__nativeClassName(e)},er.__resolveNativeClass=function(e){return t[e]};var ei=function(){};ei.__name__=!0,ei.floorPowerOf2=function(e){var t=Math.floor(e);return t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,(t|=t>>16)-(t>>1)},ei.log2=function(e){return 1.4426950408889634*Math.log(e)};var ea=function(){};ea.__name__=!0,ea.__isInterface__=!0,ea.prototype={__class__:ea};var eo=function(e,t,n,r,i){this.gl=e,this.width=t,this.height=n,this.textureParameters=r,this.textureFactory=i,this.frameBufferObject=e.createFramebuffer();var a=this.createEmptyTexture(t,n);if(this.gl.bindFramebuffer(36160,this.frameBufferObject),this.gl.framebufferTexture2D(36160,36064,3553,a.native,0),null!=this.texture){var o,s,l=L.getResampleShader(this.gl),c=l.texture;if(c.dirty=!0,c.data=this.texture.native,this.gl.bindFramebuffer(36160,this.frameBufferObject),this.gl.viewport(0,0,t,n),this.gl.bindBuffer(34962,L.getScreenTriangle(this.gl)),l._active){for(var u=0,d=l._uniforms;u<d.length;){var h=d[u];++u,(h.dirty||h.alwaysDirty)&&h.apply()}var p=0;for(u=0,d=l._attributes.length;u<d;)-1!=(s=(o=l._attributes[u++]).location)&&(l.gl.enableVertexAttribArray(s),l.gl.vertexAttribPointer(s,o.itemCount,o.type,!1,l._aStride,p)),p+=o.byteSize}else{for(l._ready||l.create(),l.gl.useProgram(l._prog),u=0,d=l._uniforms;u<d.length;)h=d[u],++u,(h.dirty||h.alwaysDirty)&&h.apply();for(p=0,u=0,d=l._attributes.length;u<d;)-1!=(s=(o=l._attributes[u++]).location)&&(l.gl.enableVertexAttribArray(s),l.gl.vertexAttribPointer(s,o.itemCount,o.type,!1,l._aStride,p)),p+=o.byteSize;l._active=!0}this.gl.drawArrays(4,0,3),l.deactivate(),this.gl.deleteTexture(this.texture.native)}else this.gl.bindFramebuffer(36160,this.frameBufferObject),this.gl.viewport(0,0,this.width,this.height),this.gl.clearColor(0,0,0,1),this.gl.clear(16384);this.width=t,this.height=n,this.texture=a};eo.__name__=!0,eo.__interfaces__=[ea],eo.prototype={updateTextureParameters:function(e){z.updateGLTextureParameters(this.gl,this.texture.native,e),null!=e.magFilter&&(this.textureParameters.magFilter=e.magFilter),null!=e.minFilter&&(this.textureParameters.minFilter=e.minFilter),null!=e.wrapS&&(this.textureParameters.wrapS=e.wrapS),null!=e.wrapT&&(this.textureParameters.wrapT=e.wrapT)},activate:function(){this.gl.bindFramebuffer(36160,this.frameBufferObject)},createEmptyTexture:function(e,t){return null!=this.textureFactory?this.textureFactory(this.gl,e,t):z.createTexture(this.gl,e,t,this.textureParameters,null)},__class__:eo};var es=function(e,t,n,r,i){this.gl=e,this.width=t,this.height=n,this.textureParameters=r,this.textureFactory=i,this.writeFrameBufferObject=e.createFramebuffer(),this.readFrameBufferObject=e.createFramebuffer(),this.resize(t,n)};es.__name__=!0,es.__interfaces__=[ea],es.prototype={resize:function(e,t){var n=this.createEmptyTexture(e,t),r=this.createEmptyTexture(e,t);if(this.gl.bindFramebuffer(36160,this.writeFrameBufferObject),this.gl.framebufferTexture2D(36160,36064,3553,n.native,0),this.gl.bindFramebuffer(36160,this.readFrameBufferObject),this.gl.framebufferTexture2D(36160,36064,3553,r.native,0),null!=this.readFromTexture){var i,a,o=L.getResampleShader(this.gl),s=o.texture;if(s.dirty=!0,s.data=this.readFromTexture.native,this.gl.bindFramebuffer(36160,this.readFrameBufferObject),this.gl.viewport(0,0,e,t),this.gl.bindBuffer(34962,L.getScreenTriangle(this.gl)),o._active){for(var l=0,c=o._uniforms;l<c.length;){var u=c[l];++l,(u.dirty||u.alwaysDirty)&&u.apply()}var d=0;for(l=0,c=o._attributes.length;l<c;)-1!=(a=(i=o._attributes[l++]).location)&&(o.gl.enableVertexAttribArray(a),o.gl.vertexAttribPointer(a,i.itemCount,i.type,!1,o._aStride,d)),d+=i.byteSize}else{for(o._ready||o.create(),o.gl.useProgram(o._prog),l=0,c=o._uniforms;l<c.length;)u=c[l],++l,(u.dirty||u.alwaysDirty)&&u.apply();for(d=0,l=0,c=o._attributes.length;l<c;)-1!=(a=(i=o._attributes[l++]).location)&&(o.gl.enableVertexAttribArray(a),o.gl.vertexAttribPointer(a,i.itemCount,i.type,!1,o._aStride,d)),d+=i.byteSize;o._active=!0}this.gl.drawArrays(4,0,3),o.deactivate(),this.gl.deleteTexture(this.readFromTexture.native)}else this.gl.bindFramebuffer(36160,this.readFrameBufferObject),this.gl.viewport(0,0,this.width,this.height),this.gl.clearColor(0,0,0,1),this.gl.clear(16384);return null!=this.writeToTexture?this.gl.deleteTexture(this.writeToTexture.native):(this.gl.bindFramebuffer(36160,this.writeFrameBufferObject),this.gl.viewport(0,0,this.width,this.height),this.gl.clearColor(0,0,0,1),this.gl.clear(16384)),this.width=e,this.height=t,this.writeToTexture=n,this.readFromTexture=r,this},updateTextureParameters:function(e){z.updateGLTextureParameters(this.gl,this.readFromTexture.native,e),z.updateGLTextureParameters(this.gl,this.writeToTexture.native,e),null!=e.magFilter&&(this.textureParameters.magFilter=e.magFilter),null!=e.minFilter&&(this.textureParameters.minFilter=e.minFilter),null!=e.wrapS&&(this.textureParameters.wrapS=e.wrapS),null!=e.wrapT&&(this.textureParameters.wrapT=e.wrapT)},activate:function(){this.gl.bindFramebuffer(36160,this.writeFrameBufferObject)},createEmptyTexture:function(e,t){return null!=this.textureFactory?this.textureFactory(this.gl,e,t):z.createTexture(this.gl,e,t,this.textureParameters,null)},__class__:es};var el=function(){};el.__name__=!0,el.prototype={__class__:el};var ec=function(e,t,n){null==n&&(n=1),this.name=e,this.location=t,this.byteSize=4*n,this.itemCount=n,this.type=5126};ec.__name__=!0,ec.__super__=el,ec.prototype=n(el.prototype,{__class__:ec});var eu=function(){};eu.__name__=!0,eu.injectConstValue=function(e,t,n){for(var i=eu.STORAGE_QUALIFIER_TYPES.h.const,a=new r("const\\s+(("+eu.PRECISION_QUALIFIERS.join("|")+")\\s+)?("+i.join("|")+")\\s+([^;]+)","m"),o=eu.stripComments(e),s=o;a.match(s);){var l=a.matchedPos(),c=eu.bracketExplode(a.matched(0),"()"),u=B.fold(c.contents,function(e,t){return t+(e instanceof eh?e.toString():"")},""),d=new r("\\b("+t+")\\b\\s*=","m");if(d.match(u)){var h=d.matchedPos(),p=0;-1==(p=d.matchedRight().indexOf(","))&&(p=d.matchedRight().length);var f=h.pos+h.len+p,g=o.length-s.length+l.pos,m=eu.compressedToExploded(c,h.pos+h.len)+g,v=eu.compressedToExploded(c,f)+g;return o.substring(0,m)+n+o.substring(v)}s=a.matchedRight()}return null},eu.compressedToExploded=function(e,t){for(var n=0,r=0,i=0,a=e.contents.length;i<a;){var o=e.contents[i++],s=o.toString().length;if(o instanceof eh){if(n+s>t)break;n+=s}r+=s}return t-n+r},eu.stripComments=function(e){var t=RegExp("(/\\*([\\s\\S]*?)\\*/)|(//(.*)$)","igm".split("u").join(""));return e.replace(t,"")},eu.bracketExplode=function(e,t){if(2!=t.length)return null;for(var n,r=t.charAt(0),i=t.charAt(1),a=new ep,o=[],s=a,l=null,c=0,u=e.length;c<u;)if((n=e.charAt(c++))==r){var d=new ep(t);s.contents.push(d),o.push(s),s=d,l=d}else n==i?l=s=o.pop():(l instanceof eh||(l=new eh,s.contents.push(l)),er.__cast(l,eh).contents+=n);return a};var ed=function(){};ed.__name__=!0,ed.__isInterface__=!0,ed.prototype={__class__:ed};var eh=function(e){null==e&&(e=""),this.contents=e};eh.__name__=!0,eh.__interfaces__=[ed],eh.prototype={toString:function(){return this.contents},__class__:eh};var ep=function(e){this.closeBracket="",this.openBracket="",this.contents=[],null!=e&&(this.openBracket=e.charAt(0),this.closeBracket=e.charAt(1))};ep.__name__=!0,ep.__interfaces__=[ed],ep.prototype={toString:function(){for(var e=this.openBracket,t=0,n=this.contents;t<n.length;)e+=n[t++].toString();return e+this.closeBracket},__class__:ep};var ef=function(){};ef.__name__=!0,ef.__isInterface__=!0,ef.prototype={__class__:ef};var eg=function(e,t,n,r){this.alwaysDirty=!1,this.gl=e,this.name=t,this.location=n,this.dirty=!0,this.data=r};eg.__name__=!0,eg.prototype={__class__:eg};var em=function(e,t,n,r){null==r&&(r=!1),eg.call(this,e,t,n,r)};em.__name__=!0,em.__interfaces__=[ef],em.__super__=eg,em.prototype=n(eg.prototype,{apply:function(){this.gl.uniform1i(this.location,this.data?1:0),this.dirty=!1},__class__:em});var ev=function(e,t,n,r){this.alwaysDirty=!1,this.gl=e,this.name=t,this.location=n,this.dirty=!0,this.data=r};ev.__name__=!0,ev.prototype={__class__:ev};var e_=function(e,t,n,r){null==r&&(r=0),ev.call(this,e,t,n,r)};e_.__name__=!0,e_.__interfaces__=[ef],e_.__super__=ev,e_.prototype=n(ev.prototype,{apply:function(){this.gl.uniform1f(this.location,this.data),this.dirty=!1},__class__:e_});var ey=function(e,t,n,r){this.alwaysDirty=!1,this.gl=e,this.name=t,this.location=n,this.dirty=!0,this.data=r};ey.__name__=!0,ey.prototype={__class__:ey};var ex=function(e,t,n,r){null==r&&(r=0),ey.call(this,e,t,n,r)};ex.__name__=!0,ex.__interfaces__=[ef],ex.__super__=ey,ex.prototype=n(ey.prototype,{apply:function(){this.gl.uniform1i(this.location,this.data),this.dirty=!1},__class__:ex});var eb=function(e,t,n,r){this.alwaysDirty=!1,this.gl=e,this.name=t,this.location=n,this.dirty=!0,this.data=r};eb.__name__=!0,eb.prototype={__class__:eb};var eS=function(e,t,n,r){null==r&&(r=!1),this.gpuSideValue=-1,this.cube=r,this.type=r?34067:3553,eb.call(this,e,t,n,null)};eS.__name__=!0,eS.__interfaces__=[ef],eS.__super__=eb,eS.prototype=n(eb.prototype,{apply:function(){if(null!=this.data){var e=33984+this.samplerIndex;eS.lastActiveTexture!=e&&(this.gl.activeTexture(e),eS.lastActiveTexture=e),this.gl.bindTexture(this.type,this.data),this.gpuSideValue!=this.samplerIndex&&(this.gl.uniform1i(this.location,this.samplerIndex),this.gpuSideValue=this.samplerIndex)}},__class__:eS});var ew=function(e,t,n,r){this.alwaysDirty=!1,this.gl=e,this.name=t,this.location=n,this.dirty=!0,this.data=r};ew.__name__=!0,ew.prototype={__class__:ew};var eP=function(e,t,n,r,i){null==i&&(i=0),null==r&&(r=0);var a=r,o=i;null==i&&(o=0),null==r&&(a=0);var s=new Float32Array(2);s[0]=a,s[1]=o,ew.call(this,e,t,n,s)};eP.__name__=!0,eP.__interfaces__=[ef],eP.__super__=ew,eP.prototype=n(ew.prototype,{apply:function(){this.gl.uniform2f(this.location,this.data[0],this.data[1]),this.dirty=!1},__class__:eP});var eC=function(e,t,n,r){this.alwaysDirty=!1,this.gl=e,this.name=t,this.location=n,this.dirty=!0,this.data=r};eC.__name__=!0,eC.prototype={__class__:eC};var eF=function(e,t,n,r,i){this.arraySize=r,null==i&&(this.buffer=new Float32Array(2*r)),eC.call(this,e,t,n,this.buffer)};eF.__name__=!0,eF.__interfaces__=[ef],eF.__super__=eC,eF.prototype=n(eC.prototype,{apply:function(){this.gl.uniform2fv(this.location,this.data),this.dirty=!1},__class__:eF});var eT=function(e,t,n,r,i){this.arraySize=r,null==i&&(this.buffer=new Float32Array(4*r)),eC.call(this,e,t,n,this.buffer)};eT.__name__=!0,eT.__interfaces__=[ef],eT.__super__=eC,eT.prototype=n(eC.prototype,{apply:function(){this.gl.uniform4fv(this.location,this.data),this.dirty=!1},__class__:eT});var eA,eR=function(e){c.call(this,e)};function eD(e,n){var r;return null==n?null:(null==n.__id__&&(n.__id__=t.$haxeUID++),null==e.hx__closures__?e.hx__closures__={}:r=e.hx__closures__[n.__id__],null==r&&(r=n.bind(e),e.hx__closures__[n.__id__]=r),r)}eR.__name__=!0,eR.__super__=c,eR.prototype=n(c.prototype,{createProperties:function(){c.prototype.createProperties.call(this);var e=new eS(this.gl,"texture",null,!1);this.texture=e,this._uniforms.push(e),e=new ec("vertexPosition",0,2),this.vertexPosition=e,this._attributes.push(e),this._aStride+=8},initSources:function(){this._vertSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nattribute vec2 vertexPosition;\n	varying vec2 texelCoord;\n	void main(){\n		texelCoord = vertexPosition;\n		gl_Position = vec4(vertexPosition*2.0 - 1.0, 0.0, 1.0 );\n	}\n",this._fragSource="\n#ifdef GL_ES\nprecision highp float;\nprecision highp sampler2D;\n#endif\n\nuniform sampler2D texture;\n	varying vec2 texelCoord;\n	void main(){\n		gl_FragColor = texture2D(texture, texelCoord);\n	}\n"},__class__:eR}),t.$haxeUID|=0,"undefined"!=typeof performance&&"function"==typeof performance.now&&(D.now=performance.now.bind(performance)),Object.defineProperty(String.prototype,"__class__",{value:String,enumerable:!1,writable:!0}),String.__name__=!0,Array.__name__=!0;var eB={},eM={},eO=Number,eE=Boolean,ek={},eL={};er.__toStr=({}).toString,i.formatMode=i.determineConsoleFormatMode(),i.logPrefix="<b,gray>><//> ",i.errorPrefix="<b,red>></b> ",i.argSeparator=" ",i.formatTagPattern=new r("(\\\\)?<(/)?([^><{}\\s]*|{[^}<>]*})>","g");var ej,eV="\nvec4 sampleLumaLogoTexture(vec2 uv) {\n	// fraction of viewport\n	float displayWidth = 0.8;\n	float aspectRatio = 2048.0/582.0;\n\n	// we want to display the texture at this width in the center of the viewport\n	// we workout a new uv coordinate that will sample the texture at this width\n\n	vec2 uvClip = uv * 2. - 1.;\n\n	// scale up to display width\n	uvClip /= displayWidth;\n\n	// correct aspect ratio\n	uvClip.y *= aspectRatio / viewportAspectRatio;\n\n	vec2 uvCentered = uvClip * .5 + .5;\n\n	// if out of bounds, return 0\n	if (uvCentered.x < 0. || uvCentered.x > 1. || uvCentered.y < 0. || uvCentered.y > 1.) {\n		return vec4(0.);\n	}\n\n	return texture2D(lumaLogoTexture, uvCentered);\n}\n";y.capsCache=[],L.resources=new k(null,null,null,null,null,null),eu.PRECISION_QUALIFIERS=["lowp","mediump","highp"],eu.STORAGE_QUALIFIER_TYPES=((ej=new ee).h.const=["bool","int","float","vec2","vec3","vec4","bvec2","bvec3","bvec4","ivec2","ivec3","ivec4","mat2","mat3","mat4"],ej.h.attribute=["float","vec2","vec3","vec4","mat2","mat3","mat4"],ej.h.uniform=["bool","int","float","vec2","vec3","vec4","bvec2","bvec3","bvec4","ivec2","ivec3","ivec4","mat2","mat3","mat4","sampler2D","samplerCube"],ej.h.varying=["float","vec2","vec3","vec4","mat2","mat3","mat4"],ej),eS.lastActiveTexture=-1}(t,window)},2366:function(e,t,n){"use strict";function r(e){let{children:t}=e;return t}Object.defineProperty(t,"__esModule",{value:!0}),Object.defineProperty(t,"NoSSR",{enumerable:!0,get:function(){return r}}),n(63929)}},function(e){e.O(0,[4674,7061,3298,9622,2698,4128,9070,7375,1207,3080,6940,3477,1744],function(){return e(e.s=85205)}),_N_E=e.O()}]);